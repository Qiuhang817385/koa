{"version":3,"sources":["App.js","pages/home/Home.js","axios/axios.js","utils/utils.js","components/Header/Header.js","components/Footer/Footer.js","config/menuConfig.js","components/NavLeft/NavLeft.js","Admin.js","pages/login/Login.js","pages/ui/buttons/Button.js","pages/nomatch/Nomatch.js","pages/ui/modals/Modals.js","pages/ui/loadings/Loadings.js","pages/ui/notification/Notification.js","pages/ui/message/Message.js","pages/ui/tab/Tab.js","pages/ui/gallery/Gallery.js","pages/ui/carousel/Carousel.js","pages/ui/checkbox/checkbox.js","pages/ui/pagination/Pagination.js","pages/ui/timepicker/timepicker.js","pages/ui/description/descriptions.js","pages/ui/transfer/trans1.js","pages/ui/transfer/trans3.js","pages/ui/transfer/trans2.js","pages/ui/transfer/trans4.js","pages/ui/transfer/transfer.js","pages/ui/tree/tree1.js","pages/ui/tree/tree2.js","pages/ui/tree/tree3.js","pages/ui/tree/tree.js","pages/form/login/sty.js","pages/form/login/Form1.js","pages/form/login/Form2.js","pages/form/login/Form3.js","pages/form/login/Form4.js","pages/form/login/Form5.js","pages/form/login/Login.js","pages/form/register/Register.js","pages/table/basicTable/columns.js","components/ETable/EtableFun1.js","pages/table/basicTable/claTab.js","pages/table/basicTable/data.js","pages/table/basicTable/BasicTable.js","pages/table/HighTable/columns.js","pages/table/HighTable/HighTable.js","pages/city/OpenCityForm.js","pages/city/FilterForm.js","pages/city/data.js","pages/city/City.js","components/BaseForm/BaseForm.js","pages/order/data.js","pages/order/Order.js","pages/user/data.js","pages/user/updateForm.js","pages/user/User.js","pages/echarts/echartTheme.js","pages/echarts/bar/index.js","pages/echarts/bar/fn.js","pages/echarts/line/index.js","pages/echarts/line/fn.js","pages/echarts/pie/index.js","pages/echarts/pie/fn.js","pages/permission/data.js","pages/permission/RoleForm.js","pages/permission/PermEditForm.js","pages/permission/RoleAuth.js","pages/permission/permissions.js","pages/permission/req.js","Common.js","pages/order/detailInline.js","pages/user/detail.js","pages/bankForm/BankForm.js","router.js","redux/rootReducer.js","saga/rootSagas.js","redux/store.js","serviceWorker.js","index.js"],"names":["App","locale","zhCN","className","this","props","children","React","Component","Home","Axios","options","Promise","resolve","reject","JsonP","url","param","err","response","console","log","status","message","axios","method","baseURL","timeout","params","data","then","res","code","info","title","content","msg","baseApi","isMock","catch","e","_this","ajax","result","list","item_list","map","item","index","key","setState","Option","formateDate","date","getdate","month","time","Date","parseInt","getMonth","getDate","getFullYear","getHours","getMinutes","getSeconds","pagination","callback","curr","page","cur","onChange","current","pageSize","page_size","total","length","showTotal","showQuickJumper","getOptionList","forEach","push","value","id","name","updateSelectedItem","selectedRowKeys","selectedRows","selectedIds","selectedItem","Header","state","userName","sysTime","dayPictureUrl","weather","setInterval","Util","getTime","jsonp","encodeURIComponent","results","weather_data","menuType","span","src","alt","type","Footer","menuList","btnList","SubMenu","handleClick","NavLeft","renderMenu","Item","to","menuTreeNode","MenuConfig","onClick","mode","admin","Login","Buttons","loading","handleCloseLoading","prevState","handleChange","eve","target","size","disabled","PlusCircleTwoTone","twoToneColor","EditTwoTone","DeleteTwoTone","shape","SearchOutlined","BulbTwoTone","DownCircleTwoTone","Group","LeftCircleTwoTone","RightCircleTwoTone","Nomatch","Modals","showModal1","showModal2","showModal3","showModal4","handleOpen","Target","handleConfirm","onOk","onCancel","alert","visible","okText","cancelText","style","top","centered","Loadings","antIcon","LoadingOutlined","fontSize","spin","antIcon2","indicator","SyncOutlined","description","tip","Notifications","openNotification","notification","openNotification2","dir","config","placement","openNotificationIcon","Icon","open","icon","SmileOutlined","color","Message","showMessage","TabPane","Tab","newTabIndex","onEdit","targetKey","action","add","panes","activeKey","remove","lastIndex","pane","i","filter","defaultActiveKey","tab","gallery","imgList","marginBottom","cover","oppenGallery","Meta","gutter","carousel","autoplay","effect","Checkboxs","useState","checked","setChecked","setDisabled","checkedList","setCheckedList","indeterminate","setIndeterminate","checkAll","setCheckAll","plainOptions","defaultValue","label","prev","Paginations","cpage","setCpage","onShowSizeChange","handleOnChange","pageNumber","defaultCurrent","showSizeChanger","simple","range","itemRender","originalElement","RangePicker","Timepicker","dateString","onRangeChange","dateFormatList","picker","bordered","showTime","moment","format","disabledDate","disabledTime","disabledDateTime","disabledRangeTime","hideDisabledOptions","dateRender","border","borderRadius","start","end","endOf","disabledHours","splice","disabledMinutes","disabledSeconds","_","Descriptionss","text","column","xxl","xl","lg","md","sm","xs","layout","mockData","toString","oriTargetKeys","trans1","targetKeys","selectedKeys","nextTargetKeys","direction","moveKeys","handleSelectChange","sourceSelectedKeys","targetSelectedKeys","handleScroll","handleDisable","dataSource","titles","onSelectChange","onScroll","render","unCheckedChildren","checkedChildren","marginTop","trans2","getMock","chosen","Math","random","handleSearch","renderFooter","float","margin","showSearch","listStyle","width","height","operations","footer","onSearch","TableTransfer","leftColumns","rightColumns","restProps","showSelectAll","filteredItems","onItemSelectAll","onItemSelect","listSelectedKeys","listDisabled","columns","rowSelection","getCheckboxProps","onSelectAll","selected","treeSelectedKeys","diffKeys","difference","onSelect","pointerEvents","onRow","itemDisabled","includes","mockTags","tag","originTargetKeys","leftTableColumns","dataIndex","rightTableColumns","trans3","triggerDisable","triggerShowSearch","filterOption","inputValue","indexOf","TreeNode","treeData","isChecked","eventKey","TreeTransfer","transferDataSource","flatten","checkedKeys","blockNode","checkable","checkStrictly","defaultExpandAll","onCheck","node","generateTree","treeNodes","trans4","Transfers","disableCheckbox","Trees","defaultExpandedKeys","defaultSelectedKeys","defaultCheckedKeys","Tree2","expandedKeys","setExpandedKeys","setCheckedKeys","setSelectedKeys","autoExpandParent","setAutoExpandParent","onExpand","initTreeDate","isLeaf","Demo","setTreeData","loadData","setTimeout","origin","updateTreeData","labelCol","offset","wrapperCol","tailLayout","Form1","useForm","form","forceUpdate","useEffect","onFinish","values","onFieldsChange","onValuesChange","a","getFieldValue","rules","required","prefix","UserOutlined","placeholder","setFieldsValue","note","allowClear","noStyle","shouldUpdate","prevValues","currentValues","gender","htmlType","resetFields","Form2","min","max","TextArea","Form3","href","compact","display","colon","Form4","fields","setFields","newFields","CustomizedForm","changedFields","allFields","Form5","setVisible","Provider","onFormFinish","forms","basicForm","users","curValues","user","age","Text","ModalForm","prevVisibleRef","useRef","prevVisible","useResetFormOnCloseModal","submit","Register","tags","toUpperCase","record","marginRight","columns2","sexid","ETable","setSelectedRowKeys","setSelectedItem","selectedItemCheck","setSelectedItemCheck","setpagination","getItem","val","Array","isArray","getList","changeRows","selectKey","row_selection","pagi_nation","spinning","onRowClick","InitTable","Cll","selectedRowKeys22","listData","checkMore","selectedRow22","Etable","createRef","getData","func","axiosGet","address","BasicTable","setListData","selectItem","setselectItem","rowSelectChange","setSelectedRowKeys22","selectItem22","setselectItem22","rowSelectChange22","s2","s2Rows","ids","confirm","join","success","rec","sex","abc","fixed","columns3","sorter","b","HighTable","setDataSource","sortOrder","setSortOrder","columns4","handleDelete","scroll","y","x","filters","order","formItemLayout","FormItem","OpenCityForm","openCityForm","formRef","initialValues","city_id","op_mode","ref","FilterForm","arr","user_name","utils","requestList","City","formObj","setList","isShowOpenCity","setIsShowOpenCity","resF","setRes","Arr","getFieldsValue","BaseForm","fieldsValue","rangeValue","datePicker","filterSubmit","onReset","initFormList","formList","defaultV","formItemList","initValue","formLayout","marginLeft","onCheckBoxChange","defaultChecked","onRadioChange","onDateChange","checkedValues","distance","city","order_status","Order","setItem","history","useHistory","arrRes","order_sn","interest","isMarried","create","read","del","update","UpdateForm","updateForm","reset","labelcol","wrappercol","User","upvisible","setUpVisible","setTitle","setType","obj","baseForm","onCreate","onRead","onUpdate","onDel","username","CRUD","forceRender","Object","assign","old","updataOnOk","Bar","echarts","registerTheme","echartTheme","option","tooltip","trigger","xAxis","yAxis","series","theme","notMerge","lazyUpdate","legend","Line","stack","boundaryGap","areaStyle","Pie","orient","right","bottom","formatter","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","sort","roseType","animationType","animationEasing","animationDelay","idx","Utils","formatTime","RoleForm","RoleformRef","PermEditForm","PermformRef","onTreeCheck","patchMenuInfo","onTreeSelect","selectOnChange","tree","treeDatas","detailInfo","maxLength","role_name","menuInfo","RoleAuth","textAlign","AuthName","patchUserInfo","Permissions","handleCreateOpen","isRoleVisible","handleOKRoleSubmit","roleData","role","roleForm","handlePermissionOpen","roleItem","permEditForm","isPermissionVisible","menus","handleOKPerEditSubmit","formData","editData","willSendRoleData","handleUserAuthOpen","List","getAuthUserList","isUserVisible","handleOKUserSubmit","accessUserChange","MockData","iterator","user_id","concat","getEtableItem","items","Common","Detail","setResult","orderId","useParams","goBack","mobile","total_time","start_time","setTime","startTime","end_time","endTime","userId","find","BankForm","router","path","component","orderDeatil","userDeatil","exact","Notification","Messages","Gallery","Carousels","Pagination","Descriptions","LoginForm","RegisterForm","NoMatch","combineReducers","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","run","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.c2f1075d.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport { ConfigProvider } from 'antd';\n// import Admin from './Admin'\nclass App extends React.Component {\n  render () {\n    return (\n      <ConfigProvider locale={zhCN}>\n        <div className=\"App\">\n          {/* <Admin></Admin> */}\n          {this.props.children}\n        </div>\n      </ConfigProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\r\nimport './index.scss'\r\nexport default function Home () {\r\n  return (\r\n    <div className=\"home-wrap\">\r\n      欢迎光临\r\n    </div>\r\n  )\r\n}\r\n","import JsonP from 'jsonp';\r\nimport axios from 'axios';\r\nimport { Modal } from 'antd'\r\nexport default class Axios {\r\n  // 封装JSONP\r\n  static jsonp (options) {\r\n    // 再封装一层promise用来做错误处理\r\n    // 调用方式\r\n    // axios.jsonp({\r\n    //   url: ''\r\n    // }).then\r\n    return new Promise((resolve, reject) => {\r\n      JsonP(\r\n        options.url,\r\n        { param: 'callback' },\r\n        function (err, response) {\r\n          //to-do\r\n          console.log('response :', response);\r\n          if (response.status === 'success') {\r\n            resolve(response);\r\n          } else {\r\n            reject(response.message);\r\n          }\r\n        })\r\n    })\r\n  }\r\n  // 封装API\r\n  // 调用方式\r\n  // axios.ajax({\r\n  //   url: ''\r\n  // }).then\r\n  static ajax (options) {\r\n    // 使用loading\r\n    // let loading;\r\n    //如果有的接口不希望loading,做判断\r\n    // if (options.data && options.data.isShowLoading !== false) {\r\n    //   loading = document.getElementById('ajaxLoading');\r\n    //   loading.style.display = 'block'\r\n    // }\r\n    return new Promise((resolve, reject) => {\r\n      // axios的api写法\r\n      axios({\r\n        url: options.url,\r\n        method: 'get',\r\n        baseURL: '',\r\n        timeout: 5000,\r\n        params: (options.data && options.data.params) || '',\r\n        // then开始\r\n      }).then((res) => {\r\n        // 进度条\r\n        // if (options.data && options.data.isShowLoading !== false) {\r\n        //   loading = document.getElementById('ajaxLoading');\r\n        //   loading.style.display = 'none'\r\n        // }\r\n        // 进度条\r\n        // 状态判断\r\n        console.log('res :', res);\r\n        if (res.status === 200) {\r\n          let response = res.data;\r\n          if (response.code === \"0\") {\r\n            // resolve(response.result)\r\n            resolve(response)\r\n          } else {\r\n            Modal.info({\r\n              title: '提示',\r\n              content: response.msg\r\n            })\r\n          }\r\n        } else {\r\n          reject(res.data);\r\n        }\r\n        // 状态判断\r\n      })\r\n      // then结束\r\n    });\r\n  }\r\n\r\n\r\n\r\n  static axiosGet (options) {\r\n    let baseApi;\r\n    if (options.isMock) {\r\n      baseApi = \"http://www.qiuhang.club:7300/mock/5e8c119b00fbdf09dcf21f9f/bike/\"\r\n    } else {\r\n      baseApi = \"http://www.qiuhang.club:7300/mock/5e8c119b00fbdf09dcf21f9f/bike/\"\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n        url: options.url,\r\n        method: 'get',\r\n        baseURL: baseApi,\r\n        timeout: 5000,\r\n        params: (options.data && options.data.params) || '',\r\n      }).then((response) => {\r\n        if (response.status === 200) {\r\n          console.log('response :', response);\r\n          let res = response.data;\r\n          if (res.code === '0') {\r\n            resolve(res)\r\n          } else {\r\n            // 简单的错误拦截\r\n            Modal.info({\r\n              title: \"提示\",\r\n              content: res.msg\r\n            })\r\n          }\r\n        } else {\r\n          reject(response);\r\n        }\r\n      }).catch((e) => {\r\n        console.log(e)\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * 业务逻辑请求封装\r\n   * 可以把this传递给这个函数,这样这个函数就可以是this里面的setState方法了\r\n   * 我的组件使用的是useHook,所以可以新增一个参数判断是函数组件还是类组件,然后进行数据存储\r\n   */\r\n  static requestList (_this, url, params, isMock) {\r\n    let data = {\r\n      params, isMock\r\n    }\r\n    this.ajax({\r\n      url, data\r\n    }).then((data) => {\r\n      if (data && data.result) {\r\n        let list = data.result.item_list.map((item, index) => {\r\n          item.key = index;\r\n          return item;\r\n        });\r\n        _this.setState({\r\n          list\r\n          // 分页\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n}","import React from 'react';\r\nimport { Select } from 'antd'\r\nconst Option = Select.Option;\r\nexport default {\r\n  /**\r\n   * \r\n   * @param {日期} date \r\n   */\r\n  formateDate (date) {\r\n    if (!date) return '';\r\n    let time = new Date(date);\r\n    let getdate;\r\n    let month;\r\n    parseInt(time.getMonth()) < 10 ? month = '0' + (parseInt(time.getMonth()) + 1) : month = (parseInt(time.getMonth()) + 1)\r\n    parseInt(time.getDate()) < 10 ? getdate = '0' + time.getDate() : getdate = time.getDate();\r\n    return time.getFullYear() + '-' +\r\n      (month) + '-' +\r\n      (getdate) + \"   \" +\r\n      time.getHours() + \":\" +\r\n      time.getMinutes() + \":\" +\r\n      time.getSeconds();\r\n  },\r\n  pagination (data, callback) {\r\n    console.log('data :', data);\r\n    console.log('callback', callback)\r\n    let curr = parseInt(data.result.page);\r\n    let cur = curr;\r\n    console.log('curr :', curr);\r\n    console.log('cur :', cur);\r\n    let page = {\r\n      // 当前页的回调\r\n      onChange: (current) => {\r\n        cur = current;\r\n        callback && callback(current)\r\n        // 展示的问题,已经调整切换页面了\r\n      },\r\n      // 当前页\r\n      current: parseInt(cur),\r\n      // 每页条数\r\n      pageSize: data.result.page_size,\r\n      // 总数\r\n      total: data.result.item_list.length,\r\n      // 修改显示\r\n      showTotal: (total) => {\r\n        console.log('total :', total);\r\n        return `共${data.result.item_list.length}条`\r\n        // return `共${total}条`\r\n      },\r\n      // 是否快速跳转到某页\r\n      showQuickJumper: true\r\n    }\r\n    return page;\r\n\r\n  },\r\n  getOptionList (data) {\r\n    if (!data) {\r\n      return [];\r\n    }\r\n    let options = [] //[<Option value=\"0\" key=\"all_key\">全部</Option>];\r\n    data.forEach((item) => {\r\n      options.push(<Option value={item.id} key={item.id}>{item.name}</Option>)\r\n    })\r\n    return options;\r\n  },\r\n\r\n\r\n  /**\r\n    * ETable 行点击通用函数\r\n    * @param {*选中行的索引} selectedRowKeys\r\n    * @param {*选中行对象} selectedItem\r\n    */\r\n  updateSelectedItem (selectedRowKeys, selectedRows, selectedIds) {\r\n    if (selectedIds) {\r\n      this.setState({\r\n        selectedRowKeys,\r\n        selectedIds: selectedIds,\r\n        selectedItem: selectedRows\r\n      })\r\n    } else {\r\n      this.setState({\r\n        selectedRowKeys,\r\n        selectedItem: selectedRows\r\n      })\r\n    }\r\n  },\r\n}","import React, { Component } from 'react'\r\nimport { Row, Col, Button } from 'antd'\r\nimport axios from '../../axios/axios';\r\nimport Util from '../../utils/utils'\r\nimport './index.scss'\r\nexport default class Header extends Component {\r\n  state = {\r\n    userName: '',\r\n    sysTime: '',\r\n    dayPictureUrl: '',\r\n    weather: '',\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.setState({\r\n      userName: '邱航',\r\n    })\r\n    setInterval(() => {\r\n      // 传递这个time完全没有必要啊\r\n      let sysTime = Util.formateDate(new Date().getTime());\r\n      this.setState({\r\n        sysTime\r\n      })\r\n    }, 1000)\r\n    // this.getWeatherAPIData();\r\n  }\r\n  getWeatherAPIData () {\r\n    let city = '秦皇岛';\r\n    axios.jsonp({\r\n      url: 'http://api.map.baidu.com/telematics/v3/weather?location=' + encodeURIComponent(city) + '&output=json&ak=3p49MVra6urFRGOT9s8UBWr2'\r\n    }).then((res) => {\r\n      console.log('res :', res);\r\n      if (res.status === 'success') {\r\n        let data = res.results[0].weather_data[0];\r\n        console.log('data :', data);\r\n        this.setState({\r\n          dayPictureUrl: data.dayPictureUrl,\r\n          weather: data.weather\r\n        })\r\n      }\r\n    })\r\n  }\r\n  render () {\r\n    const { menuType } = this.props;\r\n    const { sysTime, userName, dayPictureUrl, weather } = this.state;\r\n    return (\r\n      <div className=\"header\">\r\n        <Row className=\"header-top\">\r\n          {\r\n            menuType ? <Col span={6} className=\"logoIcon\">\r\n              <img src=\"/assets/logo-ant.svg\" alt=\"1\" />\r\n              <span>通用管理器</span>\r\n            </Col> : ''\r\n          }\r\n          <Col span={menuType ? 18 : 24}>\r\n            <span>欢迎,{userName}</span>\r\n            <Button type=\"primary\">退出</Button>\r\n          </Col>\r\n        </Row>\r\n        {\r\n          menuType ? '' : <Row className=\"breadcrumb\">\r\n            <Col span={4} className=\"breadcrumb-title\">\r\n              {/* 面包屑 */}\r\n              首页\r\n            </Col>\r\n            <Col span={20} className=\"weather\">\r\n              <span className=\"date\">{sysTime}</span>\r\n              <span className=\"weather-img\">\r\n                <img src={dayPictureUrl} alt=\"\" />\r\n              </span>\r\n              <span className=\"weather-detail\">\r\n                {weather}\r\n              </span>\r\n            </Col>\r\n          </Row>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './index.scss';\r\nexport default class Footer extends Component {\r\n  render () {\r\n    return (\r\n      <div className=\"footer\">\r\n        Copyright ©2020-2020  版权所有 保留一切权利\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","/**\r\n * 用于配置左侧菜单栏\r\n */\r\nconst menuList = [\r\n  {\r\n    title: '首页',\r\n    key: '/home'\r\n  },\r\n  {\r\n    title: 'UI',\r\n    key: '/ui',\r\n    children: [\r\n      {\r\n        title: '按钮',\r\n        key: '/ui/buttons',\r\n      },\r\n\r\n      {\r\n        title: '弹框',\r\n        key: '/ui/modals',\r\n      },\r\n      {\r\n        title: 'Loading',\r\n        key: '/ui/loadings',\r\n      },\r\n      {\r\n        title: '通知提醒',\r\n        key: '/ui/notification',\r\n      },\r\n      {\r\n        title: '全局Message',\r\n        key: '/ui/messages',\r\n      },\r\n      {\r\n        title: 'Tab页签',\r\n        key: '/ui/tabs',\r\n      },\r\n      {\r\n        title: '图片画廊',\r\n        key: '/ui/gallery',\r\n      },\r\n      {\r\n        title: '轮播图',\r\n        key: '/ui/carousel',\r\n      },\r\n      {\r\n        title: '分页',\r\n        key: '/ui/pagination',\r\n      },\r\n      {\r\n        title: '复选框',\r\n        key: '/ui/checkboxs',\r\n      },\r\n      {\r\n        title: '时间控件',\r\n        key: '/ui/timepicker',\r\n      },\r\n      {\r\n        title: '穿梭框',\r\n        key: '/ui/transfer',\r\n      },\r\n      {\r\n        title: '树形结构',\r\n        key: '/ui/tree',\r\n      },\r\n      {\r\n        title: '描述列表',\r\n        key: '/ui/description',\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: '表单',\r\n    key: '/form',\r\n    children: [\r\n      {\r\n        title: '登录',\r\n        key: '/form/login',\r\n      },\r\n      {\r\n        title: '注册',\r\n        key: '/form/reg',\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: '表格',\r\n    key: '/table',\r\n    children: [\r\n      {\r\n        title: '基础表格',\r\n        key: '/table/basic',\r\n      },\r\n      {\r\n        title: '高级表格',\r\n        key: '/table/high',\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: '富文本',\r\n    key: '/rich'\r\n  },\r\n  {\r\n    title: '城市管理',\r\n    key: '/city'\r\n  },\r\n  {\r\n    title: '订单管理',\r\n    key: '/order',\r\n    btnList: [\r\n      {\r\n        title: '订单详情',\r\n        key: 'detail'\r\n      },\r\n      {\r\n        title: '结束订单',\r\n        key: 'finish'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: '员工管理',\r\n    key: '/user'\r\n  },\r\n  {\r\n    title: '银行表单',\r\n    key: '/bankForm'\r\n  },\r\n  {\r\n    title: '图标',\r\n    key: '/charts',\r\n    children: [\r\n      {\r\n        title: '柱形图',\r\n        key: '/charts/bar'\r\n      },\r\n      {\r\n        title: '饼图',\r\n        key: '/charts/pie'\r\n      },\r\n      {\r\n        title: '折线图',\r\n        key: '/charts/line'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: '权限设置',\r\n    key: '/permission'\r\n  }\r\n]\r\nexport default menuList;","import React, { Component } from 'react'\r\nimport MenuConfig from '../../config/menuConfig'\r\nimport { Menu } from 'antd';\r\nimport { Link } from 'react-router-dom'\r\nimport \"./index.scss\";\r\n// import { Link } from 'react-router-dom'\r\nconst { SubMenu } = Menu;\r\nfunction handleClick (e) {\r\n  console.log('click', e);\r\n}\r\nexport default class NavLeft extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      menuTreeNode: null\r\n    }\r\n  }\r\n  componentDidMount () {\r\n    console.log('menuConfig :', MenuConfig);\r\n    const menuTreeNode = this.renderMenu(MenuConfig);\r\n    console.log('menuTreeNode :', menuTreeNode);\r\n    this.setState({\r\n      menuTreeNode\r\n    })\r\n  }\r\n  renderMenu = (data) => {\r\n    return data.map((item) => {\r\n      if (item.children) {\r\n        return (\r\n          // 如果有,首先返回的是一级菜单,在一级菜单里面调用,再返回二级菜单\r\n          <SubMenu title={item.title} key={item.key}>\r\n            {this.renderMenu(item.children)}\r\n          </SubMenu>\r\n        )\r\n      }\r\n      return (<Menu.Item title={item.title} key={item.key}>\r\n        <Link to={item.key}>\r\n          {item.title}\r\n        </Link>\r\n      </Menu.Item>)\r\n\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <>\r\n        <div className=\"logo\">\r\n          {/* 图片静态资源放到public底下的assets目录\r\n            这里的/就是public目录了\r\n          */}\r\n          <img src=\"/assets/logo-ant.svg\" alt=\"\" />\r\n          <h1>管理系统</h1>\r\n        </div>\r\n        <Menu onClick={handleClick} mode=\"vertical\">\r\n          {this.state.menuTreeNode}\r\n        </Menu>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Row, Col } from \"antd\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport NavLeft from \"./components/NavLeft/NavLeft\";\r\nimport './style/common.scss'\r\nexport default class admin extends React.Component {\r\n  render () {\r\n    return (\r\n      <>\r\n        <Row className=\"container\">\r\n          <Col span={4} className=\"nav-left\">\r\n            <NavLeft />                          {/* 左侧 */}\r\n          </Col>\r\n          <Col span={20} className=\"main\">       {/* 右侧 */}\r\n            <Header />                           {/* 上 */}\r\n            <Row className=\"content\">            {/* 中 */}\r\n              {this.props.children}\r\n            </Row>\r\n            <Footer />                           {/* 下 */}\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Login extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        Login\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, Radio } from 'antd';\r\nimport { PlusCircleTwoTone, LeftCircleTwoTone, RightCircleTwoTone, DownCircleTwoTone, BulbTwoTone, SearchOutlined, DeleteTwoTone, EditTwoTone } from '@ant-design/icons';\r\nimport './style.scss'\r\nexport default class Buttons extends Component {\r\n  state = {\r\n    loading: true\r\n  }\r\n  handleCloseLoading = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        loading: !prevState.loading\r\n      }\r\n    })\r\n  }\r\n  handleChange = (eve) => {\r\n    const e = eve.target.value\r\n    this.setState({\r\n      size: e\r\n    })\r\n  }\r\n  render () {\r\n    return (\r\n      <>\r\n        <Card title=\"基础按钮\" className=\"card-wrap\">\r\n          <Button type=\"primary\">主按钮</Button>\r\n          {/* 增删改一般主按钮\r\n                        负按钮  关闭 */}\r\n          <Button>默认按钮</Button>\r\n          <Button type=\"dashed\">虚线按钮</Button>\r\n          <Button type=\"danger\">危险按钮</Button>\r\n          <Button type=\"link\">链接按钮</Button>\r\n          <Button disabled>不可用按钮</Button>\r\n        </Card>\r\n        <Card title=\"图形按钮\" className=\"card-wrap\">\r\n          <Button><PlusCircleTwoTone twoToneColor=\"#52c41a\" />创建</Button>\r\n          <Button><EditTwoTone twoToneColor=\"#52c41a\" />编辑</Button>\r\n          <Button><DeleteTwoTone twoToneColor=\"#52c41a\" />删除</Button>\r\n          <Button shape=\"circle\" ><SearchOutlined />圆形搜索</Button>\r\n          <Button><BulbTwoTone twoToneColor=\"#52c41a\" />搜索</Button>\r\n          <Button><DownCircleTwoTone twoToneColor=\"#52c41a\" />下载</Button>\r\n        </Card>\r\n        <Card title=\"Loading按钮\" className=\"card-wrap\">\r\n          <Button type=\"primary\" loading={this.state.loading}>加载</Button>\r\n          <Button type=\"primary\" shape=\"circle\" loading={this.state.loading} >加载</Button>\r\n          <Button loading={this.state.loading} >点击加载</Button>\r\n          <Button type=\"dashed\" shape=\"circle\" loading={this.state.loading} ></Button>\r\n          <Button type=\"primary\" onClick={this.handleCloseLoading}>切换状态</Button>\r\n        </Card>\r\n        <Card title=\"按钮组\" className=\"card-wrap\">\r\n          <Button.Group>\r\n            <Button type=\"primary\"  ><LeftCircleTwoTone twoToneColor=\"#52c41a\" />返回</Button>\r\n            <Button type=\"primary\" >前进<RightCircleTwoTone twoToneColor=\"#52c41a\" /></Button>\r\n          </Button.Group>\r\n        </Card>\r\n        <Card title=\"按钮尺寸\" className=\"card-wrap\">\r\n          <Radio.Group value={this.state.size} onChange={this.handleChange}>\r\n            <Radio value=\"small\">小</Radio>\r\n            <Radio value=\"default\">中</Radio>\r\n            <Radio value=\"large\">大</Radio>\r\n          </Radio.Group>\r\n          <Button type=\"primary\" size={this.state.size}>Imooc</Button>\r\n          {/* 增删改一般主按钮\r\n                        负按钮  关闭 */}\r\n          <Button size={this.state.size}>Imooc</Button>\r\n          <Button type=\"dashed\" size={this.state.size}>dashed</Button>\r\n          <Button type=\"danger\" size={this.state.size}>danger</Button>\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Nomatch extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        Nomatch\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, Modal } from 'antd'\r\nimport './style.scss'\r\nimport '../ui.scss';\r\nexport default class Modals extends Component {\r\n  state = {\r\n    showModal1: false,\r\n    showModal2: false,\r\n    showModal3: false,\r\n    showModal4: false\r\n  }\r\n  // 计算属性\r\n  handleOpen = (Target) => {\r\n    console.log('Target :', Target);\r\n    this.setState({\r\n      // 怎么利用传进来的变量\r\n      [Target]: true\r\n    })\r\n  }\r\n\r\n  handleConfirm = (type) => {\r\n    Modal[type]({\r\n      title: '确认',\r\n      content: '这里是内容区域',\r\n      onOk () {\r\n        // alert('ok')\r\n        console.log('ok')\r\n      },\r\n      onCancel () {\r\n        alert('cancel')\r\n      }\r\n    })\r\n  }\r\n  render () {\r\n    return (\r\n      <>\r\n        {/* 直接使用模态框组件 */}\r\n        <Card title=\"基础模态框\" className=\"card-wrap\">\r\n          <Button type=\"primary\" onClick={() => this.handleOpen('showModal1')}>Open</Button>\r\n          <Button type=\"primary\" onClick={() => this.handleOpen('showModal2')}>自定义页脚</Button>\r\n          <Button type=\"primary\" onClick={() => this.handleOpen('showModal3')}>顶部20px弹框</Button>\r\n          <Button type=\"primary\" onClick={() => this.handleOpen('showModal4')}>水平垂直居中</Button>\r\n        </Card>\r\n        {/* 使用模态框行内代码 */}\r\n        <Card title=\"信息确认框\" className=\"card-wrap\">\r\n          <Button type=\"primary\" onClick={() => this.handleConfirm('confirm')}>Confirm</Button>\r\n          <Button type=\"primary\" onClick={() => this.handleConfirm('info')}>Info</Button>\r\n          <Button type=\"primary\" onClick={() => this.handleConfirm('success')}>Success</Button>\r\n          <Button type=\"primary\" onClick={() => this.handleConfirm('warning')}>warning</Button>\r\n        </Card>\r\n        {/* Open */}\r\n        <Modal\r\n          title=\"标题\"\r\n          visible={this.state.showModal1}\r\n          onOk={() => { this.setState({ showModal1: false }); console.log('OK') }}\r\n          onCancel={() => { this.setState({ showModal1: false }) }}\r\n        >\r\n          <p>内容</p>\r\n        </Modal>\r\n        {/* 自定义页脚 */}\r\n        <Modal\r\n          title=\"标题\"\r\n          visible={this.state.showModal2}\r\n          okText=\"这是确定文本\"\r\n          cancelText=\"这是否定文本\"\r\n          onOk={() => { this.setState({ showModal2: false }); console.log('OK') }}\r\n          onCancel={() => { this.setState({ showModal2: false }) }}\r\n        >\r\n          <p>内容</p>\r\n        </Modal>\r\n        {/* 顶部20px弹框 */}\r\n        <Modal\r\n          title=\"React\"\r\n          visible={this.state.showModal3}\r\n          // 我还没有引入就可以修改???\r\n          style={{ top: '20px' }}\r\n          onOk={() => { this.setState({ showModal3: false }); console.log('OK') }}\r\n          onCancel={() => { this.setState({ showModal3: false }) }}\r\n        >\r\n          <p>React</p>\r\n        </Modal>\r\n        {/* 水平垂直居中,centered */}\r\n        <Modal\r\n          title=\"React\"\r\n          visible={this.state.showModal4}\r\n          // 对话框外层容器的类名\r\n          centered\r\n          // wrapClassName=\"vertical-center-modal\"\r\n          onOk={() => { this.setState({ showModal4: false }); console.log('OK') }}\r\n          onCancel={() => { this.setState({ showModal4: false }) }}\r\n        >\r\n          <p>React</p>\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, Spin, Alert } from 'antd';\r\nimport { LoadingOutlined, PlusCircleTwoTone, SyncOutlined } from '@ant-design/icons';\r\nimport './style.scss';\r\nexport default class Loadings extends Component {\r\n  // 两种使用spin的方式\r\n  //  方式一:直接使用icon图标+spin\r\n  //  方式二:使用spin图标+icon+spin\r\n  //  方式二可以自定义描述文案+大小\r\n  render () {\r\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n    const antIcon2 = <PlusCircleTwoTone twoToneColor=\"#52c41a\" spin />\r\n    // const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n    return (\r\n      <>\r\n        <Card title=\"Spin的用法\" className=\"card-wrap\">\r\n          <Spin size=\"small\" />\r\n          <Spin />\r\n          <Spin size=\"large\" />\r\n          {/* 指定使用什么样子的图标 */}\r\n          <Spin indicator={antIcon} />\r\n          {/* 把spin用在其他组件里面 */}\r\n          <Spin size=\"large\" indicator={antIcon2} />\r\n\r\n          <SyncOutlined spin />\r\n        </Card>\r\n        <Card title=\"内容遮罩\" className=\"card-wrap\">\r\n          <Alert\r\n            message=\"React\"\r\n            description=\"这里是info描述\"\r\n            type=\"info\"\r\n          ></Alert>\r\n\r\n          <Spin>\r\n            <Alert\r\n              message=\"React\"\r\n              description=\"这里是warning描述\"\r\n              type=\"warning\"\r\n            ></Alert>\r\n          </Spin>\r\n\r\n          <Spin tip=\"这里是提示文字\" indicator={antIcon2}>\r\n            <Alert\r\n              message=\"React\"\r\n              description=\"这里是success描述\"\r\n              type=\"success\"\r\n            ></Alert>\r\n          </Spin>\r\n\r\n          <Spin>\r\n            <Button>这是一个按钮</Button>\r\n          </Spin>\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, notification } from 'antd';\r\nimport { SmileOutlined, PlusCircleTwoTone, LeftCircleTwoTone, RightCircleTwoTone } from '@ant-design/icons';\r\nimport './style.scss'\r\nexport default class Notifications extends Component {\r\n  openNotification = (type) => {\r\n    notification[type]({\r\n      message: 'Message',\r\n      description: '描述',\r\n    })\r\n  }\r\n  openNotification2 = (type, dir) => {\r\n    if (dir) {\r\n      notification.config({\r\n        placement: dir\r\n      })\r\n    }\r\n    notification[type]({\r\n      message: '发工资了',\r\n      description: '这里是描述',\r\n      placement: dir\r\n    })\r\n  }\r\n  openNotificationIcon = (Icon) => {\r\n    notification.open({\r\n      message: 'Notification Title',\r\n      description:\r\n        'This is the content of the notification. This is the content of the notification. This is the content of the notification.',\r\n      // icon: <SmileOutlined style={{ color: '#108ee9' }} />,\r\n      icon: Icon,\r\n    });\r\n  }\r\n  render () {\r\n    return (\r\n      <>\r\n        <Card title=\"通知提醒框\" className=\"card-wrap\">\r\n          <Button type=\"primary\" onClick={() => this.openNotification('success')}>success</Button>\r\n          <Button type=\"primary\" onClick={() => this.openNotification('info')}>info</Button>\r\n          <Button type=\"primary\" onClick={() => this.openNotification('warning')}>warning</Button>\r\n          <Button type=\"primary\" onClick={() => this.openNotification('error')}>error</Button>\r\n        </Card>\r\n        <Card title=\"通知提醒框的方向\" className=\"card-wrap\">\r\n          <Button type=\"primary\" onClick={() => this.openNotification2('success', 'topLeft')}>topLeft</Button>\r\n          <Button type=\"primary\" onClick={() => this.openNotification2('info', 'topRight')}>topRight</Button>\r\n          <Button type=\"primary\" onClick={() => this.openNotification2('warning', 'bottomLeft')}>bottomLeft</Button>\r\n          <Button type=\"primary\" onClick={() => this.openNotification2('error', 'bottomRight')}>bottomRight</Button>\r\n        </Card>\r\n        <Card title=\"自定义图标\" className=\"card-wrap\">\r\n          <Button type=\"primary\" onClick={() => { this.openNotificationIcon(<SmileOutlined style={{ color: '#108ee9' }} />) }}>topLeft</Button>\r\n          <Button type=\"primary\" onClick={() => { this.openNotificationIcon(<PlusCircleTwoTone twoToneColor=\"#52c41a\" />) }}>topRight</Button>\r\n          <Button type=\"primary\" onClick={() => { this.openNotificationIcon(<LeftCircleTwoTone twoToneColor=\"#52c41a\" />) }}>bottomLeft</Button>\r\n          <Button type=\"primary\" onClick={() => { this.openNotificationIcon(<RightCircleTwoTone twoToneColor=\"#52c41a\" />) }}>bottomRight</Button>\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './style.scss'\r\nimport { Card, message, Button } from 'antd'\r\nexport default class Message extends Component {\r\n  showMessage = (type) => {\r\n    message[type]({\r\n      content: '这是内容',\r\n    })\r\n  }\r\n  render () {\r\n    return (\r\n      <>\r\n        <Card title=\"Message\" className=\"card-wrap\">\r\n          <Button type=\"primary\" onClick={() => this.showMessage('success')}>success</Button>\r\n          <Button type=\"primary\" onClick={() => this.showMessage('info')}>info</Button>\r\n          <Button type=\"primary\" onClick={() => this.showMessage('warning')}>warning</Button>\r\n          <Button type=\"primary\" onClick={() => this.showMessage('error')}>error</Button>\r\n          <Button type=\"primary\" onClick={() => this.showMessage('loading')}>loading</Button>\r\n        </Card>\r\n        {/* <Message></Message> */}\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './style.scss'\r\nimport { Card, Tabs, message } from 'antd'\r\nimport { PlusCircleTwoTone, LeftCircleTwoTone, RightCircleTwoTone } from '@ant-design/icons';\r\nconst { TabPane } = Tabs;\r\nexport default class Tab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const panes = [\r\n      { title: 'Tab 1', content: 'Content of Tab Pane 1', key: '1' },\r\n      { title: 'Tab 2', content: 'Content of Tab Pane 2', key: '2' },\r\n    ];\r\n    this.state = {\r\n      activeKey: panes[0].key,\r\n      panes,\r\n    };\r\n  }\r\n  // 要定义初始变量\r\n  newTabIndex = 0;\r\n  onEdit = (targetKey, action) => {\r\n    this[action](targetKey);\r\n  }\r\n  add = () => {\r\n    const { panes } = this.state;\r\n    const activeKey = `newTab${this.newTabIndex++}`;\r\n    panes.push({ title: 'New Tab', content: 'New Tab Pane', key: activeKey });\r\n    this.setState({ panes, activeKey });\r\n  };\r\n\r\n  remove = targetKey => {\r\n    let { activeKey } = this.state;\r\n    let lastIndex;\r\n    this.state.panes.forEach((pane, i) => {\r\n      if (pane.key === targetKey) {\r\n        lastIndex = i - 1;\r\n      }\r\n    });\r\n    const panes = this.state.panes.filter(pane => pane.key !== targetKey);\r\n    // 当要关闭的和当前打开的是同一个key的时候,过滤掉当前激活的,并且默认打开第一个\r\n    if (panes.length && activeKey === targetKey) {\r\n      if (lastIndex >= 0) {\r\n        activeKey = panes[lastIndex].key;\r\n      } else {\r\n        activeKey = panes[0].key;\r\n      }\r\n    }\r\n    this.setState({ panes, activeKey });\r\n  };\r\n  callback = (key) => {\r\n    message.info(\"选择了页签:\" + key)\r\n  };\r\n  onChange = (activeKey) => {\r\n    this.setState({\r\n      activeKey,\r\n    })\r\n  }\r\n  render () {\r\n    return (\r\n      <>\r\n        <Card title=\"Tab页签\" className=\"card-wrap\">\r\n          <Tabs defaultActiveKey=\"1\" onChange={this.callback}>\r\n            <TabPane tab=\"Tab 1\" key=\"1\">Content1</TabPane>\r\n            <TabPane tab=\"Tab 2\" key=\"2\" disabled>Content2</TabPane>\r\n            <TabPane tab=\"Tab 3\" key=\"3\">Content3</TabPane>\r\n          </Tabs>\r\n        </Card>\r\n\r\n        <Card title=\"TabIcon\" className=\"card-wrap\">\r\n          <Tabs defaultActiveKey=\"1\" onChange={this.callback}>\r\n            {/* 现在如果需要加图标,应该使用这种span嵌套式,否则key会出问题 */}\r\n            <TabPane tab={<span><PlusCircleTwoTone twoToneColor=\"#52c41a\" />Tab 1</span>} key=\"1\">Content1</TabPane>\r\n            <TabPane tab={<span><LeftCircleTwoTone twoToneColor=\"#52c41a\" />Tab 2</span>} key=\"2\">Content2</TabPane>\r\n            <TabPane tab={<span><RightCircleTwoTone twoToneColor=\"#52c41a\" />Tab 3</span>} key=\"3\">Content3</TabPane>\r\n            {/* 找不存在的话,需要img自定义设置 */}\r\n          </Tabs>\r\n        </Card>\r\n\r\n        <Card title=\"Tab动态增减\" className=\"card-wrap\">\r\n          <Tabs defaultActiveKey=\"1\" onChange={this.onChange} type=\"editable-card\"\r\n            activeKey={this.state.activeKey}\r\n            onEdit={this.onEdit}\r\n          >\r\n            {\r\n              this.state.panes.map((panes) => {\r\n                return (<TabPane\r\n                  tab={panes.title}\r\n                  key={panes.key}\r\n                >{panes.content}</TabPane>)\r\n              })\r\n            }\r\n          </Tabs>\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Row, Col } from 'antd';\r\nexport default class gallery extends Component {\r\n  render () {\r\n    const imgs = [\r\n      ['1.png', '2.png', '3.png', '4.jpg', '5.png'],\r\n      ['21.png', '13.png', '18.png', '9.jpg', '10.png'],\r\n      ['11.png', '12.png', '7.jpg', '14.png', '15.png'],\r\n      ['16.png', '17.png', '8.jpg', '19.png', '20.png'],\r\n      ['6.jpg', '22.png', '23.png', '24.png', '25.jpg'],\r\n    ]\r\n    const imgList = imgs.map((list) => {\r\n      return list.map((item, index) => {\r\n        return (\r\n          <Card\r\n            key={index}\r\n            style={{ marginBottom: 10 }}\r\n            cover={<img alt=\"n\" src={'/gallery/' + item}\r\n              onClick={() => this.oppenGallery(item)}\r\n            />}\r\n          >\r\n            <Card.Meta\r\n              title=\"react Admin\"\r\n              description=\"content\"\r\n            />\r\n          </Card>\r\n        )\r\n      })\r\n    })\r\n    return (\r\n      <>\r\n        <Row gutter={10}>\r\n          <Col span={5}>\r\n            {imgList[0]}\r\n          </Col>\r\n          <Col span={5}>\r\n            {imgList[1]}\r\n          </Col>\r\n          <Col span={5}>\r\n            {imgList[2]}\r\n          </Col>\r\n          <Col span={5}>\r\n            {imgList[3]}\r\n          </Col>\r\n          <Col span={4}>\r\n            {imgList[4]}\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Carousel } from 'antd';\r\nimport './style.scss'\r\nexport default class carousel extends Component {\r\n  render () {\r\n    return (\r\n      <>\r\n        <Card title='文字背景轮播' className=\"card-wrap\">\r\n          <Carousel autoplay effect=\"fade\">\r\n            <div><h3>1</h3></div>\r\n            <div><h3>2</h3></div>\r\n            <div><h3>3</h3></div>\r\n            <div><h3>4</h3></div>\r\n          </Carousel>\r\n        </Card>\r\n        <Card title='图片背景轮播' className=\"slider-wrap card-wrap\" >\r\n          <Carousel autoplay effect=\"fade\" >\r\n            <div className=\"imgwrap\">\r\n              <img src=\"/carousel-img/carousel-1.jpg\" alt=\"1\" />\r\n            </div>\r\n            <div className=\"imgwrap\">\r\n              <img src=\"/carousel-img/carousel-2.jpg\" alt=\"2\" />\r\n            </div>\r\n            <div className=\"imgwrap\">\r\n              <img src=\"/carousel-img/carousel-3.jpg\" alt=\"3\" />\r\n            </div>\r\n          </Carousel>\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Checkbox, Card, Button } from 'antd';\r\nimport './style.scss'\r\nexport default function Checkboxs () {\r\n  /**\r\n   * 受控\r\n   */\r\n  const [checked, setChecked] = useState(true);\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  /**\r\n   * 全选\r\n   */\r\n  const [checkedList, setCheckedList] = useState(['Apple', 'Orange']);\r\n  const [indeterminate, setIndeterminate] = useState(true);\r\n  const [checkAll, setCheckAll] = useState(false)\r\n\r\n  function onChange (e) {\r\n    console.log(`checked = ${e.target.checked}`);\r\n  }\r\n  const plainOptions = ['Apple', 'Pear', 'Orange'];\r\n  const options = [\r\n    { label: 'Apple', value: 'Apple' },\r\n    { label: 'Pear', value: 'Pear' },\r\n    { label: 'Orange', value: 'Orange' },\r\n  ];\r\n  const optionsWithDisabled = [\r\n    { label: 'Apple', value: 'Apple' },\r\n    { label: 'Pear', value: 'Pear' },\r\n    { label: 'Orange', value: 'Orange', disabled: false },\r\n  ];\r\n  /**\r\n   * 受控\r\n   */\r\n  let toggleChecked = () => {\r\n    setChecked((prev) => { return !prev })\r\n  };\r\n\r\n  let toggleDisable = () => {\r\n    setDisabled((prev) => { return !prev })\r\n  };\r\n  /**\r\n   * 全选\r\n   */\r\n  let onChangeAll = (checkedList) => {\r\n    setCheckedList(checkedList);\r\n    setIndeterminate(!!checkedList.length && checkedList.length < plainOptions.length);\r\n    setCheckAll(checkedList.length === plainOptions.length)\r\n  }\r\n  let onCheckAllChange = (e) => {\r\n    setCheckedList(e.target.checked ? plainOptions : [])\r\n    setIndeterminate(false)\r\n    setCheckAll(e.target.checked)\r\n  }\r\n  return (\r\n    <>\r\n      <Card title=\"复选框1\" className=\"card-wrap\">\r\n        <Checkbox onChange={onChange}>Checkbox</Checkbox>\r\n      </Card>\r\n      <Card title=\"从数组中生成\" className=\"card-wrap\">\r\n        <Checkbox.Group options={plainOptions} defaultValue={['Apple']} onChange={onChange} />\r\n        <hr />\r\n        <Checkbox.Group options={options} defaultValue={['Pear']} onChange={onChange} />\r\n        <hr />\r\n        <Checkbox.Group options={optionsWithDisabled} defaultValue={['Apple']} onChange={onChange} disabled />\r\n      </Card>\r\n      <Card title=\"受控\" className=\"card-wrap\">\r\n        <Checkbox onChange={onChange} checked={checked} disabled={disabled}>Checkbox</Checkbox>\r\n        <p>\r\n          <Button type=\"primary\" onClick={toggleChecked}>\r\n            {!checked ? 'Check' : 'Uncheck'}\r\n          </Button>\r\n          <Button type=\"primary\" onClick={toggleDisable}>\r\n            {!disabled ? 'Disable' : 'Enable'}\r\n          </Button>\r\n        </p>\r\n      </Card>\r\n      <Card title=\"全选\" className=\"card-wrap\">\r\n        <Checkbox\r\n          indeterminate={indeterminate}\r\n          onChange={onCheckAllChange}\r\n          checked={checkAll}\r\n        >\r\n          Check all\r\n          </Checkbox>\r\n        <Checkbox.Group\r\n          options={plainOptions}\r\n          value={checkedList}\r\n          onChange={onChangeAll}\r\n        />\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Card, Pagination, Button } from 'antd'\r\nimport './style.scss'\r\nexport default function Paginations () {\r\n  const [cpage, setCpage] = useState(3);\r\n  function onShowSizeChange (current, pageSize) {\r\n    console.log(current, pageSize);\r\n  }\r\n  // 这个功能默认就有\r\n  function handleOnChange (page, pageSize) {\r\n    console.log(page, pageSize);\r\n    setCpage(page)\r\n  }\r\n  // 快速跳转\r\n  function onChange (pageNumber) {\r\n    console.log('Page: ', pageNumber);\r\n  }\r\n  // 迷你版本\r\n  function showTotal (total) {\r\n    return `Total ${total} items`;\r\n  }\r\n  // 修改上一步和下一步\r\n  function itemRender (current, type, originalElement) {\r\n    if (type === 'prev') {\r\n      return <>Previous</>;\r\n    }\r\n    if (type === 'next') {\r\n      return <>Next</>;\r\n    }\r\n    return originalElement;\r\n  }\r\n  return (\r\n    <>\r\n      <Card title=\"基础分页\" className=\"card-wrap\">\r\n        <Pagination defaultCurrent={1} total={50} />\r\n      </Card>\r\n      <Card title=\"更多分页\" className=\"card-wrap\">\r\n        <Pagination defaultCurrent={6} total={500} />\r\n      </Card>\r\n      <Card title=\"改变每页显示条目数\" className=\"card-wrap\">\r\n        <Pagination\r\n          onChange={handleOnChange}\r\n          showSizeChanger\r\n          onShowSizeChange={onShowSizeChange}\r\n          defaultCurrent={3}\r\n          total={500}\r\n        />\r\n        <br />\r\n        <Pagination\r\n          showSizeChanger\r\n          onShowSizeChange={onShowSizeChange}\r\n          defaultCurrent={3}\r\n          total={500}\r\n          disabled\r\n        />\r\n\r\n      </Card>\r\n      <Card title=\"跳转\" className=\"card-wrap\">\r\n        <Pagination showQuickJumper defaultCurrent={2} total={500} onChange={onChange} />\r\n        <br />\r\n        <Pagination showQuickJumper defaultCurrent={2} total={500} onChange={onChange} disabled />\r\n      </Card>\r\n      {/* size:small */}\r\n      <Card title=\"迷你版本\" className=\"card-wrap\">\r\n        <Pagination size=\"small\" total={50} />\r\n        <Pagination size=\"small\" total={50} showSizeChanger showQuickJumper />\r\n        <Pagination size=\"small\" total={50} showTotal={showTotal} />\r\n      </Card>\r\n      {/* simple */}\r\n      <Card title=\"简单翻页\" className=\"card-wrap\">\r\n        <Pagination simple defaultCurrent={2} total={50} />\r\n      </Card>\r\n      <Card title=\"受控页码\" className=\"card-wrap\">\r\n        <Pagination\r\n          onChange={handleOnChange}\r\n          defaultCurrent={3}\r\n          total={50}\r\n          current={cpage}\r\n        />\r\n        <Button onClick={() => { setCpage(2) }}>跳转到第2页</Button>\r\n      </Card>\r\n      <Card title=\"数据总量\" className=\"card-wrap\">\r\n        <Pagination\r\n          total={85}\r\n          showTotal={total => `Total ${total} items`}\r\n          pageSize={20}\r\n          defaultCurrent={1}\r\n        />\r\n        <br />\r\n        <Pagination\r\n          total={85}\r\n          showTotal={(total, range) => `${range[0]}-${range[1]} of ${total} items`}\r\n          pageSize={20}\r\n          defaultCurrent={1}\r\n        />\r\n      </Card>\r\n      <Card title=\"修改上一步和下一步\" className=\"card-wrap\">\r\n        <Pagination total={50} itemRender={itemRender} />\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Card, DatePicker } from 'antd'\r\nimport moment from 'moment';\r\nimport './style.scss'\r\nimport locale from 'antd/es/date-picker/locale/zh_CN';\r\nimport 'moment/locale/zh-cn';\r\n// 国际化配置\r\nconst { RangePicker } = DatePicker;\r\nexport default function Timepicker () {\r\n  function onChange (date, dateString) {\r\n    /**\r\n     * date:moment对象\r\n     * dateString:正常字符串\r\n     */\r\n    console.log(date, dateString);\r\n  }\r\n  function onRangeChange (date, dateString) {\r\n    console.log('dateString :', dateString);\r\n    //dateString : (2) [\"2020-04-14 11:59:55\", \"2020-04-22 14:59:50\"]\r\n  }\r\n  /**\r\n   * 自定义格式\r\n   */\r\n  const dateFormat = 'YYYY/MM/DD';\r\n  const monthFormat = 'YYYY/MM';\r\n  const dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\r\n  return (\r\n    <>\r\n      <Card title=\"最简单用法\" className=\"card\">\r\n        <DatePicker onChange={onChange} />\r\n        <br />\r\n        <DatePicker onChange={onChange} picker=\"week\" />\r\n        <br />\r\n        <DatePicker onChange={onChange} picker=\"month\" />\r\n        <br />\r\n        <DatePicker onChange={onChange} picker=\"quarter\" />\r\n        <br />\r\n        <DatePicker onChange={onChange} picker=\"year\" />\r\n        <br />无边框\r\n        <DatePicker locale={locale} onChange={onChange} picker=\"year\" bordered={false} />\r\n      </Card>\r\n      <Card title=\"范围选择器\" className=\"card\">\r\n        <RangePicker />\r\n        <br />\r\n        <RangePicker showTime onChange={onRangeChange} />\r\n        <br />\r\n        <RangePicker picker=\"week\" />\r\n        <br />\r\n        <RangePicker picker=\"month\" />\r\n        <br />\r\n        <RangePicker picker=\"year\" />\r\n      </Card>\r\n      <Card title=\"自定义格式\" className=\"card\">\r\n        <DatePicker defaultValue={moment('2015/01/01', dateFormat)} format={dateFormat} />\r\n        <br />\r\n        <DatePicker defaultValue={moment('01/01/2015', dateFormatList[0])} format={dateFormatList} />\r\n        <br />\r\n        <DatePicker defaultValue={moment('2015/01', monthFormat)} format={monthFormat} picker=\"month\" />\r\n        <br />\r\n        <RangePicker\r\n          defaultValue={[moment('2015/01/01', dateFormat), moment('2015/01/01', dateFormat)]}\r\n          format={dateFormat}\r\n        />\r\n      </Card>\r\n      <Card title=\"不可选日期和时间\" className=\"card\">\r\n        <DatePicker\r\n          format=\"YYYY-MM-DD HH:mm:ss\"\r\n          disabledDate={disabledDate}\r\n          disabledTime={disabledDateTime}\r\n          showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }}\r\n        />\r\n        <br />\r\n        <DatePicker picker=\"month\" disabledDate={disabledDate} />\r\n        <br />\r\n        <RangePicker disabledDate={disabledDate} />\r\n        <br />\r\n        {/* 可用 disabledDate 和 disabledTime 分别禁止选择部分日期和时间，\r\n        其中 disabledTime 需要和 showTime 一起使用。 */}\r\n        <RangePicker\r\n          disabledDate={disabledDate}\r\n          disabledTime={disabledRangeTime}\r\n          // 配合showTime使用,当选中日期的时候,会自动给你选择好时间\r\n          showTime={{\r\n            hideDisabledOptions: true,\r\n            defaultValue: [moment('00:00:00', 'HH:mm:ss'), moment('11:59:59', 'HH:mm:ss')],\r\n          }}\r\n          format=\"YYYY-MM-DD HH:mm:ss\"\r\n          onChange={onRangeChange}\r\n        />\r\n      </Card>\r\n      <Card title=\"定制日期单元格\" className=\"card\">\r\n        <DatePicker\r\n          locale={locale}\r\n          dateRender={current => {\r\n            const style = {};\r\n            if (current.date() === 1) {\r\n              style.border = '1px solid #1890ff';\r\n              style.borderRadius = '50%';\r\n            }\r\n            return (\r\n              <div className=\"ant-picker-cell-inner\" style={style}>\r\n                {current.date()}\r\n              </div>\r\n            );\r\n          }}\r\n        />\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n/**\r\n * 不可选日期和时间\r\n */\r\n\r\nfunction range (start, end) {\r\n  const result = [];\r\n  for (let i = start; i < end; i++) {\r\n    result.push(i);\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction disabledDate (current) {\r\n  // current是一个moment对象\r\n  // console.log('current', current)\r\n  // Can not select days before today and today\r\n  return current && current < moment().endOf('day');\r\n}\r\n\r\nfunction disabledDateTime () {\r\n  return {\r\n    disabledHours: () => range(0, 24).splice(4, 20),\r\n    disabledMinutes: () => range(30, 60),\r\n    disabledSeconds: () => [55, 56],\r\n  };\r\n}\r\n\r\nfunction disabledRangeTime (_, type) {\r\n  if (type === 'start') {\r\n    return {\r\n      // 不是,是4点到20点之间都不可选\r\n      disabledHours: () => range(0, 60).splice(4, 20),\r\n      disabledMinutes: () => range(30, 60),\r\n      disabledSeconds: () => [55, 56],\r\n    };\r\n  }\r\n  return {\r\n    disabledHours: () => range(0, 60).splice(20, 4),\r\n    disabledMinutes: () => range(0, 31),\r\n    disabledSeconds: () => [55, 56],\r\n  };\r\n}","import React from 'react'\r\nimport './style.scss'\r\nimport { Card, Descriptions, Badge } from 'antd'\r\nexport default function Descriptionss () {\r\n  return (\r\n    <>\r\n      <Card className=\"card\" title=\"描述列表\">\r\n        <Descriptions title=\"User Info\">\r\n          <Descriptions.Item label=\"UserName\">Zhou Maomao</Descriptions.Item>\r\n          <Descriptions.Item label=\"Telephone\">1810000000</Descriptions.Item>\r\n          <Descriptions.Item label=\"Live\">Hangzhou, Zhejiang</Descriptions.Item>\r\n          <Descriptions.Item label=\"Remark\">empty</Descriptions.Item>\r\n          <Descriptions.Item label=\"Address\">\r\n            No. 18, Wantang Road, Xihu District, Hangzhou, Zhejiang, China\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </Card>\r\n      <Card className=\"card\" title=\"带边框的\">\r\n        <Descriptions title=\"User Info\" bordered>\r\n          <Descriptions.Item label=\"Product\">Cloud Database</Descriptions.Item>\r\n          <Descriptions.Item label=\"Billing Mode\">Prepaid</Descriptions.Item>\r\n          <Descriptions.Item label=\"Automatic Renewal\">YES</Descriptions.Item>\r\n          <Descriptions.Item label=\"Order time\">2018-04-24 18:00:00</Descriptions.Item>\r\n          <Descriptions.Item label=\"Usage Time\" span={2}>\r\n            2019-04-24 18:00:00\r\n    </Descriptions.Item>\r\n          <Descriptions.Item label=\"Status\" span={3}>\r\n            <Badge status=\"processing\" text=\"Running\" />\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Negotiated Amount\">$80.00</Descriptions.Item>\r\n          <Descriptions.Item label=\"Discount\">$20.00</Descriptions.Item>\r\n          <Descriptions.Item label=\"Official Receipts\">$60.00</Descriptions.Item>\r\n          <Descriptions.Item label=\"Config Info\">\r\n            Data disk type: MongoDB\r\n            <br />\r\n            Database version: 3.4\r\n            <br />\r\n            Package: dds.mongo.mid\r\n            <br />\r\n            Storage space: 10 GB\r\n            <br />\r\n            Replication factor: 3\r\n            <br />\r\n            Region: East China 1<br />\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </Card>\r\n      <Card className=\"card\" title=\"响应式\">\r\n        <Descriptions\r\n          title=\"Responsive Descriptions\"\r\n          bordered\r\n          column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\r\n        >\r\n          <Descriptions.Item label=\"Product\">Cloud Database</Descriptions.Item>\r\n          <Descriptions.Item label=\"Billing\">Prepaid</Descriptions.Item>\r\n          <Descriptions.Item label=\"time\">18:00:00</Descriptions.Item>\r\n          <Descriptions.Item label=\"Amount\">$80.00</Descriptions.Item>\r\n          <Descriptions.Item label=\"Discount\">$20.00</Descriptions.Item>\r\n          <Descriptions.Item label=\"Official\">$60.00</Descriptions.Item>\r\n          <Descriptions.Item label=\"Config Info\">\r\n            Data disk type: MongoDB\r\n          <br />\r\n          Database version: 3.4\r\n          <br />\r\n          Package: dds.mongo.mid\r\n          <br />\r\n          Storage space: 10 GB\r\n          <br />\r\n          Replication factor: 3\r\n          <br />\r\n          Region: East China 1\r\n        </Descriptions.Item>\r\n        </Descriptions>\r\n      </Card>\r\n      <Card className=\"card\" title=\"垂直\" >\r\n        <Descriptions title=\"User Info\" layout=\"vertical\" bordered>\r\n          <Descriptions.Item label=\"UserName\">Zhou Maomao</Descriptions.Item>\r\n          <Descriptions.Item label=\"Telephone\">1810000000</Descriptions.Item>\r\n          <Descriptions.Item label=\"Live\">Hangzhou, Zhejiang</Descriptions.Item>\r\n          <Descriptions.Item label=\"Address\" span={2}>\r\n            No. 18, Wantang Road, Xihu District, Hangzhou, Zhejiang, China\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Remark\">empty</Descriptions.Item>\r\n        </Descriptions>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Transfer, Switch } from 'antd';\r\nconst mockData = [];\r\n\r\nfor (let i = 0; i < 20; i++) {\r\n  mockData.push({\r\n    key: i.toString(),\r\n    title: `第${i + 1}项`,\r\n    description: `这个属性在哪呢?description of content${i + 1}`,\r\n    disabled: i % 3 < 1,\r\n  });\r\n}\r\n\r\nconst oriTargetKeys = mockData.filter(item => {\r\n  // 字符串转换成数字的方法\r\n  // console.log('+item.key :', typeof +item.key);\r\n  return +item.key % 3 > 1\r\n}).map(item => item.key);\r\n\r\nexport default class trans1 extends Component {\r\n  state = {\r\n    targetKeys: oriTargetKeys,\r\n    selectedKeys: [],\r\n    disabled: false,\r\n  };\r\n  handleChange = (nextTargetKeys, direction, moveKeys) => {\r\n    this.setState({ targetKeys: nextTargetKeys });\r\n\r\n    console.log('targetKeys: ', nextTargetKeys);\r\n    console.log('direction: ', direction);\r\n    console.log('moveKeys: ', moveKeys);\r\n  };\r\n\r\n  handleSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n    this.setState({\r\n      // 就这样存??\r\n      selectedKeys: [...sourceSelectedKeys, ...targetSelectedKeys]\r\n    }, () => {\r\n      console.log('this.state.selectedKeys', this.state.selectedKeys)\r\n    });\r\n    //左侧\r\n    console.log('sourceSelectedKeys-左侧: ', sourceSelectedKeys);\r\n    //右侧\r\n    console.log('targetSelectedKeys-右侧: ', targetSelectedKeys);\r\n  };\r\n\r\n  handleScroll = (direction, e) => {\r\n    console.log('direction:', direction);\r\n    // 滚动,打印事件对象,是一个ul列表\r\n    console.log('target:', e.target);\r\n  };\r\n\r\n  handleDisable = disabled => {\r\n    this.setState({ disabled });\r\n  };\r\n  render () {\r\n    const { targetKeys, selectedKeys, disabled } = this.state;\r\n    return (\r\n      <>\r\n        <Card title=\"穿梭框\" className='card'>\r\n          <Transfer\r\n            // 数据源，其中的数据将会被渲染到左边一栏中,定义在类外面的数据直接使用\r\n            dataSource={mockData}\r\n            // titles\t\t标题集合，顺序从左至右\t['', '']\r\n            titles={['Source', 'Target']}\r\n            // 显示在右侧框数据的 key 集合\r\n            targetKeys={targetKeys}\r\n            // 设置哪些项应该被选中\r\n            selectedKeys={selectedKeys}\r\n            // 选项在两栏之间转移时的回调函数\r\n            onChange={this.handleChange}\r\n            // 选中项发生改变时的回调函数\r\n            onSelectChange={this.handleSelectChange}\r\n            onScroll={this.handleScroll}\r\n            render={item => item.title}\r\n            disabled={disabled}\r\n          />\r\n          <Switch\r\n            unCheckedChildren=\"disabled\"\r\n            checkedChildren=\"disabled\"\r\n            checked={disabled}\r\n            onChange={this.handleDisable}\r\n            style={{ marginTop: 16 }}\r\n          />\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Transfer, Switch, Table, Tag, Card } from 'antd';\r\nimport difference from 'lodash/difference';\r\n\r\n// Customize Table Transfer\r\nconst TableTransfer = ({ leftColumns, rightColumns, ...restProps }) => (\r\n  <Transfer {...restProps} showSelectAll={false}>\r\n    {({\r\n      direction,\r\n      filteredItems,\r\n      onItemSelectAll,\r\n      onItemSelect,\r\n      selectedKeys: listSelectedKeys,\r\n      disabled: listDisabled,\r\n    }) => {\r\n      const columns = direction === 'left' ? leftColumns : rightColumns;\r\n\r\n      const rowSelection = {\r\n        getCheckboxProps: item => ({ disabled: listDisabled || item.disabled }),\r\n        onSelectAll (selected, selectedRows) {\r\n          const treeSelectedKeys = selectedRows\r\n            .filter(item => !item.disabled)\r\n            .map(({ key }) => key);\r\n          const diffKeys = selected\r\n            ? difference(treeSelectedKeys, listSelectedKeys)\r\n            : difference(listSelectedKeys, treeSelectedKeys);\r\n          onItemSelectAll(diffKeys, selected);\r\n        },\r\n        onSelect ({ key }, selected) {\r\n          onItemSelect(key, selected);\r\n        },\r\n        selectedRowKeys: listSelectedKeys,\r\n      };\r\n\r\n      return (\r\n        <Table\r\n          rowSelection={rowSelection}\r\n          columns={columns}\r\n          dataSource={filteredItems}\r\n          size=\"small\"\r\n          style={{ pointerEvents: listDisabled ? 'none' : null }}\r\n          onRow={({ key, disabled: itemDisabled }) => ({\r\n            onClick: () => {\r\n              if (itemDisabled || listDisabled) return;\r\n              onItemSelect(key, !listSelectedKeys.includes(key));\r\n            },\r\n          })}\r\n        />\r\n      );\r\n    }}\r\n  </Transfer>\r\n);\r\n\r\nconst mockTags = ['cat', 'dog', 'bird'];\r\n\r\nconst mockData = [];\r\nfor (let i = 0; i < 20; i++) {\r\n  mockData.push({\r\n    key: i.toString(),\r\n    title: `content${i + 1}`,\r\n    description: `description of content${i + 1}`,\r\n    disabled: i % 4 === 0,\r\n    tag: mockTags[i % 3],\r\n  });\r\n}\r\n\r\nconst originTargetKeys = mockData.filter(item => +item.key % 3 > 1).map(item => item.key);\r\n\r\nconst leftTableColumns = [\r\n  {\r\n    dataIndex: 'title',\r\n    title: 'Name',\r\n  },\r\n  {\r\n    dataIndex: 'tag',\r\n    title: 'Tag',\r\n    render: tag => <Tag>{tag}</Tag>,\r\n  },\r\n  {\r\n    dataIndex: 'description',\r\n    title: 'Description',\r\n  },\r\n];\r\nconst rightTableColumns = [\r\n  {\r\n    dataIndex: 'title',\r\n    title: 'Name',\r\n  },\r\n];\r\n\r\nexport default class trans3 extends Component {\r\n  state = {\r\n    targetKeys: originTargetKeys,\r\n    disabled: false,\r\n    showSearch: false,\r\n  };\r\n\r\n  onChange = nextTargetKeys => {\r\n    this.setState({ targetKeys: nextTargetKeys });\r\n  };\r\n\r\n  triggerDisable = disabled => {\r\n    this.setState({ disabled });\r\n  };\r\n\r\n  triggerShowSearch = showSearch => {\r\n    this.setState({ showSearch });\r\n  };\r\n  render () {\r\n    const { targetKeys, disabled, showSearch } = this.state;\r\n    return (\r\n      <>\r\n        <Card title=\"表格穿梭框\" className='card'>\r\n          <TableTransfer\r\n            dataSource={mockData}\r\n            targetKeys={targetKeys}\r\n            disabled={disabled}\r\n            showSearch={showSearch}\r\n            onChange={this.onChange}\r\n            filterOption={(inputValue, item) =>\r\n              item.title.indexOf(inputValue) !== -1 || item.tag.indexOf(inputValue) !== -1\r\n            }\r\n            leftColumns={leftTableColumns}\r\n            rightColumns={rightTableColumns}\r\n          />\r\n          <Switch\r\n            unCheckedChildren=\"disabled\"\r\n            checkedChildren=\"disabled\"\r\n            checked={disabled}\r\n            onChange={this.triggerDisable}\r\n            style={{ marginTop: 16 }}\r\n          />\r\n          <Switch\r\n            unCheckedChildren=\"showSearch\"\r\n            checkedChildren=\"showSearch\"\r\n            checked={showSearch}\r\n            onChange={this.triggerShowSearch}\r\n            style={{ marginTop: 16 }}\r\n          />\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Transfer, Button } from 'antd';\r\nexport default class trans2 extends Component {\r\n  state = {\r\n    mockData: [],\r\n    targetKeys: [],\r\n  };\r\n\r\n  componentDidMount () {\r\n    this.getMock();\r\n  }\r\n\r\n  getMock = () => {\r\n    const targetKeys = [];\r\n    const mockData = [];\r\n    for (let i = 0; i < 20; i++) {\r\n      const data = {\r\n        key: i.toString(),\r\n        title: `第${i + 1}项`,\r\n        description: `描述description of content${i + 1}`,\r\n        chosen: Math.random() * 2 > 1,\r\n      };\r\n      if (data.chosen) {\r\n        targetKeys.push(data.key);\r\n      }\r\n      mockData.push(data);\r\n    }\r\n    this.setState({ mockData, targetKeys });\r\n  };\r\n\r\n  handleChange = targetKeys => {\r\n    this.setState({ targetKeys });\r\n  };\r\n  // 自定义搜索函数\r\n\r\n  handleSearch = (dir, value) => {\r\n    console.log('search:', dir, value);\r\n  };\r\n\r\n  renderFooter = () => (\r\n    <Button size=\"small\" style={{ float: 'right', margin: 5 }} onClick={this.getMock}>\r\n      reload\r\n    </Button>\r\n  );\r\n  render () {\r\n    return (\r\n      <>\r\n        <Card title=\"带搜索的\" className='card'>\r\n          <Transfer\r\n            dataSource={this.state.mockData}\r\n            showSearch\r\n            listStyle={{\r\n              width: 250,\r\n              height: 300,\r\n            }}\r\n            operations={['to right', 'to left']}\r\n            targetKeys={this.state.targetKeys}\r\n            onChange={this.handleChange}\r\n            render={item => `${item.title}-${item.description}`}\r\n            footer={this.renderFooter}\r\n            onSearch={this.handleSearch}\r\n          />\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Transfer, Tree, Card } from 'antd';\r\n\r\nconst { TreeNode } = Tree;\r\n\r\nconst treeData = [\r\n  { key: '0-0', title: '0-0' },\r\n  {\r\n    key: '0-1',\r\n    title: '0-1',\r\n    treeData: [{ key: '0-1-0', title: '0-1-0' }, { key: '0-1-1', title: '0-1-1' }],\r\n  },\r\n  { key: '0-2', title: '0-3' },\r\n];\r\n// Customize Table Transfer\r\nconst isChecked = (selectedKeys, eventKey) => {\r\n  return selectedKeys.indexOf(eventKey) !== -1;\r\n};\r\n\r\nconst generateTree = (treeNodes = [], checkedKeys = []) => {\r\n  return treeNodes.map(({ treeData, ...props }) => (\r\n    <TreeNode {...props} disabled={checkedKeys.includes(props.key)} key={props.key}>\r\n      {generateTree(treeData, checkedKeys)}\r\n    </TreeNode>\r\n  ));\r\n};\r\n\r\nconst TreeTransfer = ({ dataSource, targetKeys, ...restProps }) => {\r\n  const transferDataSource = [];\r\n  function flatten (list = []) {\r\n    list.forEach(item => {\r\n      transferDataSource.push(item);\r\n      flatten(item.treeData);\r\n    });\r\n  }\r\n  flatten(dataSource);\r\n\r\n  return (\r\n    <Transfer\r\n      {...restProps}\r\n      targetKeys={targetKeys}\r\n      dataSource={transferDataSource}\r\n      className=\"tree-transfer\"\r\n      render={item => item.title}\r\n      showSelectAll={false}\r\n    >\r\n      {({ direction, onItemSelect, selectedKeys }) => {\r\n        if (direction === 'left') {\r\n          const checkedKeys = [...selectedKeys, ...targetKeys];\r\n          return (\r\n            <Tree\r\n              blockNode\r\n              checkable\r\n              checkStrictly\r\n              defaultExpandAll\r\n              checkedKeys={checkedKeys}\r\n              onCheck={(\r\n                _,\r\n                {\r\n                  node: {\r\n                    props: { eventKey },\r\n                  },\r\n                },\r\n              ) => {\r\n                onItemSelect(eventKey, !isChecked(checkedKeys, eventKey));\r\n              }}\r\n              onSelect={(\r\n                _,\r\n                {\r\n                  node: {\r\n                    props: { eventKey },\r\n                  },\r\n                },\r\n              ) => {\r\n                onItemSelect(eventKey, !isChecked(checkedKeys, eventKey));\r\n              }}\r\n            >\r\n              {generateTree(dataSource, targetKeys)}\r\n            </Tree>\r\n          );\r\n        }\r\n      }}\r\n    </Transfer>\r\n  );\r\n};\r\n\r\n\r\nexport default class trans4 extends Component {\r\n  state = {\r\n    targetKeys: [],\r\n  };\r\n\r\n  onChange = targetKeys => {\r\n    console.log('Target Keys:', targetKeys);\r\n    this.setState({ targetKeys });\r\n  };\r\n  render () {\r\n    const { targetKeys } = this.state;\r\n    return (\r\n      <>\r\n        <Card title=\"树穿梭框\" className='card'>\r\n          <TreeTransfer dataSource={treeData} targetKeys={targetKeys} onChange={this.onChange} />\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport './style.scss'\r\nimport Trans1 from './trans1'\r\nimport Trans2 from './trans2'\r\nimport Trans3 from './trans3'\r\nimport Trans4 from './trans4'\r\n// import Trans5 from './trans5'\r\n\r\nexport default class Transfers extends React.Component {\r\n\r\n  render () {\r\n\r\n    return (\r\n      <>\r\n        {/* <Trans5></Trans5> */}\r\n        <Trans1></Trans1>\r\n        <Trans2></Trans2>\r\n        {/* 难 */}\r\n        <Trans3></Trans3>\r\n        <Trans4></Trans4>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Tree, Card } from 'antd'\r\nimport './style.scss';\r\n// const { TreeNode } = Tree;\r\nconst treeData = [\r\n  {\r\n    title: 'parent 1',\r\n    key: '0-0',\r\n    children: [\r\n      {\r\n        title: 'parent 1-0',\r\n        key: '0-0-0',\r\n        disabled: true,\r\n        children: [\r\n          {\r\n            title: 'leaf',\r\n            key: '0-0-0-0',\r\n            disableCheckbox: true,\r\n          },\r\n          {\r\n            title: 'leaf',\r\n            key: '0-0-0-1',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        title: 'parent 1-1',\r\n        key: '0-0-1',\r\n        children: [\r\n          {\r\n            title: (\r\n              <span\r\n                style={{\r\n                  color: '#1890ff',\r\n                }}\r\n              >\r\n                sss\r\n              </span>\r\n            ),\r\n            key: '0-0-1-0',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\nexport default function Trees () {\r\n  const onSelect = (selectedKeys, info) => {\r\n    console.log('selected', selectedKeys, info);\r\n  };\r\n\r\n  const onCheck = (checkedKeys, info) => {\r\n    console.log('onCheck', checkedKeys, info);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card title='基本树' className='card'>\r\n        <Tree\r\n          checkable\r\n          defaultExpandedKeys={['0-0-0', '0-0-1']}\r\n          defaultSelectedKeys={['0-0-0', '0-0-1']}\r\n          defaultCheckedKeys={['0-0-0', '0-0-1']}\r\n          onSelect={onSelect}\r\n          onCheck={onCheck}\r\n          treeData={treeData}\r\n        />\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n// {/*\r\n// 何时使用#\r\n// 文件夹、组织架构、生物分类、国家地区等等，世间万物的大多数结构都是树形结构。\r\n// 使用 树控件 可以完整展现其中的层级关系，并具有展开收起选择等交互功能 */}\r\n","import React, { useState } from 'react'\r\nimport { Card, Tree } from 'antd'\r\nimport './style.scss'\r\nconst treeData = [\r\n  {\r\n    title: '0-0',\r\n    key: '0-0',\r\n    children: [\r\n      {\r\n        title: '0-0-0',\r\n        key: '0-0-0',\r\n        children: [\r\n          {\r\n            title: '0-0-0-0',\r\n            key: '0-0-0-0',\r\n          },\r\n          {\r\n            title: '0-0-0-1',\r\n            key: '0-0-0-1',\r\n          },\r\n          {\r\n            title: '0-0-0-2',\r\n            key: '0-0-0-2',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        title: '0-0-1',\r\n        key: '0-0-1',\r\n        children: [\r\n          {\r\n            title: '0-0-1-0',\r\n            key: '0-0-1-0',\r\n          },\r\n          {\r\n            title: '0-0-1-1',\r\n            key: '0-0-1-1',\r\n          },\r\n          {\r\n            title: '0-0-1-2',\r\n            key: '0-0-1-2',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        title: '0-0-2',\r\n        key: '0-0-2',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: '0-1',\r\n    key: '0-1',\r\n    children: [\r\n      {\r\n        title: '0-1-0-0',\r\n        key: '0-1-0-0',\r\n      },\r\n      {\r\n        title: '0-1-0-1',\r\n        key: '0-1-0-1',\r\n      },\r\n      {\r\n        title: '0-1-0-2',\r\n        key: '0-1-0-2',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: '0-2',\r\n    key: '0-2',\r\n  },\r\n];\r\nexport default function Tree2 () {\r\n  // 默认打开的树节点\r\n  const [expandedKeys, setExpandedKeys] = useState(['0-0-0', '0-0-1']);\r\n  // 默认复选选中的树节点\r\n  const [checkedKeys, setCheckedKeys] = useState(['0-0-0']);\r\n  const [selectedKeys, setSelectedKeys] = useState([]);\r\n  const [autoExpandParent, setAutoExpandParent] = useState(true);\r\n\r\n  const onExpand = expandedKeys => {\r\n    // 输出目前展开的节点属性\r\n    console.log('onExpand', expandedKeys); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\r\n    // or, you can remove all expanded children keys.\r\n    // 展开时候的函数 \r\n    setExpandedKeys(expandedKeys);\r\n    setAutoExpandParent(false);\r\n  };\r\n\r\n  const onCheck = checkedKeys => {\r\n    console.log('onCheck', checkedKeys);\r\n    setCheckedKeys(checkedKeys);\r\n  };\r\n\r\n  const onSelect = (selectedKeys, info) => {\r\n    console.log('onSelect', info);\r\n    setSelectedKeys(selectedKeys);\r\n  };\r\n  return (\r\n    <>\r\n      <Card title='受控操作' className='card'>\r\n        <Tree\r\n          treeData={treeData}\r\n          checkable\r\n          expandedKeys={expandedKeys}\r\n          checkedKeys={checkedKeys}\r\n          selectedKeys={selectedKeys}\r\n          onExpand={onExpand}\r\n          autoExpandParent={autoExpandParent}\r\n          onCheck={onCheck}\r\n          onSelect={onSelect}\r\n        />\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Card, Tree } from 'antd'\r\nimport './style.scss'\r\n// const { TreeNode } = Tree;\r\n\r\nconst initTreeDate = [\r\n  {\r\n    title: 'Expand to load',\r\n    key: '0',\r\n  },\r\n  {\r\n    title: 'Expand to load',\r\n    key: '1',\r\n  },\r\n  {\r\n    title: 'Tree Node',\r\n    key: '2',\r\n    isLeaf: true,\r\n  },\r\n]; // It's just a simple demo. You can use tree map to optimize update perf.\r\nfunction updateTreeData (list, key, children) {\r\n  return list.map(node => {\r\n    if (node.key === key) {\r\n      return { ...node, children };\r\n    }\r\n    if (node.children) {\r\n      return { ...node, children: updateTreeData(node.children, key, children) };\r\n    }\r\n    return node;\r\n  });\r\n}\r\n\r\nconst Demo = () => {\r\n  const [treeData, setTreeData] = useState(initTreeDate);\r\n\r\n  function onLoadData ({ key, children }) {\r\n    return new Promise(resolve => {\r\n      if (children) {\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      setTimeout(() => {\r\n        setTreeData(origin =>\r\n          updateTreeData(origin, key, [\r\n            {\r\n              title: 'Child Node',\r\n              key: `${key}-0`,\r\n            },\r\n            {\r\n              title: 'Child Node',\r\n              key: `${key}-1`,\r\n            },\r\n          ]),\r\n        );\r\n        resolve();\r\n      }, 10);\r\n    });\r\n  }\r\n\r\n  return <><Card title='异步加载/节点是动态添加进入的' className='card'><Tree loadData={onLoadData} treeData={treeData} /></Card></>;\r\n};\r\n\r\nexport default Demo;\r\n","import React from 'react'\r\nimport './style.scss';\r\nimport Tree1 from './tree1'\r\nimport Tree2 from './tree2'\r\nimport Tree3 from './tree3'\r\nexport default function Trees () {\r\n  //   {/* 何时使用#\r\n  // 文件夹、组织架构、生物分类、国家地区等等，世间万物的大多数结构都是树形结构。\r\n  // 使用 树控件 可以完整展现其中的层级关系，并具有展开收起选择等交互功能 */}\r\n  return (\r\n    <>\r\n      <Tree1></Tree1>\r\n      <Tree2></Tree2>\r\n      <Tree3></Tree3>\r\n    </>\r\n  )\r\n}\r\n\r\n","export const layout = {\r\n  labelCol: {\r\n    span: 6,\r\n    offset: 3\r\n  },\r\n  wrapperCol: {\r\n    span: 6,\r\n  },\r\n};\r\nexport const tailLayout = {\r\n  wrapperCol: {\r\n    offset: 0,\r\n    span: 24,\r\n  },\r\n};","import React, { useState, useEffect } from 'react'\r\nimport { Card, Form, Input, Button, Select } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { layout, tailLayout } from './sty';\r\nexport default function Form1 () {\r\n  const { Option } = Select;\r\n  // 对表单域的数据进行交互\r\n  const [form] = Form.useForm();\r\n  const [, forceUpdate] = useState(); // To disable submit button at the beginning.\r\n\r\n  useEffect(() => {\r\n    forceUpdate({});\r\n  }, []);\r\n\r\n  const onFinish = values => {\r\n    console.log('Finish:', values);\r\n  };\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n\r\n  const onFill = () => {\r\n    form.setFieldsValue({\r\n      note: 'Hello world!',\r\n      gender: 'male',\r\n    });\r\n  };\r\n  // 作用域进行交互,多选\r\n  const onGenderChange = (value) => {\r\n    switch (value) {\r\n      case 'male':\r\n        form.setFieldsValue({\r\n          note: 'Hi, man!',\r\n        });\r\n        return;\r\n      case 'female':\r\n        form.setFieldsValue({\r\n          note: 'Hi, lady!',\r\n        });\r\n        return;\r\n      case 'other':\r\n        form.setFieldsValue({\r\n          note: 'Hi there!',\r\n        });\r\n        return;\r\n      default: return\r\n    }\r\n  };\r\n  const handleonValuesChange = (e) => {\r\n    //console.log(e)//{note: \"1\"}{gender: \"male\"}\r\n    //相当于KeyUp事件 或者 onChange 事件\r\n    let a = form.getFieldValue('note')\r\n    console.log(a)\r\n  }\r\n  const handleonFieldsChange = (e) => {\r\n    // 触摸事件,使用的机会比较少\r\n    // console.log(e[0])\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card title=\"交互表单1\" className=\"card-wrap\">\r\n        {/* 通过 Form.useForm 对表单数据域进行交互。 */}\r\n        <Form {...layout} form={form} name=\"control-hooks\" onFinish={onFinish} onFieldsChange={handleonFieldsChange} onValuesChange={handleonValuesChange}>\r\n          {/* 姓名 */}\r\n          <Form.Item\r\n            name=\"note\"\r\n            label=\"Note\"\r\n            rules={[{ required: true }]}\r\n          >\r\n            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"note\" />\r\n          </Form.Item>\r\n\r\n          {/* 性别下拉选项 */}\r\n          <Form.Item\r\n            name=\"gender\"\r\n            label=\"Gender\"\r\n            rules={[{ required: true, },\r\n            ]}\r\n          >\r\n            <Select\r\n              placeholder=\"Select a option and change input text above\"\r\n              onChange={onGenderChange}\r\n              allowClear\r\n            >\r\n              <Option value=\"male\">male</Option>\r\n              <Option value=\"female\">female</Option>\r\n              <Option value=\"other\">other</Option>\r\n            </Select>\r\n          </Form.Item>\r\n\r\n          {/* 待渲染 */}\r\n          <Form.Item\r\n            noStyle\r\n            shouldUpdate={(prevValues, currentValues) => prevValues.gender !== currentValues.gender}\r\n          >\r\n            {({ getFieldValue }) =>\r\n              getFieldValue('gender') === 'other' ? (\r\n                <Form.Item\r\n                  name=\"customizeGender\"\r\n                  label=\"Customize Gender\"\r\n                  rules={[{ required: true, },]}\r\n                >\r\n                  <Input />\r\n                </Form.Item>\r\n              ) : null\r\n            }\r\n          </Form.Item>\r\n          {/* 按钮组 */}\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n            <Button htmlType=\"button\" onClick={onReset}>\r\n              Reset\r\n              </Button>\r\n            <Button type=\"link\" htmlType=\"button\" onClick={onFill}>\r\n              Fill form\r\n              </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Card, Form, Input, Button, InputNumber } from 'antd';\r\n// import { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { layout, tailLayout } from './sty';\r\nexport default function Form2 () {\r\n  /* \r\n    Form 为验证提供了默认的错误提示信息，\r\n    你可以通过配置 validateMessages 属性，修改对应的提示模板。\r\n    一种常见的使用方式，是配置国际化提示信息：\r\n    修改模板的配置信息\r\n   */\r\n  // const validateMessages = {\r\n  //   required: '请输入${label}!',\r\n  //   types: {\r\n  //     email: '${label} is not validate email!',\r\n  //     number: '${label} is not a validate number!',\r\n  //   },\r\n  //   number: {\r\n  //     range: '${label} must be between ${min} and ${max}',\r\n  //   },\r\n  // };\r\n  const onFinish = values => {\r\n    console.log(values);\r\n    /* \r\n      user:\r\n        name: \"qwq\"\r\n        email: \"wq@qq.com\"\r\n        age: 12\r\n        website: \"www.q.com\"\r\n        introduction: \"neq\"\r\n     */\r\n  };\r\n  return (\r\n    <>\r\n      <Card title=\"嵌套结构与校验信息\" className=\"card-wrap\">\r\n        {/* 用户名 */}\r\n        {/* <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}> */}\r\n        <Form {...layout} name=\"nest-messages\" onFinish={onFinish} >\r\n          <Form.Item\r\n            name={['user', 'name']}\r\n            label=\"用户名\"\r\n            rules={[{ required: true, }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          {/* 邮箱 */}\r\n          <Form.Item\r\n            name={['user', 'email']}\r\n            label=\"Email\"\r\n            rules={[{ type: 'email', },]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          {/* 年龄 */}\r\n          <Form.Item\r\n            name={['user', 'age']}\r\n            label=\"Age\"\r\n            rules={[{ type: 'number', min: 0, max: 99, },\r\n            ]}\r\n          >\r\n            <InputNumber />\r\n          </Form.Item>\r\n\r\n          {/* 站点信息 */}\r\n          <Form.Item name={['user', 'website']} label=\"Website\">\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          {/* 个人简介 */}\r\n          <Form.Item name={['user', 'introduction']} label=\"Introduction\">\r\n            <Input.TextArea />\r\n          </Form.Item>\r\n\r\n          {/* 提交按钮 */}\r\n          <Form.Item wrapperCol={tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n\r\n        </Form>\r\n      </Card>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { Card, Form, Input, Button, Tooltip, Select } from 'antd';\r\n// import { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n// import { layout, tailLayout } from './sty';\r\nconst { Option } = Select;\r\nexport default function Form3 () {\r\n  const onFinish = values => {\r\n    console.log(values);\r\n  };\r\n  return (\r\n    <>\r\n      <Card title=\"嵌套表单控件\" className=\"card-wrap\">\r\n        {/* 校验一 */}\r\n        <Form labelCol={{ span: 9 }} wrapperCol={{ span: 12 }} name=\"complex-messages\" onFinish={onFinish}>\r\n          <Form.Item label=\"Username\">\r\n            {/* 使用noStyle */}\r\n            <Form.Item\r\n              name=\"username\"\r\n              noStyle\r\n              rules={[{ required: true, message: 'Username is required' }]}\r\n            >\r\n              <Input style={{ width: 160 }} placeholder=\"Please input\" />\r\n            </Form.Item>\r\n            {/* 提示信息 */}\r\n            <Tooltip title=\"Useful information\">\r\n              <a href=\"#API\" style={{ margin: '0 8px' }}>\r\n                Need Help?\r\n              </a>\r\n            </Tooltip>\r\n          </Form.Item>\r\n\r\n          {/* 校验二 */}\r\n          <Form.Item label=\"地址\">\r\n            <Input.Group compact>\r\n              {/* 校验二.一 */}\r\n              <Form.Item\r\n                name={['address', '省份']}\r\n                noStyle\r\n                rules={[{ required: true, message: 'Province is required' }]}\r\n              >\r\n                <Select placeholder=\"选择省份\">\r\n                  <Option value=\"浙江\">浙江</Option>\r\n                  <Option value=\"江苏\">江苏</Option>\r\n                </Select>\r\n              </Form.Item>\r\n              {/* 校验二.二 */}\r\n              <Form.Item\r\n                name={['address', '街道']}\r\n                noStyle\r\n                rules={[{ required: true, message: 'Street is required' }]}\r\n              >\r\n                <Input style={{ width: '50%' }} placeholder=\"请输入街道\" />\r\n              </Form.Item>\r\n            </Input.Group>\r\n          </Form.Item>\r\n\r\n          {/* 校验三 */}\r\n          <Form.Item label=\"BirthDate\" style={{ marginBottom: 0 }}>\r\n            {/* 校验三.一 */}\r\n            <Form.Item\r\n              name=\"year\"\r\n              rules={[{ required: true }]}\r\n              style={{ display: 'inline-block', width: 'calc(50% - 8px)' }}\r\n            >\r\n              <Input placeholder=\"Input birth year\" />\r\n            </Form.Item>\r\n            {/* 校验三.二*/}\r\n            <Form.Item\r\n              name=\"month\"\r\n              rules={[{ required: true }]}\r\n              style={{ display: 'inline-block', width: 'calc(50% - 8px)', margin: '0 8px' }}\r\n            >\r\n              <Input placeholder=\"Input birth month\" />\r\n            </Form.Item>\r\n          </Form.Item>\r\n\r\n          {/* 提交 */}\r\n          <Form.Item label=\" \" colon={false}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    </>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { Card, Form, Input, } from 'antd';\r\n// import { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n// import { layout, tailLayout } from './sty';\r\n// const { Option } = Select;\r\nexport default function Form4 () {\r\n  const [fields, setFields] = useState([\r\n    {\r\n      name: ['username'],\r\n      value: 'Ant Design',\r\n    },\r\n  ]);\r\n  // 把fields当中的数据渲染到页面当中\r\n  return (\r\n    <>\r\n      <Card title=\"表单数据存储于上层组件\" className=\"card-wrap\">\r\n        <CustomizedForm\r\n          fields={fields}\r\n          onChange={newFields => {\r\n            setFields(newFields);\r\n          }}\r\n        />\r\n        {/* <pre className=\"language-bash\">{JSON.stringify(fields, null, 2)}</pre> */}\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nconst CustomizedForm = ({ onChange, fields }) => (\r\n  <Form\r\n    name=\"global_state\"\r\n    layout=\"inline\"\r\n    fields={fields}\r\n    onFieldsChange={(changedFields, allFields) => {\r\n      onChange(allFields);\r\n    }}\r\n  >\r\n    <Form.Item\r\n      name=\"username\"\r\n      label=\"用户名\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n          message: 'Username is required!',\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n  </Form>\r\n);","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Form, Input, InputNumber, Modal, Card, Button, Avatar, Typography } from 'antd';\r\nimport { SmileOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { layout, tailLayout } from './sty';\r\nimport './style.scss'\r\n\r\nexport default function Form5 () {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showUserModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const hideUserModal = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const onFinish = values => {\r\n    console.log('Finish:', values);\r\n  };\r\n  return (\r\n    <>\r\n      <Card title=\"多表单联动+模态框\" className=\"card-wrap\">\r\n        <Form.Provider\r\n          onFormFinish={(name, { values, forms }) => {\r\n            if (name === 'userForm') {\r\n              const { basicForm } = forms;\r\n              const users = basicForm.getFieldValue('users') || [];\r\n              basicForm.setFieldsValue({\r\n                users: [...users, values],\r\n              });\r\n              setVisible(false);\r\n            }\r\n          }}\r\n        >\r\n          <Form {...layout} name=\"basicForm\" onFinish={onFinish}>\r\n            <Form.Item\r\n              name=\"group\"\r\n              label=\"Group Name\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"User List\"\r\n              shouldUpdate={(prevValues, curValues) => prevValues.users !== curValues.users}\r\n            >\r\n              {({ getFieldValue }) => {\r\n                const users = getFieldValue('users') || [];\r\n                return users.length ? (\r\n                  <ul>\r\n                    {users.map((user, index) => (\r\n                      <li key={index} className=\"user\">\r\n                        <Avatar icon={<UserOutlined />} />\r\n                        {user.name} - {user.age}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                ) : (\r\n                    <Typography.Text className=\"ant-form-text\" type=\"secondary\">\r\n                      ( <SmileOutlined /> No user yet. )\r\n                    </Typography.Text>\r\n                  );\r\n              }}\r\n            </Form.Item>\r\n            <Form.Item {...tailLayout}>\r\n              <Button htmlType=\"submit\" type=\"primary\">\r\n                Submit\r\n            </Button>\r\n              <Button\r\n                htmlType=\"button\"\r\n                style={{\r\n                  margin: '0 8px',\r\n                }}\r\n                onClick={showUserModal}\r\n              >\r\n                Add User\r\n            </Button>\r\n            </Form.Item>\r\n          </Form>\r\n\r\n          <ModalForm visible={visible} onCancel={hideUserModal} />\r\n        </Form.Provider>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n// reset form fields when modal is form, closed\r\nconst useResetFormOnCloseModal = ({ form, visible }) => {\r\n  const prevVisibleRef = useRef();\r\n  useEffect(() => {\r\n    prevVisibleRef.current = visible;\r\n  }, [visible]);\r\n  const prevVisible = prevVisibleRef.current;\r\n  useEffect(() => {\r\n    if (!visible && prevVisible) {\r\n      form.resetFields();\r\n    }\r\n  }, [prevVisible, form, visible]);\r\n};\r\n\r\nconst ModalForm = ({ visible, onCancel }) => {\r\n  const [form] = Form.useForm();\r\n  useResetFormOnCloseModal({\r\n    form,\r\n    visible,\r\n  });\r\n\r\n  const onOk = () => {\r\n    form.submit();\r\n  };\r\n\r\n  return (\r\n    <Modal title=\"Basic Drawer\" visible={visible} onOk={onOk} onCancel={onCancel}>\r\n      <Form form={form} layout=\"vertical\" name=\"userForm\">\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"User Name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"age\"\r\n          label=\"User Age\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};","import React from 'react'\r\n// import { Card, Form, Input, Button, message, Icon, Checkbox } from 'antd';\r\n// import { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport './style.scss'\r\nimport Form1 from './Form1'\r\nimport Form2 from './Form2'\r\nimport Form3 from './Form3'\r\nimport Form4 from './Form4'\r\nimport Form5 from './Form5'\r\nexport default function Login () {\r\n\r\n  return (\r\n    <>\r\n      <Form1></Form1>\r\n      <Form2></Form2>\r\n      <Form3></Form3>\r\n      <Form4></Form4>\r\n      <Form5></Form5>\r\n    </>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Register extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        Register\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","//React 需要的 key，如果已经设置了唯一的 dataIndex，可以忽略这个属性\r\nimport React from 'react'\r\nimport { Tag, Button } from 'antd'\r\nexport const columns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n    render: text => <Button>{text}</Button>,\r\n  },\r\n  {\r\n    title: 'Age',\r\n    dataIndex: 'age',\r\n  },\r\n  {\r\n    title: 'Address',\r\n    dataIndex: 'address',\r\n  },\r\n  // 对Tags做处理\r\n  {\r\n    title: 'Tags',\r\n    dataIndex: 'tags',\r\n    render: tags => (\r\n      <span>\r\n        {tags.map(tag => {\r\n          let color = tag.length > 5 ? 'geekblue' : 'green';\r\n          if (tag === 'loser') {\r\n            color = 'volcano';\r\n          }\r\n          return (\r\n            <Tag color={color} key={tag}>\r\n              {tag.toUpperCase()}\r\n            </Tag>\r\n          );\r\n        })}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Action',\r\n    render: (text, record) => (\r\n      <span>\r\n        <Button style={{ marginRight: 16 }}>Invite {record.name}</Button>\r\n        <Button>Delete</Button>\r\n      </span>\r\n    ),\r\n  },\r\n];\r\n\r\nexport const columns2 = [\r\n  {\r\n    title: '用户名',\r\n    dataIndex: 'username',\r\n  },\r\n  {\r\n    title: '性别',\r\n    dataIndex: 'sex',\r\n    render: sexid => (<span>\r\n      {<span>{sexid === 1 ? '男' : '女'}</span>}\r\n    </span>\r\n    )\r\n\r\n  }, {\r\n    title: '状态',\r\n    dataIndex: 'state',\r\n    render: state => {\r\n      let config = {\r\n        '1': '完成',\r\n        '2': '未付款',\r\n        '3': '进行中',\r\n        '4': '付款中',\r\n        '5': '准备开始'\r\n      }\r\n      return config[state]\r\n    }\r\n  },\r\n  {\r\n    title: '爱好',\r\n    dataIndex: 'interest'\r\n  },\r\n  {\r\n    title: '婚否',\r\n    dataIndex: 'isMarried'\r\n  },\r\n  {\r\n    title: '生日',\r\n    dataIndex: 'birthday'\r\n  },\r\n  {\r\n    title: '地址',\r\n    dataIndex: 'address'\r\n  },\r\n  {\r\n    title: '时间',\r\n    dataIndex: 'time'\r\n  }\r\n]","import React, { useState, useEffect } from 'react'\r\nimport { Table, Spin } from 'antd'\r\n/**\r\n * 需要传递的参数\r\n * getItem/getList\r\n * rowSelection:check/radio/null\r\n * columns\r\n * dataSource\r\n * pagination true/false\r\n */\r\nexport default function ETable (props) {\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([])\r\n  const [selectedItem, setSelectedItem] = useState()\r\n  const [selectedItemCheck, setSelectedItemCheck] = useState([]);\r\n\r\n  const [pagination, setpagination] = useState(null)\r\n  let getItem = (val) => {\r\n    if (Array.isArray(val)) {\r\n      if (!val[0]) {\r\n        val.splice(0, 1)\r\n      }\r\n    }\r\n    return val;\r\n  }\r\n  // 分页\r\n  useEffect(() => {\r\n    setpagination({\r\n      showTotal: () => {\r\n        return `共${props.dataSource.length}条`\r\n      }\r\n    })\r\n  }, [props.dataSource])\r\n  // 多选\r\n  useEffect(() => {\r\n    if (props.getList) {\r\n      props.getList(getItem(selectedItemCheck))\r\n    }\r\n  }, [selectedItemCheck])\r\n  //单选\r\n  useEffect(() => {\r\n    if (props.getItem) {\r\n      props.getItem(getItem(selectedItem))\r\n    }\r\n  }, [selectedItem])\r\n\r\n  /**\r\n   * 处理行点击事件-\r\n   */\r\n  let onRowClick = (record, index) => {\r\n    let rowSelection = props.rowSelection;\r\n    //复选框单击操作\r\n    if (rowSelection === 'checkbox') {\r\n      // selectedItem = [];\r\n      // let judgeId = selectedRowKeys.indexOf(record.key);\r\n      // if (judgeId >= 0) {\r\n      //   selectedRowKeys.splice(judgeId, 1);\r\n      //   // selectedItemCheck.splice(judgeId, 1);\r\n      // } else {\r\n      //   selectedRowKeys.push(record.key);\r\n      //   selectedItemCheck.push(record);\r\n      // }\r\n      // setSelectedRowKeys([...selectedRowKeys])\r\n      // setSelectedItemCheck(selectedItemCheck);\r\n      console.log('功能已经取消~!')\r\n    } else\r\n    // 单选框单击操作\r\n    {\r\n      let selectKey = [index + 1];\r\n      // 当前选中和当前点击的如果是同一个,那么直接返回,不做取消的状态\r\n      if (selectedRowKeys && selectedRowKeys[0] === index + 1) {\r\n        return;\r\n      }\r\n      setSelectedRowKeys(selectKey)\r\n      setSelectedItem(record || {})\r\n    }\r\n  };\r\n  /**\r\n   * 选择框变更,调用原生的,\r\n   */\r\n  let onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let rowSelection = props.rowSelection;\r\n    if (rowSelection === 'checkbox') {\r\n      console.log('selectedRowKeys :', selectedRowKeys);\r\n      console.log('selectedRows :', selectedRows);\r\n      if (!selectedRows[0]) {\r\n        selectedRows.splice(0, 1);\r\n      }\r\n      setSelectedRowKeys([...selectedRowKeys])\r\n      setSelectedItemCheck([...selectedRows])\r\n    } else {\r\n      console.log('selectedRowKeys :', selectedRowKeys);\r\n      setSelectedRowKeys(selectedRowKeys)\r\n      setSelectedItem(selectedRows[0])\r\n    }\r\n  };\r\n  /**\r\n   * 全选按钮\r\n   */\r\n  let onSelectAll = (selected, selectedRows, changeRows) => {\r\n    let selectKey = [];\r\n    selectedRows.forEach((item, i) => {\r\n      selectKey.push(i);\r\n    });\r\n    // if (!selectKey[0]) {\r\n    //   selectKey.splice(0, 1);\r\n    // }\r\n    setSelectedItemCheck([...selectedRows])\r\n    setSelectedRowKeys([...selectKey])\r\n  }\r\n  /**\r\n   *  初始化\r\n   */\r\n  let InitTable = () => {\r\n    const rowSelection = {\r\n      type: 'radio',\r\n      selectedRowKeys: selectedRowKeys,\r\n      onChange: onSelectChange,\r\n      // 用户手动选择/取消选择某行的回调\r\n      onSelect: (record, selected, selectedRows) => {\r\n        console.log('手动取消选中的回调..')\r\n      },\r\n      onSelectAll: onSelectAll\r\n    };\r\n    let row_selection = props.rowSelection;\r\n    if (row_selection === false || row_selection === null) {\r\n      row_selection = false;\r\n    } else if (row_selection === 'checkbox') {\r\n      //设置类型未复选框\r\n      rowSelection.type = 'checkbox';\r\n    } else {\r\n      row_selection = 'radio';\r\n    }\r\n\r\n    let pagi_nation = props.dataSource ? props.pagination : null;\r\n\r\n    return <Spin spinning={!props.dataSource ? true : false}>\r\n      <Table\r\n        className=\"card page-table\"\r\n        bordered\r\n        {...props}\r\n        rowSelection={row_selection ? rowSelection : null}\r\n        onRow={(record, index) => ({\r\n          onClick: () => {\r\n            if (!row_selection) {\r\n              return;\r\n            }\r\n            onRowClick(record, index)\r\n          }\r\n        })}\r\n        pagination={pagi_nation ? pagination : false}\r\n      />\r\n    </Spin>\r\n  }\r\n  return (\r\n    <>\r\n      {InitTable()}\r\n    </>\r\n  )\r\n}","import React, { Component } from 'react'\r\n// import Utils from './../../../utils/utils';\r\nimport ETable from '../../../components/ETable/EtableFun1.js';\r\nimport axios from '../../../axios/axios';\r\nimport { Card, } from 'antd';\r\nimport { columns2 } from './columns';\r\nexport default class Cll extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.Etable = React.createRef();\r\n  }\r\n  state = {\r\n    selectedRowKeys22: [],\r\n    listData: [],\r\n    item: []\r\n  }\r\n  checkMore = {\r\n    type: 'checkbox',\r\n    // 细节,第一个参数必须是selectedRowKeys\r\n    selectedRowKeys: this.state.selectedRowKeys22,\r\n    // 复选框自身的方法\r\n    onChange: (selected, selectedRow22) => {\r\n      console.log('selectedRowKeys :', selected);\r\n      // rowSelectChange22(selected, selectedRow22)\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    getData().then((res) => {\r\n      console.log('res :', res);\r\n      this.setState({\r\n        listData: res.list\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * \r\n   */\r\n  handleClick = (item) => {\r\n    console.log(item)\r\n    this.setState({\r\n      item\r\n    })\r\n  }\r\n\r\n  render () {\r\n    console.log('object :', this.state.listData);\r\n    return (\r\n      <>\r\n        <Card className=\"card-wrap\" title=\"自定义\">\r\n          <ETable\r\n            rowSelection='checkbox'\r\n            dataSource={this.state.listData}\r\n            columns={columns2}\r\n            getList={func => {\r\n              console.log('func', func);\r\n              // this.setState({\r\n              //   item: func\r\n              // })\r\n              // 调用方法\r\n              this.handleClick(func)\r\n            }}\r\n          />\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nasync function getData () {\r\n  let res = await axios.axiosGet({\r\n    url: '/table/list',\r\n  }).then((res) => {\r\n    return res\r\n  })\r\n  let result = await res.result;\r\n  return result\r\n\r\n}","export const data = [\r\n  {\r\n    key: '1',\r\n    name: 'John Brown',\r\n    age: 32,\r\n    address: 'New York No. 1 Lake Park',\r\n    tags: ['nice', 'developer', 'top', 'com', 'ajax', 'res'],\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'Jim Green',\r\n    age: 42,\r\n    address: 'London No. 1 Lake Park',\r\n    tags: ['loser'],\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'Joe Black',\r\n    age: 32,\r\n    address: 'Sidney No. 1 Lake Park',\r\n    tags: ['cool', 'teacher'],\r\n  },\r\n];","import React, { useState, useEffect } from 'react'\r\nimport { Table, Card, Spin, Button, Modal, message } from 'antd';\r\nimport { columns, columns2 } from './columns';\r\nimport ClaTab from './claTab'\r\nimport { data } from './data'\r\nimport axios from '../../../axios/axios'\r\nimport './style.scss'\r\nexport default function BasicTable () {\r\n  const [listData, setListData] = useState([])\r\n  /**\r\n   * 单选\r\n   */\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [selectItem, setselectItem] = useState(null);\r\n  console.log('selectItem :', selectItem);\r\n  const rowSelection = {\r\n    type: 'radio',\r\n    selectedRowKeys,\r\n    // 单选框自身的方法\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      rowSelectChange(selectedRowKeys, selectedRows)\r\n    }\r\n  }\r\n  let rowSelectChange = (selectedRowKeys, selectedRows) => {\r\n    setSelectedRowKeys(selectedRowKeys);\r\n    setselectItem(selectedRows)\r\n  }\r\n  /**\r\n   * 单选表格点击方法\r\n   * @param {记录} record \r\n   * @param {*} index \r\n   */\r\n  let handleClick = (record, index) => {\r\n    console.log('index :', index);\r\n    let selectKey = [index + 1];\r\n    console.log('selectKey :', selectKey);\r\n    setSelectedRowKeys([...selectKey]);\r\n    setselectItem(record)\r\n  }\r\n\r\n  /**\r\n   * 多选\r\n   */\r\n  const [selectedRowKeys22, setSelectedRowKeys22] = useState([]);\r\n  const [selectItem22, setselectItem22] = useState([]);\r\n  const checkMore = {\r\n    type: 'checkbox',\r\n    // 细节,第一个参数必须是selectedRowKeys\r\n    selectedRowKeys: selectedRowKeys22,\r\n    // 复选框自身的方法\r\n    onChange: (selected, selectedRow22) => {\r\n      console.log('selectedRowKeys :', selected);\r\n      rowSelectChange22(selected, selectedRow22)\r\n    }\r\n  }\r\n  let rowSelectChange22 = (s2, s2Rows) => {\r\n    setSelectedRowKeys22([...s2]);\r\n    setselectItem22([...s2Rows])\r\n  }\r\n  /**\r\n   * 复选表格点击方法\r\n   */\r\n  let handleClick22 = (rec) => {\r\n    console.log('rec :', rec);//{id: 1, username: \"赵敏\", sex: 2, state: 3, interest: 4, …}\r\n    if (selectedRowKeys22.indexOf(rec.key) >= 0) {\r\n      //删除\r\n      selectedRowKeys22.splice(selectedRowKeys22.indexOf(rec.key), 1);\r\n      selectItem22.splice(selectedRowKeys22.indexOf(rec.key), 1)\r\n    } else {//增加\r\n      //表格内，所有被选中数据的，key的集合\r\n      console.log('typeof rec.key :', typeof rec.key);\r\n      selectedRowKeys22.push(rec.key);\r\n      //表格内，所有被选中数据的，集合\r\n      selectItem22.push(rec);\r\n    }\r\n    setSelectedRowKeys22([...selectedRowKeys22]);\r\n    setselectItem22(selectItem22)\r\n  }\r\n  //初始化数据\r\n  useEffect(() => {\r\n    getData().then((res) => {\r\n      console.log('res :', res);\r\n      setTimeout(() => {\r\n        setListData([...res.list])\r\n      }, 3000)\r\n    })\r\n  }, [])\r\n  /**\r\n   * 删除操作\r\n   */\r\n  let handleDelete = (() => {\r\n    console.log('selectItem22 :', selectItem22);\r\n    let ids = []\r\n    selectItem22.forEach((item) => {\r\n      ids.push(item.id);\r\n    })\r\n    Modal.confirm({\r\n      title: '删除',\r\n      content: `确定要删除${ids.join(',')}`,\r\n      onOk: () => {\r\n        // 调用接口\r\n        message.success('删除成功');\r\n        //请求新的数据\r\n        setSelectedRowKeys22([]);\r\n        setselectItem22([]);\r\n      }\r\n    })\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Card className='card-wrap' title=\"基础表格\" >\r\n        <Table dataSource={data} columns={columns} pagination={false} />\r\n      </Card>\r\n      <Card className='card-wrap' title=\"动态表格+Loading状态\" >\r\n        <Spin spinning={listData.length === 0 ? true : false}>\r\n          <Table columns={columns2} pagination={true} dataSource={listData} />\r\n        </Spin>\r\n      </Card>\r\n      <Card className='card-wrap' title=\"单选表格\" >\r\n        <Spin spinning={listData.length === 0 ? true : false}>\r\n          <Table onRow={(record, index) => { return { onClick: () => { handleClick(record, index) } } }}\r\n            columns={columns2}\r\n            // 设置单选还是多选-单选\r\n            rowSelection={{ ...rowSelection }}\r\n            pagination={true} dataSource={listData} />\r\n        </Spin>\r\n      </Card>\r\n      <Card className='card-wrap' title=\"多选表格\" >\r\n        <Spin spinning={listData.length === 0 ? true : false}>\r\n          <Button onClick={handleDelete}>删除</Button>\r\n          <Table onRow={(record, index) => { return { onClick: () => { handleClick22(record, index) } } }}\r\n            columns={columns2}\r\n            // 设置单选还是多选-多选\r\n            rowSelection={{ ...checkMore }}\r\n            pagination={true} dataSource={listData} />\r\n        </Spin>\r\n      </Card>\r\n      <ClaTab></ClaTab>\r\n    </>\r\n  )\r\n}\r\n\r\nasync function getData () {\r\n  let res = await axios.axiosGet({\r\n    url: '/table/list',\r\n  }).then((res) => {\r\n    return res\r\n  })\r\n  let result = await res.result;\r\n  return result\r\n}\r\n\r\n// let request = () => {\r\n//   return \r\n// }\r\n","// import React from 'react';\r\n\r\n\r\nexport const columns = [\r\n  {\r\n    title: 'id',\r\n    key: 'id',\r\n    width: 80,\r\n    dataIndex: 'id'\r\n  },\r\n  {\r\n    title: '用户名',\r\n    key: 'userName',\r\n    width: 80,\r\n    dataIndex: 'userName'\r\n  },\r\n  {\r\n    title: '性别',\r\n    key: 'sex',\r\n    width: 80,\r\n    dataIndex: 'sex',\r\n    render (sex) {\r\n      return sex === 1 ? '男' : '女'\r\n    }\r\n  },\r\n  {\r\n    title: '状态',\r\n    key: 'state',\r\n    width: 80,\r\n    dataIndex: 'state',\r\n    render (state) {\r\n      let config = {\r\n        '1': '开始',\r\n        '2': '进行中',\r\n        '3': '结束',\r\n        '4': '付款',\r\n        '5': '付款完成'\r\n      }\r\n      return config[state];\r\n    }\r\n  },\r\n  {\r\n    title: '爱好',\r\n    key: 'interest',\r\n    width: 80,\r\n    dataIndex: 'interest',\r\n    render (abc) {\r\n      let config = {\r\n        '1': '游泳',\r\n        '2': '打篮球',\r\n        '3': '踢足球',\r\n        '4': '跑步',\r\n        '5': '爬山',\r\n        '6': '骑行',\r\n        '7': '桌球',\r\n        '8': '麦霸'\r\n      }\r\n      return config[abc];\r\n    }\r\n  },\r\n  {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  },\r\n  {\r\n    title: '地址',\r\n    key: 'address',\r\n    width: 120,\r\n    dataIndex: 'address'\r\n  },\r\n  {\r\n    title: '早起时间',\r\n    key: 'time',\r\n    width: 80,\r\n    dataIndex: 'time'\r\n  }\r\n]\r\n\r\nexport const columns2 = [\r\n  {\r\n    title: 'id',\r\n    key: 'id',\r\n    width: 80,\r\n    fixed: 'left',\r\n    dataIndex: 'id'\r\n  },\r\n  {\r\n    title: '用户名',\r\n    key: 'userName',\r\n    width: 80,\r\n    fixed: 'left',\r\n    dataIndex: 'userName'\r\n  },\r\n  {\r\n    title: '性别',\r\n    key: 'sex',\r\n    width: 80,\r\n    dataIndex: 'sex',\r\n    render (sex) {\r\n      return sex === 1 ? '男' : '女'\r\n    }\r\n  },\r\n  {\r\n    title: '状态',\r\n    key: 'state',\r\n    width: 80,\r\n    dataIndex: 'state',\r\n    render (state) {\r\n      let config = {\r\n        '1': '开始',\r\n        '2': '进行中',\r\n        '3': '结束',\r\n        '4': '付款',\r\n        '5': '付款完成'\r\n      }\r\n      return config[state];\r\n    }\r\n  },\r\n  {\r\n    title: '爱好',\r\n    key: 'interest',\r\n    width: 80,\r\n    dataIndex: 'interest',\r\n    render (abc) {\r\n      let config = {\r\n        '1': '游泳',\r\n        '2': '打篮球',\r\n        '3': '踢足球',\r\n        '4': '跑步',\r\n        '5': '爬山',\r\n        '6': '骑行',\r\n        '7': '桌球',\r\n        '8': '麦霸'\r\n      }\r\n      return config[abc];\r\n    }\r\n  },\r\n  {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  },\r\n  {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  }, {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  }, {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  }, {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  }, {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  }, {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  }, {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  }, {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  }, {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  }, {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  }, {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  }, {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  }, {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  }, {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  }, {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  }, {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    width: 120,\r\n    dataIndex: 'birthday'\r\n  },\r\n  {\r\n    title: '地址',\r\n    key: 'address',\r\n    width: 120,\r\n    fixed: 'right',\r\n    dataIndex: 'address'\r\n  },\r\n  {\r\n    title: '早起时间',\r\n    key: 'time',\r\n    width: 80,\r\n    fixed: 'right',\r\n    dataIndex: 'time'\r\n  }\r\n]\r\n\r\nexport const columns3 = [\r\n  {\r\n    title: 'id',\r\n    key: 'id',\r\n    dataIndex: 'id'\r\n  },\r\n  {\r\n    title: '用户名',\r\n    key: 'userName',\r\n    dataIndex: 'userName'\r\n  },\r\n  {\r\n    title: '性别',\r\n    key: 'sex',\r\n    dataIndex: 'sex',\r\n    render (sex) {\r\n      return sex === 1 ? '男' : '女'\r\n    }\r\n  },\r\n  {\r\n    title: '年龄',\r\n    key: 'age',\r\n    dataIndex: 'age',\r\n    sorter: (a, b) => {\r\n      return a.age - b.age;\r\n    },\r\n    // sortOrder:this.state.sortOrder\r\n  },\r\n  {\r\n    title: '状态',\r\n    key: 'state',\r\n    dataIndex: 'state',\r\n    render (state) {\r\n      let config = {\r\n        '1': '准备',\r\n        '2': '进行中',\r\n        '3': '结束',\r\n        '4': '付款',\r\n        '5': '付款完成'\r\n      }\r\n      return config[state];\r\n    }\r\n  },\r\n  {\r\n    title: '爱好',\r\n    key: 'interest',\r\n    dataIndex: 'interest',\r\n    render (abc) {\r\n      let config = {\r\n        '1': '游泳',\r\n        '2': '打篮球',\r\n        '3': '踢足球',\r\n        '4': '跑步',\r\n        '5': '爬山',\r\n        '6': '骑行',\r\n        '7': '桌球',\r\n        '8': '麦霸'\r\n      }\r\n      return config[abc];\r\n    }\r\n  },\r\n  {\r\n    title: '生日',\r\n    key: 'birthday',\r\n    dataIndex: 'birthday'\r\n  },\r\n  {\r\n    title: '地址',\r\n    key: 'address',\r\n    dataIndex: 'address'\r\n  },\r\n  {\r\n    title: '早起时间',\r\n    key: 'time',\r\n    dataIndex: 'time'\r\n  }\r\n]","// 表格每一个都可以调用render方法获取当前的text和Item，这样的话删除或者编辑就方便太多了\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Table, Card, Badge, Button, Modal, message } from 'antd';\r\nimport { columns, columns2, columns3, } from './columns';\r\n// import { } from './data'\r\nimport axios from '../../../axios/axios'\r\nimport './style.scss'\r\n// let params = {\r\n//   page: 1\r\n// }\r\nexport default function HighTable () {\r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  /**\r\n   * 获取数据\r\n   */\r\n  useEffect(() => {\r\n    getData().then((res) => {\r\n      // console.log('res.list :', res.list);\r\n      res.list.forEach((item, index) => {\r\n        item['key'] = index;\r\n      })\r\n      setDataSource([...res.list])\r\n    })\r\n  }, [])\r\n  /**\r\n   * 表格排序\r\n   * @param {分页} pagination \r\n   * @param {过滤} filters \r\n   * @param {排序} sorter \r\n   */\r\n  const [sortOrder, setSortOrder] = useState(\"\");\r\n  console.log('sortOrder :', sortOrder);\r\n  let handleChange = (pagination, filters, sorter) => {\r\n    setSortOrder(sorter.order)\r\n  }\r\n\r\n  const columns4 = [\r\n    {\r\n      title: 'id',\r\n      dataIndex: 'id'\r\n    },\r\n    {\r\n      title: '用户名',\r\n      dataIndex: 'userName'\r\n    },\r\n    {\r\n      title: '性别',\r\n      dataIndex: 'sex',\r\n      render (sex) {\r\n        return sex === 1 ? '男' : '女'\r\n      }\r\n    },\r\n    {\r\n      title: '年龄',\r\n      dataIndex: 'age'\r\n    },\r\n    {\r\n      title: '状态',\r\n      dataIndex: 'state',\r\n      render (state) {\r\n        let config = {\r\n          '1': '准备',\r\n          '2': '进行中',\r\n          '3': '结束',\r\n          '4': '付款',\r\n          '5': '付款完成'\r\n        }\r\n        return config[state];\r\n      }\r\n    },\r\n    {\r\n      title: '爱好',\r\n      dataIndex: 'interest',\r\n      render (abc) {\r\n        let config = {\r\n          '1': <Badge status=\"success\" text=\"成功\" />,\r\n          '2': <Badge status=\"error\" text=\"报错\" />,\r\n          '3': <Badge status=\"default\" text=\"正常\" />,\r\n          '4': <Badge status=\"processing\" text=\"进行中\" />,\r\n          '5': <Badge status=\"warning\" text=\"警告\" />\r\n        }\r\n        return config[abc];\r\n      }\r\n    },\r\n    {\r\n      title: '生日',\r\n      dataIndex: 'birthday'\r\n    },\r\n    {\r\n      title: '地址',\r\n      dataIndex: 'address',\r\n      render: (text, item) => {\r\n        console.log('item :', item);\r\n      }\r\n    },\r\n    {\r\n      title: '操作',\r\n      render: (text, item) => {\r\n        return <Button size=\"small\"\r\n          onClick={() => { handleDelete(item) }}\r\n        >删除</Button>\r\n      }\r\n    }\r\n  ]\r\n  let handleDelete = (item) => {\r\n    console.log('item :', item);\r\n    let id = item.id;\r\n    Modal.confirm({\r\n      title: '确认',\r\n      content: '您确认要删除此条数据吗？' + id,\r\n      onOk: () => {\r\n        message.success('删除成功');\r\n        // this.request();\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <Spin spinning={listData.length === 0 ? true : false}>\r\n    <Table onRow={(record, index) => { return { onClick: () => { handleClick(record, index) } } }} columns={columns2} rowSelection={{ ...rowSelection }} pagination={false} dataSource={listData} />\r\n  </Spin> */}\r\n      <Card className='card-wrap' title=\"头部固定\" >\r\n        <Table\r\n          bordered\r\n          columns={columns}\r\n          dataSource={dataSource}\r\n          pagination={true}\r\n          scroll={{ y: 240 }}\r\n        />\r\n      </Card>\r\n      <Card className='card-wrap' title=\"左侧固定\" >\r\n        <Table\r\n          bordered\r\n          columns={columns2}\r\n          dataSource={dataSource}\r\n          pagination={true}\r\n          scroll={{ x: 2650 }}\r\n        />\r\n      </Card>\r\n      <Card className='card-wrap' title=\"表格排序\" >\r\n        <Table\r\n          bordered\r\n          columns={columns3}\r\n          dataSource={dataSource}\r\n          pagination={true}\r\n          onChange={handleChange}\r\n        />\r\n      </Card>\r\n      <Card className='card-wrap' title=\"操作按钮\" >\r\n        <Table\r\n          bordered\r\n          columns={columns4}\r\n          dataSource={dataSource}\r\n          pagination={true}\r\n        />\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nasync function getData () {\r\n  let res = await axios.axiosGet({\r\n    url: '/table/high/list',\r\n  }).then((res) => {\r\n    return res\r\n  })\r\n  let result = await res.result;\r\n  return result\r\n}\r\n\r\n\r\n\r\n","import React, { useRef, useEffect } from 'react'\r\nimport { Form, Select } from 'antd';\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 5\r\n  },\r\n  wrapperCol: { span: 19 }\r\n}\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nexport default function OpenCityForm (props) {\r\n  let openCityForm = useRef(null);\r\n  useEffect(() => {\r\n    props.formRef(openCityForm);\r\n  })\r\n  return (\r\n    <>\r\n      <Form\r\n        layout=\"horizontal\"\r\n        initialValues={{ city_id: \"\", op_mode: \"1\", mode: \"\" }}\r\n        ref={openCityForm}\r\n      >\r\n        <FormItem label=\"选择城市\" {...formItemLayout}\r\n          name=\"city_id\"\r\n        >\r\n          <Select style={{ width: 100 }}>\r\n            <Option value=\"\">全部</Option>\r\n            <Option value=\"1\">北京市</Option>\r\n            <Option value=\"2\">天津市</Option>\r\n            <Option value=\"3\">深圳市</Option>\r\n          </Select>\r\n        </FormItem>\r\n        <FormItem label=\"营业模式\" {...formItemLayout} name=\"op_mode\">\r\n          <Select style={{ width: 100 }}>\r\n            <Option value=\"1\">自营</Option>\r\n            <Option value=\"2\">加盟</Option>\r\n          </Select>\r\n        </FormItem>\r\n        <FormItem label=\"用车模式\" {...formItemLayout} name=\"mode\">\r\n          <Select style={{ width: 100 }}>\r\n            <Option value=\"\">全部</Option>\r\n            <Option value=\"1\">指定停车点模式</Option>\r\n            <Option value=\"2\">禁停区模式</Option>\r\n          </Select>\r\n        </FormItem>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Button, Form, Select } from 'antd';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nexport default function FilterForm () {\r\n  return (\r\n    <>\r\n      <Form layout=\"inline\" >\r\n        <FormItem label=\"城市\" name=\"city_id\">\r\n          <Select\r\n            style={{ width: 100 }}\r\n            placeholder=\"全部\"\r\n          >\r\n            <Option value=\"\">全部</Option>\r\n            <Option value=\"1\">北京市</Option>\r\n            <Option value=\"2\">天津市</Option>\r\n            <Option value=\"3\">深圳市</Option>\r\n          </Select>\r\n        </FormItem>\r\n        <FormItem label=\"用车模式\" name=\"mode\">\r\n          <Select\r\n            style={{ width: 120 }}\r\n            placeholder=\"全部\"\r\n          >\r\n            <Option value=\"\">全部</Option>\r\n            <Option value=\"1\">指定停车点模式</Option>\r\n            <Option value=\"2\">禁停区模式</Option>\r\n          </Select>\r\n        </FormItem>\r\n        <FormItem label=\"营运模式\" name=\"op_mode\">\r\n          <Select\r\n            style={{ width: 80 }}\r\n            placeholder=\"全部\"\r\n          >\r\n            <Option value=\"\">全部</Option>\r\n            <Option value=\"1\">自营</Option>\r\n            <Option value=\"2\">加盟</Option>\r\n          </Select>\r\n        </FormItem>\r\n        <FormItem label=\"加盟商授权状态\" name=\"auth_status\">\r\n          <Select\r\n            style={{ width: 100 }}\r\n            placeholder=\"全部\"\r\n          >\r\n            <Option value=\"\">全部</Option>\r\n            <Option value=\"1\">已授权</Option>\r\n            <Option value=\"2\">未授权</Option>\r\n          </Select>\r\n        </FormItem>\r\n        <FormItem>\r\n          <Button type=\"primary\" style={{ margin: '0 20px' }}>查询</Button>\r\n          <Button>重置</Button>\r\n        </FormItem>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n","import utils from './../../utils/utils';\r\nexport const params = {\r\n  page: 1\r\n}\r\nexport const columns = [\r\n  {\r\n    title: '城市ID',\r\n    dataIndex: 'id'\r\n  }, {\r\n    title: '城市名称',\r\n    dataIndex: 'name'\r\n  }, {\r\n    title: '用车模式',\r\n    dataIndex: 'mode',\r\n    render (mode) {\r\n      return mode === 1 ? '指定停车点模式' : '禁停区模式';\r\n    }\r\n  }, {\r\n    title: '营运模式',\r\n    dataIndex: 'op_mode',\r\n  }, {\r\n    title: '授权加盟商',\r\n    dataIndex: 'franchisee_name'\r\n  }, {\r\n    title: '城市管理员',\r\n    dataIndex: 'city_admins',\r\n    render (arr) {\r\n      return arr.map((item) => {\r\n        return item.user_name;\r\n      }).join(',');\r\n    }\r\n  }, {\r\n    title: '城市开通时间',\r\n    dataIndex: 'open_time'\r\n  }, {\r\n    title: '操作时间',\r\n    dataIndex: 'update_time',\r\n    render: utils.formateDate //格式化时间戳\r\n  }, {\r\n    title: '操作人',\r\n    dataIndex: 'sys_user_name'\r\n  }\r\n]","import React, { useState, useEffect } from 'react'\r\nimport { Table, Card, Button, Modal, Col } from 'antd';\r\nimport axios from './../../axios/axios';\r\n// import utils from './../../utils/utils';\r\nimport OpenCityForm from './OpenCityForm'\r\nimport FilterForm from './FilterForm';\r\nimport { params, columns } from './data'\r\n// const FormItem = Form.Item;\r\n// const Option = Select.Option;\r\nimport './City.scss'\r\n\r\nconst City = () => {\r\n  let formObj = null;\r\n  const [list, setList] = useState([]);\r\n  const [isShowOpenCity, setIsShowOpenCity] = useState(false);\r\n  const [pagination, setpagination] = useState(null)\r\n  const [resF, setRes] = useState(null);\r\n  console.log('object :', resF);\r\n  useEffect(() => {\r\n    requestList().then((res) => {\r\n      console.log('res.result.page :', res);\r\n      /**\r\n       * 获取基本数据,存储到List当中\r\n       */\r\n      setRes(res);\r\n      let Arr = res.result.item_list.map((item, index) => {\r\n        item.key = index;\r\n        return item;\r\n      })\r\n      setList([...Arr])\r\n      // 分页自己带了,但是还需要自己实现一下思路\r\n      setpagination({\r\n        showTotal: () => {\r\n          return `共${res.result.item_list.length}条`\r\n          // return `共${total}条`\r\n        }\r\n      })\r\n      /**\r\n       *  分页操作,利用antd的话,直接把数据放到里面,设置分页就直接分好了\r\n       */\r\n    });\r\n  }, [])\r\n\r\n  // async function pageGet () {\r\n  // let pageObj = utils.pagination(res,                  //参数1,设置基础数据\r\n  //   (current) => {        //参数2,回调函数,也是分页组件里面的onchange事件,当切换页面的时候调用的函数\r\n  //     params.page = current;   //设置参数页,用于下面再进行请求指定页面的数据\r\n  //     requestList().then((res) => {\r\n  //       // console.log('respage :', res);\r\n  //       let newPage = utils.pagination(res);\r\n  //       console.log('newPage :', newPage);\r\n  //       setpagination(newPage)\r\n  //     });\r\n  //   })\r\n  // console.log('pageObj', pageObj)\r\n  // setpagination(pageObj)\r\n  // }\r\n  /**\r\n   * 开通城市-OnOk\r\n   */\r\n  let handleSubmit = () => {\r\n    let data = formObj.current.getFieldsValue();\r\n    console.log('data :', data);\r\n    axios.ajax({\r\n      url: 'http://www.qiuhang.club:7300/mock/5e8c119b00fbdf09dcf21f9f/bike/city/open',\r\n      data: {\r\n        ...data\r\n      }\r\n    }).then((res) => {\r\n      console.log('res :', res);\r\n      Modal.info({\r\n        title: '开通城市',\r\n        content: '开通成功'\r\n      })\r\n    })\r\n    setIsShowOpenCity(false)\r\n  }\r\n  /**\r\n   * 开通城市操作-Open\r\n   */\r\n  let handleOpenCity = () => {\r\n    setIsShowOpenCity(true)\r\n  }\r\n  return (\r\n    <>\r\n      <Card className=\"card-wrapper\" style={{ marginTop: 10 }}>\r\n        <FilterForm></FilterForm>\r\n      </Card>\r\n      <Card className=\"card-wrapper\" style={{ marginTop: 10 }}>\r\n        <Col span={2} offset={22}>\r\n          <Button type=\"primary\" className=\"btn\" onClick={handleOpenCity}>开通城市</Button>\r\n        </Col>\r\n      </Card>\r\n      <Card className=\"card-wrapper\" style={{ marginTop: 10 }}>\r\n        <div className=\"content-wrap\">\r\n          <Table columns={columns}\r\n            dataSource={list}\r\n            pagination={pagination}\r\n          >\r\n          </Table>\r\n          {/* <Pagination size=\"small\" total={50} showTotal={(total) => {\r\n            return `Total ${total} items`;\r\n          }} />\r\n          <Pagination {...pagination} /> */}\r\n        </div>\r\n      </Card>\r\n      <Modal\r\n        title=\"开通城市\"\r\n        visible={isShowOpenCity}\r\n        onCancel={() => {\r\n          setIsShowOpenCity(false)\r\n        }}\r\n        onOk={handleSubmit}\r\n      >\r\n        <OpenCityForm\r\n          formRef={(form) => {\r\n            formObj = form\r\n          }}\r\n        ></OpenCityForm>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\n// 请求数据\r\nconst requestList = () => {\r\n  return axios.ajax({\r\n    url: 'http://www.qiuhang.club:7300/mock/5e8c119b00fbdf09dcf21f9f/bike/open_city_copy',\r\n    data: {\r\n      params: {\r\n        page: params.page\r\n      }\r\n    }\r\n  }).then((res) => {\r\n    return res\r\n  })\r\n}\r\nexport default City","import React, { Fragment } from 'react'\r\nimport { Input, Select, Form, Button, Checkbox, Radio, DatePicker } from 'antd';\r\nimport locale from 'antd/es/date-picker/locale/zh_CN';\r\n// import moment from 'moment';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst { RangePicker } = DatePicker;\r\n/**\r\n * 获取表单数据的集合\r\n *  getFieldValue\r\n *  getFieldsValue\r\n */\r\n// const [form] = Form.useForm();\r\n\r\nexport default class BaseForm extends React.Component {\r\n  // 怎么直接获取到表单的字段,并且返回去?-->利用ref\r\n  // 每次修改的时候,获取最新的表单值\r\n  formRef = React.createRef();\r\n  // 提交表单且数据验证成功后回调事件\r\n  onFinish = (fieldsValue) => {\r\n    let values;\r\n    // name字段\r\n    // 单选时间控件和范围时间控件目前只能二选一\r\n    if (fieldsValue['range-picker']) {\r\n      const rangeValue = fieldsValue['range-picker'];\r\n      values = {\r\n        ...fieldsValue,\r\n        'rangePicker': [\r\n          rangeValue[0].format('YYYY-MM-DD HH:mm:ss'),\r\n          rangeValue[1].format('YYYY-MM-DD HH:mm:ss'),\r\n        ],\r\n      };\r\n    } else if (fieldsValue['date-picker']) {\r\n      const datePicker = fieldsValue['date-picker'];\r\n      values = {\r\n        ...fieldsValue,\r\n        'datePicker':\r\n          datePicker.format('YYYY-MM-DD HH:mm:ss'),\r\n      };\r\n    } else {\r\n      values = {\r\n        ...fieldsValue\r\n      }\r\n    }\r\n    console.log('Received values of form: ', values);\r\n    /**\r\n     * 调用父级的方法\r\n     */\r\n    this.props.filterSubmit(values)\r\n  }\r\n  /**\r\n   * 正常点击按钮\r\n   */\r\n  onClick = () => {\r\n    console.log('点击')\r\n  }\r\n  /**\r\n   * 重置按钮\r\n   */\r\n  onReset = () => {\r\n    console.log('重置');\r\n    this.formRef.current.resetFields();\r\n  }\r\n  initFormList = () => {\r\n    let arr = []\r\n    // const getField = this.props.form;\r\n    // 结构\r\n    const formList = this.props.formList;\r\n    if (formList && formList.length) {\r\n      formList.forEach((item) => {\r\n        let name = item.name || '';\r\n        let type = item.type;\r\n        let label = item.label;\r\n        let placeholder = item.placeholder;\r\n        let list = item.list;\r\n        let width = item.width;\r\n        let options = item.options;\r\n        let defaultV = item.defaultV;\r\n        arr.push(formItemList(type, name, label, placeholder, list, width, options, defaultV));\r\n        // arr.push(formItemList({ ...item }));\r\n      })\r\n    }\r\n    return arr;\r\n  }\r\n  render () {\r\n    return (\r\n      <Form ref={this.formRef}\r\n        onFinish={this.onFinish}\r\n        initialValues={{ ...this.props.initValue }}\r\n        layout={this.props.formLayout ? this.props.formLayout : 'inline'}\r\n        {...this.props.layout}\r\n      >\r\n        {/* 动态生成表单 */}\r\n        {\r\n          this.initFormList().map((item, index) => {\r\n            return <Fragment key={index}>{item}</Fragment>\r\n          })\r\n        }\r\n        {this.props.submit ? <FormItem>\r\n          <Button type=\"primary\" htmlType=\"submit\" style={{ marginLeft: '30px' }}>\r\n            submit提交按钮\r\n            </Button>\r\n          {/* <Button htmlType=\"button\" onClick={this.onClick}>\r\n            正常点击按钮\r\n              </Button> */}\r\n          <Button style={{ marginLeft: '30px' }} htmlType=\"button\" onClick={this.onReset}>\r\n            重置\r\n          </Button>\r\n        </FormItem> : ''}\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * 封装option集合\r\n * @param {option表数据} data \r\n */\r\nlet getOptionList = (data) => {\r\n  if (!data) {\r\n    return [];\r\n  }\r\n  let options = [] //[<Option value=\"0\" key=\"all_key\">全部</Option>];\r\n  data.forEach((item) => {\r\n    options.push(<Option value={item.id} key={item.id}>{item.name}</Option>)\r\n  })\r\n  return options;\r\n}\r\n/**\r\n * 表逻辑封装\r\n * @param {表单类型}} type \r\n * @param {唯一标识id} name \r\n * @param {文字提示} label \r\n * @param {默认值} placeholder \r\n * @param {表单数据} list \r\n * @param {宽度} width \r\n */\r\nlet formItemList = (type, name, label, placeholder, list, width, options, defaultV) => {\r\n  let form = {\r\n    \"select\": <FormItem name={name} label={label}>\r\n      <Select placeholder={placeholder} style={{ width: width }}>\r\n        {getOptionList(list)}\r\n      </Select>\r\n    </FormItem>,\r\n    'input': <FormItem name={name} label={label}>\r\n      <Input type=\"text\" placeholder={placeholder} style={{ width: width }} />\r\n    </FormItem>,\r\n    'password': <FormItem name={name} label={label}>\r\n      <Input type=\"password\" placeholder={placeholder} style={{ width: width }} />\r\n    </FormItem>,\r\n    'checkbox': <FormItem name={name} label={label}>\r\n      <Checkbox.Group onChange={onCheckBoxChange} options={options} defaultChecked={defaultV} ></Checkbox.Group>\r\n    </FormItem>,\r\n    'radiogroup': <FormItem name={name} label={label}>\r\n      <Radio.Group onChange={onRadioChange} options={options} defaultValue={defaultV} ></Radio.Group>\r\n    </FormItem>,\r\n    'rangepicker': <FormItem name={name} label={label}>\r\n      <RangePicker style={{ width: width }} showTime locale={locale} format=\"YYYY-MM-DD HH:mm:ss\" onChange={onRangeChange} />\r\n    </FormItem>,\r\n    'datepicker': <FormItem name={name} label={label}>\r\n      <DatePicker style={{ width: width }} showTime locale={locale} format=\"YYYY-MM-DD HH:mm:ss\" onChange={onDateChange} />\r\n    </FormItem>,\r\n  }\r\n  return form[type];\r\n}\r\n/**\r\n * checkBox逻辑\r\n * @param {事件对象} e \r\n */\r\nlet onCheckBoxChange = (checkedValues) => {\r\n  console.log(`checkedValues = ${checkedValues}`);\r\n}\r\n/**\r\n * Radio逻辑\r\n * @param {事件对象} e \r\n */\r\nlet onRadioChange = (e) => {\r\n  console.log(`checkedValues = ${e.target.value}`);\r\n}\r\n/**\r\n * 范围时间控件回调\r\n * @param {moment} date \r\n * @param {正常时间} dateString \r\n */\r\nlet onRangeChange = (date, dateString) => {\r\n  console.log('dateString :', dateString);\r\n}\r\n/**\r\n * 单个时间控件\r\n */\r\nlet onDateChange = (date, dateString) => {\r\n  /**\r\n    * date:moment对象\r\n    * dateString:正常字符串\r\n    */\r\n  console.log(date, dateString);\r\n}","export const columns = [\r\n  {\r\n    title: '订单编号',\r\n    dataIndex: 'order_sn'\r\n  }, {\r\n    title: '车辆编号',\r\n    dataIndex: 'bike_sn'\r\n  }, {\r\n    title: '用户名',\r\n    dataIndex: 'user_name',\r\n  }, {\r\n    title: '手机号',\r\n    dataIndex: 'mobile'\r\n  }, {\r\n    title: '里程',\r\n    dataIndex: 'distance',\r\n    render (distance) {\r\n      return distance / 1000 + 'Km';\r\n    }\r\n  }, {\r\n    title: '行驶时长',\r\n    dataIndex: 'total_time'\r\n  }, {\r\n    title: '状态',\r\n    dataIndex: 'status',\r\n  }, {\r\n    title: '开始时间',\r\n    dataIndex: 'start_time'\r\n  }, {\r\n    title: '结束时间',\r\n    dataIndex: 'end_time'\r\n  }, {\r\n    title: '订单金额',\r\n    dataIndex: 'total_fee'\r\n  }, {\r\n    title: '实付金额',\r\n    dataIndex: 'user_pay'\r\n  }\r\n]\r\nexport const formList2 = [\r\n  {\r\n    type: 'SELECT',\r\n    label: '城市',\r\n    field: 'city',\r\n    placeholder: '全部',\r\n    initialValue: '1',\r\n    width: 80,\r\n    list: [{ id: '0', name: '全部' }, { id: '1', name: '北京' }, { id: '2', name: '天津' }, { id: '3', name: '上海' }]\r\n  },\r\n  {\r\n    type: '时间查询'\r\n  },\r\n  {\r\n    type: 'SELECT',\r\n    label: '订单状态',\r\n    field: 'order_status',\r\n    placeholder: '全部',\r\n    initialValue: '1',\r\n    width: 80,\r\n    list: [{ id: '0', name: '全部' }, { id: '1', name: '进行中' }, { id: '2', name: '结束行程' }]\r\n  }\r\n]\r\nexport const params = {\r\n  page: 1\r\n}\r\nexport const formItemLayout = {\r\n  labelCol: { span: 5 },\r\n  wrapperCol: { span: 19 }\r\n}\r\nexport const rowSelection = {\r\n  type: 'radio',\r\n  // selectedRowKeys\r\n}\r\nexport const formList = {\r\n  initValue: {\r\n    city: '0',\r\n    order_status: '0'\r\n  },\r\n  formList: [\r\n\r\n    {\r\n      name: 'city',\r\n      type: 'select',\r\n      label: '城市',\r\n      placeholder: '全部',\r\n      list: [\r\n        { id: '0', name: '全部' },\r\n        { id: '1', name: '北京' },\r\n        { id: '2', name: '河北' }\r\n      ],\r\n      width: 100\r\n    },\r\n    {\r\n      type: 'rangepicker',\r\n      label: '订单时间',\r\n      name: 'range-picker',\r\n      width: 250\r\n    },\r\n    // {\r\n    //   type: 'datepicker',\r\n    //   label: '订单时间2',\r\n    //   name: 'date-picker'\r\n    // },\r\n    {\r\n      name: 'order_status',\r\n      type: 'select',\r\n      label: '订单状态',\r\n      placeholder: '全部',\r\n      list: [\r\n        { id: '0', name: '全部' },\r\n        { id: '1', name: '进行中' },\r\n        { id: '2', name: '结束' }\r\n      ],\r\n      width: 100\r\n    },\r\n    // {\r\n    //   name: 'check',\r\n    //   type: 'checkbox',\r\n    //   label: '复选',\r\n    //   placeholder: '',\r\n    //   list: [\r\n    //   ],\r\n    //   width: 100,\r\n    //   options: ['Apple', 'Pear', 'Orange']\r\n    // },\r\n  ]\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Card, Button, Modal, message, } from 'antd';\r\nimport axios from '../../axios/axios';\r\nimport BaseForm from './../../components/BaseForm/BaseForm';\r\nimport ETable from './../../components/ETable/EtableFun1'\r\nimport { columns, formList, params, } from './data'\r\nimport './order.scss'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nexport default function Order () {\r\n  const [list, setList] = useState([]);\r\n  const [pagination, setpagination] = useState(null);\r\n  const [item, setItem] = useState();\r\n  let history = useHistory();\r\n  console.log('pagination', pagination)\r\n  useEffect(() => {\r\n    requestList().then((res) => {\r\n      let arrRes = res.result.item_list;\r\n      arrRes.forEach((item, index) => {\r\n        // 这里的id需要单独做处理,而不是自己的Bug\r\n        item['key'] = index + 1;\r\n      })\r\n      setList([...arrRes])\r\n      setpagination({\r\n        showTotal: () => {\r\n          return `共${arrRes.length}条`\r\n        }\r\n      })\r\n    })\r\n  }, [])\r\n  let openOrderDetail = () => {\r\n    if (!item) {\r\n      Modal.info({\r\n        title: '信息',\r\n        content: '请先选择一条订单'\r\n      })\r\n      return;\r\n    }\r\n    // window.open(`/common/order/detail/${item.id}`, '_blank');\r\n    history.push(`/common/order/detail/${item.id}`)\r\n  }\r\n  let handleConfirm = () => {\r\n    if (!item) {\r\n      Modal.info({\r\n        title: '信息',\r\n        content: '请选择一条订单进行结束'\r\n      })\r\n      return;\r\n    }\r\n    Modal.info({\r\n      title: '结束订单',\r\n      content: `是否要结束订单{${item.order_sn}},用户名(${item.user_name})`,\r\n      okText: '确定',\r\n      onOk: () => {\r\n        //调取接口\r\n        // 调取删除订单的接口\r\n        // 结束成功\r\n        message[\"success\"]({\r\n          content: '结束成功',\r\n        })\r\n        // 刷新页面\r\n        // 调取刷新页面数据的接口\r\n      }\r\n    })\r\n    console.log('item :', item);\r\n  }\r\n  /**\r\n   * 父级基础组件的方法\r\n   */\r\n  let handleFilter = (params) => {\r\n    // this.params = params;\r\n    console.log('params', params)\r\n    // 把params传递给本地的params,已经有一个分页了, 然后请求数据\r\n  }\r\n  return (\r\n    <>\r\n      <Card className=\"card-wrapper\">\r\n        <BaseForm\r\n          formList={formList.formList}\r\n          initValue={formList.initValue}\r\n          filterSubmit={handleFilter}\r\n        ></BaseForm>\r\n      </Card>\r\n\r\n      <Card className=\"card-wrapper\" style={{ marginTop: 10 }}>\r\n        <Button onClick={openOrderDetail}>\r\n          订单详情\r\n        </Button>\r\n        <Button type=\"primary\" style={{ marginLeft: 10 }} onClick={handleConfirm}>\r\n          结束订单\r\n        </Button>\r\n      </Card>\r\n      <Card className=\"card-wrapper\">\r\n        <div className=\"content-wrap\">\r\n          <ETable\r\n            // rowSelection='checkbox'\r\n            columns={columns}\r\n            dataSource={list}\r\n            pagination={true}\r\n            getItem={\r\n              rec => {\r\n                setItem(rec)\r\n              }\r\n            }\r\n          ></ETable>\r\n        </div>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nconst requestList = () => {\r\n  return axios.ajax({\r\n    url: 'http://www.qiuhang.club:7300/mock/5e8c119b00fbdf09dcf21f9f/bike/order/list',\r\n    data: {\r\n      params: {\r\n        page: params.page\r\n      }\r\n    }\r\n  }).then((res) => {\r\n    return res\r\n  })\r\n}","export const columns = [{\r\n  title: 'id',\r\n  dataIndex: 'id'\r\n}, {\r\n  title: '用户名',\r\n  dataIndex: 'username'\r\n}, {\r\n  title: '性别',\r\n  dataIndex: 'sex',\r\n  render (sex) {\r\n    return sex === 1 ? '男' : '女'\r\n  }\r\n}, {\r\n  title: '状态',\r\n  dataIndex: 'state',\r\n  render (state) {\r\n    let config = {\r\n      '1': '开始',\r\n      '2': '进行中',\r\n      '3': '结束',\r\n      '4': '付款',\r\n      '5': '付款完成'\r\n    }\r\n    return config[state];\r\n  }\r\n}, {\r\n  title: '爱好',\r\n  dataIndex: 'interest',\r\n  render (interest) {\r\n    let config = {\r\n      '1': '游泳',\r\n      '2': '打篮球',\r\n      '3': '踢足球',\r\n      '4': '跑步',\r\n      '5': '爬山',\r\n      '6': '骑行',\r\n      '7': '桌球',\r\n      '8': '麦霸'\r\n    }\r\n    return config[interest];\r\n  }\r\n}, {\r\n  title: '婚否',\r\n  dataIndex: 'isMarried',\r\n  render (isMarried) {\r\n    return isMarried ? '已婚' : '未婚'\r\n  }\r\n}, {\r\n  title: '生日',\r\n  dataIndex: 'birthday'\r\n}, {\r\n  title: '联系地址',\r\n  dataIndex: 'address'\r\n}, {\r\n  title: '早起时间',\r\n  dataIndex: 'time'\r\n}\r\n];\r\n\r\n\r\n\r\nexport const formList = {\r\n  initValue: {\r\n  },\r\n  submit: true,\r\n  formList: [\r\n    {\r\n      name: 'username',\r\n      type: 'input',\r\n      label: '用户名',\r\n      placeholder: '请输入用户名',\r\n      width: 100\r\n    },\r\n    {\r\n      name: 'pwd',\r\n      type: 'password',\r\n      label: '密码',\r\n      placeholder: '请输入密码',\r\n      width: 100\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      label: '入职时间',\r\n      name: 'date-picker'\r\n    }\r\n  ]\r\n}\r\n/**\r\n * 增加\r\n */\r\n/* \r\n  const options = [\r\n  { label: 'Apple', value: 'Apple' },\r\n  { label: 'Pear', value: 'Pear' },\r\n  { label: 'Orange', value: 'Orange' },\r\n];\r\n */\r\nexport const create = {\r\n  formLayout: 'horizontal',\r\n  layout: {\r\n    labelCol: {\r\n      span: 6,\r\n    },\r\n    wrapperCol: {\r\n      span: 15,\r\n    },\r\n  },\r\n  initValue: {\r\n    sex: 'man'\r\n  },\r\n  formList: [\r\n    {\r\n      name: 'username',\r\n      type: 'input',\r\n      label: '姓名',\r\n      placeholder: '请输入姓名',\r\n    },\r\n    {\r\n      name: 'sex',\r\n      type: 'radiogroup',\r\n      label: '性别',\r\n      options: [\r\n        { label: '男', value: '1' },\r\n        { label: '女', value: '2' },\r\n      ]\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      label: '入职时间',\r\n      name: 'date-picker'\r\n    }\r\n  ]\r\n}\r\n/**\r\n * 查询\r\n */\r\nexport const read = {\r\n  initValue: {\r\n  },\r\n  formList: [\r\n    {\r\n      name: 'username',\r\n      type: 'input',\r\n      label: '用户名',\r\n      placeholder: '请输入用户名',\r\n      width: 100\r\n    },\r\n    {\r\n      name: 'pwd',\r\n      type: 'password',\r\n      label: '密码',\r\n      placeholder: '请输入密码',\r\n      width: 100\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      label: '入职时间',\r\n      name: 'date-picker'\r\n    }\r\n  ]\r\n}\r\n/**\r\n * 删除\r\n */\r\nexport const del = {\r\n  initValue: {\r\n  },\r\n  formList: [\r\n    {\r\n      name: 'username',\r\n      type: 'input',\r\n      label: '用户名',\r\n      placeholder: '请输入用户名',\r\n      width: 100\r\n    },\r\n    {\r\n      name: 'pwd',\r\n      type: 'password',\r\n      label: '密码',\r\n      placeholder: '请输入密码',\r\n      width: 100\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      label: '入职时间',\r\n      name: 'date-picker'\r\n    }\r\n  ]\r\n}\r\n/**\r\n * 修改\r\n */\r\nexport const update = {\r\n  formLayout: 'horizontal',\r\n  layout: {\r\n    labelCol: {\r\n      span: 6,\r\n    },\r\n    wrapperCol: {\r\n      span: 15,\r\n    },\r\n  },\r\n  initValue: {\r\n  },\r\n  formList: [\r\n    {\r\n      name: 'username',\r\n      type: 'input',\r\n      label: '姓名',\r\n      width: 100\r\n    },\r\n    {\r\n      name: 'sex',\r\n      type: 'radiogroup',\r\n      label: '性别',\r\n      options: [\r\n        { label: '男', value: 1 },\r\n        { label: '女', value: 2 },\r\n      ]\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      label: '生日',\r\n      name: 'date-picker'\r\n    },\r\n    {\r\n      type: 'input',\r\n      label: '联系地址',\r\n      name: 'address',\r\n    },\r\n  ]\r\n}","import React, { useEffect, useRef } from 'react'\r\nimport { Form, Input, Radio, DatePicker } from 'antd'\r\nimport locale from 'antd/es/date-picker/locale/zh_CN';\r\nconst FormItem = Form.Item;\r\n\r\nexport default function UpdateForm (props) {\r\n  let updateForm = useRef(null);\r\n  useEffect(() => {\r\n    props.reset(updateForm);\r\n    props.filterSubmit(updateForm.current.getFieldsValue())\r\n  })\r\n  let options = [\r\n    // <ManOutlined />\r\n    { label: '男', value: 1 },\r\n    { label: '女', value: 2 },\r\n  ]\r\n\r\n  let onRadioChange = (e) => {\r\n    console.log(`checkedValues = ${e.target.value}`);\r\n  }\r\n  let onDateChange = (date, dateString) => {\r\n    /**\r\n      * date:moment对象\r\n      * dateString:正常字符串\r\n      */\r\n    console.log(date, dateString);\r\n  }\r\n\r\n  console.log('props :', props);\r\n\r\n  // let onFinish = (fieldsValue) => {\r\n  //   let values;\r\n  //   // name字段\r\n  //   // 单选时间控件和范围时间控件目前只能二选一\r\n  //   if (fieldsValue['date-picker']) {\r\n  //     const datePicker = fieldsValue['date-picker'];\r\n  //     values = {\r\n  //       ...fieldsValue,\r\n  //       'datePicker':\r\n  //         datePicker.format('YYYY-MM-DD HH:mm:ss'),\r\n  //     };\r\n  //   } else {\r\n  //     values = {\r\n  //       ...fieldsValue\r\n  //     }\r\n  //   }\r\n  //   console.log('Received values of form: ', values);\r\n  //   /**\r\n  //    * 调用父级的方法\r\n  //    */\r\n  //   props.filterSubmit(values)\r\n  // }\r\n  let layout = {\r\n    labelcol: {\r\n      span: 6,\r\n    },\r\n    wrappercol: {\r\n      span: 15,\r\n    },\r\n  }\r\n  return (\r\n    <>\r\n      <Form ref={updateForm} layout='horizontal' {...layout} initialValues={{ ...props.data.initValue }}>\r\n        <FormItem name='username' label={'姓名'}>\r\n          <Input type=\"text\" />\r\n        </FormItem>\r\n        <FormItem name='sex' label={'性别'}>\r\n          <Radio.Group onChange={onRadioChange} options={options} ></Radio.Group>\r\n          {/* defaultValue={defaultV ? defaultV : null} */}\r\n        </FormItem>\r\n        <FormItem name='date-picker' label={'生日'}>\r\n          <DatePicker showTime locale={locale} format=\"YYYY-MM-DD HH:mm:ss\" onChange={onDateChange} />\r\n        </FormItem>\r\n        <FormItem name='address' label={'联系地址'}>\r\n          <Input type=\"text\" />\r\n        </FormItem>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Card, Button, Modal, Col, Row } from 'antd'\r\nimport axios from '../../axios/axios'\r\nimport BaseForm from './../../components/BaseForm/BaseForm'\r\nimport EtableFun from '../../components/ETable/EtableFun1';\r\nimport './user.scss'\r\nimport { columns, formList, create, read, update, del } from './data'\r\nimport { useHistory } from 'react-router-dom'\r\nimport UpdateForm from './updateForm'\r\n// card-wrapper\r\nconst params = {\r\n  page: 1\r\n}\r\nexport default function User () {\r\n  const [list, setList] = useState([]);\r\n  const [Item, setItem] = useState(null);\r\n  // Model对象\r\n  const [visible, setVisible] = useState(false);\r\n  const [upvisible, setUpVisible] = useState(false);\r\n  const [title, setTitle] = useState('')\r\n\r\n  let updateForm = null;\r\n\r\n  const [type, setType] = useState('create')\r\n  let obj = {\r\n    create, read, update, del\r\n  }\r\n\r\n  let history = useHistory()\r\n  let baseForm = useRef(null)\r\n  useEffect(() => {\r\n    requestList().then((res) => {\r\n      console.log('res :', res);\r\n      let arrRes = res.result.list;\r\n      arrRes.forEach((item) => {\r\n        item['key'] = item.id;\r\n      })\r\n      setList([...arrRes])\r\n    })\r\n  }, [])\r\n\r\n  let handleFilter = (params) => {\r\n    // this.params = params;\r\n    console.log('params', params)\r\n    // 把params传递给本地的params,已经有一个分页了, 然后请求数据\r\n  }\r\n  /**\r\n   * 创建增加\r\n   */\r\n  let handleC = () => {\r\n    setType('create')\r\n    setVisible(true);\r\n    setTitle('创建');\r\n  }\r\n  let onCreate = values => {\r\n    console.log('create')\r\n    Modal.info({\r\n      title: '创建员工',\r\n      content: '创建成功！'\r\n    })\r\n    setVisible(false);\r\n  };\r\n  /**\r\n   * 查询\r\n   */\r\n  let handleR = () => {\r\n    // setVisible(true);\r\n    // setType('read')\r\n    // setTitle('查询');\r\n    if (!Item) {\r\n      Modal.info({\r\n        title: '详情信息',\r\n        content: '请先选择一位用户'\r\n      })\r\n      return;\r\n    }\r\n    history.push(`/common/user/detail/${Item.id}`)\r\n  }\r\n  //一样不会被调用，没有打开模态框\r\n  let onRead = values => {\r\n    console.log('read')\r\n    setVisible(false);\r\n  };\r\n  /**\r\n   * 更新编辑\r\n   */\r\n  let handleU = () => {\r\n    // console.log('baseForm', baseForm)\r\n    // baseForm.current.formRef.current.resetFields()\r\n    /* \r\n      //由于form是在modal当中，所以需要给modal加上forcerender来强制渲染，否则拿不到,但是加了强制渲染，表单没有初始值了\r\n    // 只能等表单打开才能拿到数据\r\n    // console.log('baseForm', baseForm)\r\n    // baseForm.current.formRef.current.resetFields()\r\n     */\r\n    if (!Item) {\r\n      Modal.info({\r\n        title: '编辑',\r\n        content: '请先选择一位用户'\r\n      })\r\n      return;\r\n    }\r\n    update.initValue = {\r\n      'username': Item.username,\r\n      'sex': Item.sex,\r\n      // 'date-picker': Item.birthday,\r\n      'address': Item.address,\r\n    }\r\n    // updateForm && updateForm.current.resetFields()\r\n    if (updateForm) {\r\n      updateForm.current.setFieldsValue({\r\n        ...update.initValue\r\n      })\r\n    }\r\n    setUpVisible(true);\r\n  }\r\n  let onUpdate = () => {\r\n\r\n  }\r\n\r\n  let updataOnOk = () => {\r\n    setItem((prev) => {\r\n      let target = {};\r\n      Object.assign(target, prev, updateForm.current.getFieldsValue())\r\n      return target\r\n    })\r\n    // console.log('list :', list);\r\n    let ids, target = {};\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (list[i].id === Item.id) {\r\n        let old = list[i];\r\n        Object.assign(target, old, updateForm.current.getFieldsValue())\r\n        ids = i;\r\n        console.log(ids)\r\n        break;\r\n      }\r\n    }\r\n    if (ids > -1) {\r\n      console.log('执行了')\r\n      console.log('ids :', ids);\r\n      console.log('obj :', target);\r\n      let newList = list;\r\n      newList[ids] = target;\r\n      setList([...list])\r\n    }\r\n    setUpVisible(false)\r\n  }\r\n  /**\r\n   * 删除\r\n   */\r\n  let handleD = () => {\r\n    if (!Item) {\r\n      Modal.info({\r\n        title: '删除信息',\r\n        content: '请先选择一位用户'\r\n      })\r\n      return;\r\n    }\r\n    // history.push(`/common/user/detail/${Item.id}`)\r\n    Modal.info({\r\n      title: '删除',\r\n      content: `是否删除用户：${Item.username}?`,\r\n      okText: '确认',\r\n      onOk: () => {\r\n        Modal.info({\r\n          title: '删除',\r\n          content: `删除成功`,\r\n          onOk: () => {\r\n            //重新调取接口数据\r\n            requestList().then((res) => {\r\n              console.log('res :', res);\r\n              let arrRes = res.result.list;\r\n              arrRes.forEach((item) => {\r\n                item['key'] = item.id;\r\n              })\r\n              setList([...arrRes])\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n  }\r\n  // 这个不会调用，不在表单当中\r\n  let onDel = values => {\r\n    console.log('del')\r\n    setVisible(false);\r\n  };\r\n  /**\r\n   * Modal-利用表逻辑来对一个Modal做4份不同的业务任务处理\r\n   * @param {Modal-OK类型} type \r\n   * @param {获取的表单数据} data \r\n   */\r\n  let CRUD = (type, data) => {\r\n    console.log('type :', type);\r\n    let crud = {\r\n      create: onCreate,\r\n      read: onRead,\r\n      update: onUpdate,\r\n      del: onDel\r\n    }\r\n    return crud[type](data);\r\n  }\r\n\r\n\r\n  // .resetFields()\r\n  return (\r\n    <>\r\n      <Card title=\"员工管理\" className=\"card-wrapper\">\r\n        <BaseForm\r\n          submit={formList.submit}\r\n          formList={formList.formList}\r\n          initValue={formList.initValue}\r\n          filterSubmit={handleFilter}\r\n        ></BaseForm>\r\n      </Card>\r\n      <Card className=\"card-wrapper\">\r\n        <Row>\r\n          <Col span={2}><Button type=\"primary\" onClick={() => handleC()}>创建员工</Button></Col>\r\n          <Col span={2}><Button type=\"primary\" onClick={() => handleU()}>编辑员工</Button></Col>\r\n          <Col span={2}><Button type=\"primary\" onClick={() => handleR()}>员工详情</Button></Col>\r\n          <Col span={2}><Button type='danger' onClick={() => handleD()}>删除员工</Button></Col>\r\n        </Row>\r\n      </Card>\r\n      <Card title=\"详情菜单\" className=\"card-wrapper\">\r\n        <EtableFun\r\n          columns={columns}\r\n          dataSource={list}\r\n          getItem={\r\n            val => {\r\n              console.log('Userval', val)\r\n              setItem(val)\r\n            }\r\n          }\r\n          pagination={true}\r\n        />\r\n      </Card>\r\n      <Modal\r\n        visible={visible}\r\n        title={title}\r\n        okText='确定'\r\n        cancelText='返回'\r\n        onCancel={() => setVisible(false)}\r\n        onOk={() => {\r\n          //怎么获取到最新的数据???????\r\n          //函数组件怎么使用到类组件最新的数据--->直接使用ref,太强了\r\n          let res = baseForm.current.formRef.current.getFieldsValue();\r\n          CRUD(type, res)\r\n        }}\r\n      >\r\n        <BaseForm\r\n          formList={obj[type].formList}\r\n          initValue={obj[type].initValue}\r\n          formLayout={obj[type].formLayout}\r\n          layout={obj[type].layout}\r\n          ref={baseForm}\r\n          filterSubmit={onCreate}\r\n        ></BaseForm>\r\n      </Modal>\r\n\r\n      {/* 更新员工，单独的一个模块 */}\r\n      <Modal\r\n        forceRender\r\n        visible={upvisible}\r\n        title={'编辑'}\r\n        okText='确定'\r\n        cancelText='返回'\r\n        onCancel={() => setUpVisible(false)}\r\n        onOk={() => {\r\n          // 这个对象居然是一个部署了iterator接口的对象\r\n          console.log('updateForm.current.getFieldsValue()', updateForm.current.getFieldsValue())\r\n          updataOnOk()\r\n        }}\r\n      >\r\n        <UpdateForm\r\n          filterSubmit={(res) => {\r\n            console.log('res', res)\r\n            // setItem(res)\r\n          }}\r\n          data={update}\r\n          reset={(formObj) => {\r\n            console.log('formObjc', formObj)\r\n            updateForm = formObj\r\n          }}\r\n        ></UpdateForm>\r\n        {/* filterSubmit */}\r\n      </Modal>\r\n\r\n    </>\r\n  )\r\n}\r\nconst requestList = () => {\r\n  return axios.ajax({\r\n    url: 'http://www.qiuhang.club:7300/mock/5e8c119b00fbdf09dcf21f9f/bike/table/list',\r\n    data: {\r\n      params: {\r\n        page: params.page\r\n      }\r\n    }\r\n  }).then((res) => {\r\n    return res\r\n  })\r\n}\r\n\r\n","export default {\n  \"color\": [\n    \"#f9c700\",\n    \"#ff5400\",\n    \"#6699cc\",\n    \"#9cb3c5\",\n    \"#e0e6ec\",\n    \"#666666\",\n    \"#787464\",\n    \"#cc7e63\",\n    \"#724e58\",\n    \"#4b565b\"\n  ],\n  \"backgroundColor\": \"#ffffff\",\n  \"textStyle\": {},\n  \"title\": {\n    \"textStyle\": {\n      \"color\": \"#cccccc\"\n    },\n    \"subtextStyle\": {\n      \"color\": \"#cccccc\"\n    }\n  },\n  \"line\": {\n    \"itemStyle\": {\n      \"normal\": {\n        \"borderWidth\": 1\n      }\n    },\n    \"lineStyle\": {\n      \"normal\": {\n        \"width\": 2\n      }\n    },\n    \"symbolSize\": \"10\",\n    \"symbol\": \"emptyCircle\",\n    \"smooth\": false\n  },\n  \"pie\": {\n    \"itemStyle\": {\n      \"normal\": {\n        \"borderWidth\": 0,\n        \"borderColor\": \"#ccc\"\n      },\n      \"emphasis\": {\n        \"borderWidth\": 0,\n        \"borderColor\": \"#ccc\"\n      }\n    }\n  },\n  \"categoryAxis\": {\n    \"axisLine\": {\n      \"show\": true,\n      \"lineStyle\": {\n        \"color\": \"#f1f3f5\"\n      }\n    },\n    \"axisTick\": {\n      \"show\": true,\n      \"lineStyle\": {\n        \"color\": \"#f1f3f5\"\n      }\n    },\n    \"axisLabel\": {\n      \"show\": true,\n      \"textStyle\": {\n        \"color\": \"#999999\",\n        \"fontSize\": \"14\"\n      }\n    },\n    \"splitLine\": {\n      \"show\": true,\n      \"lineStyle\": {\n        \"color\": [\n          \"#f1f3f5\"\n        ]\n      }\n    },\n    \"splitArea\": {\n      \"show\": false,\n      \"areaStyle\": {\n        \"color\": [\n          \"rgba(250,250,250,0.3)\",\n          \"rgba(200,200,200,0.3)\"\n        ]\n      }\n    }\n  },\n  \"valueAxis\": {\n    \"axisLine\": {\n      \"show\": true,\n      \"lineStyle\": {\n        \"color\": \"#f1f3f5\"\n      }\n    },\n    \"axisTick\": {\n      \"show\": true,\n      \"lineStyle\": {\n        \"color\": \"#f1f3f5\"\n      }\n    },\n    \"axisLabel\": {\n      \"show\": true,\n      \"textStyle\": {\n        \"color\": \"#999999\",\n        \"fontSize\": \"14\"\n      }\n    },\n    \"splitLine\": {\n      \"show\": true,\n      \"lineStyle\": {\n        \"color\": [\n          \"#f1f3f5\"\n        ]\n      }\n    },\n    \"splitArea\": {\n      \"show\": false,\n      \"areaStyle\": {\n        \"color\": [\n          \"rgba(250,250,250,0.3)\",\n          \"rgba(200,200,200,0.3)\"\n        ]\n      }\n    }\n  },\n  \"toolbox\": {\n    \"iconStyle\": {\n      \"normal\": {\n        \"borderColor\": \"#999999\"\n      },\n      \"emphasis\": {\n        \"borderColor\": \"#666666\"\n      }\n    }\n  },\n  \"legend\": {\n    \"textStyle\": {\n      \"color\": \"#333333\"\n    }\n  },\n  \"tooltip\": {\n    \"axisPointer\": {\n      \"lineStyle\": {\n        \"color\": \"#cccccc\",\n        \"width\": 1\n      },\n      \"crossStyle\": {\n        \"color\": \"#cccccc\",\n        \"width\": 1\n      }\n    }\n  },\n  \"timeline\": {\n    \"lineStyle\": {\n      \"color\": \"#293c55\",\n      \"width\": 1\n    },\n    \"itemStyle\": {\n      \"normal\": {\n        \"color\": \"#293c55\",\n        \"borderWidth\": 1\n      },\n      \"emphasis\": {\n        \"color\": \"#a9334c\"\n      }\n    },\n    \"controlStyle\": {\n      \"normal\": {\n        \"color\": \"#293c55\",\n        \"borderColor\": \"#293c55\",\n        \"borderWidth\": 0.5\n      },\n      \"emphasis\": {\n        \"color\": \"#293c55\",\n        \"borderColor\": \"#293c55\",\n        \"borderWidth\": 0.5\n      }\n    },\n    \"checkpointStyle\": {\n      \"color\": \"#e43c59\",\n      \"borderColor\": \"rgba(194,53,49,0.5)\"\n    },\n    \"label\": {\n      \"normal\": {\n        \"textStyle\": {\n          \"color\": \"#293c55\"\n        }\n      },\n      \"emphasis\": {\n        \"textStyle\": {\n          \"color\": \"#293c55\"\n        }\n      }\n    }\n  },\n  \"markPoint\": {\n    \"label\": {\n      \"normal\": {\n        \"textStyle\": {\n          \"color\": \"#ffffff\"\n        }\n      },\n      \"emphasis\": {\n        \"textStyle\": {\n          \"color\": \"#ffffff\"\n        }\n      }\n    }\n  }\n}","import React, { useEffect } from 'react'\r\nimport { Card } from 'antd'\r\nimport { getOption, getOption2 } from './fn'\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport echartTheme from '../echartTheme'\r\n// import echarts from 'echarts'\r\n// 引入 ECharts 主模块\r\nimport echarts from 'echarts/lib/echarts'\r\n// 引入饼图和折线图\r\nimport 'echarts/lib/chart/bar'\r\n// 引入提示框和标题组件\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/legend';\r\nimport 'echarts/lib/component/markPoint';\r\nimport '../style.scss'\r\nexport default function Bar () {\r\n  useEffect(() => {\r\n    echarts.registerTheme('mock', echartTheme);\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Card title=\"柱形图表之一\" className=\"card-wrap\">\r\n        <ReactEcharts option={getOption()} theme=\"mock\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\r\n      </Card>\r\n      <Card title=\"柱形图表之二\" className=\"card-wrap\">\r\n        <ReactEcharts option={getOption2()} theme=\"Imooc\" notMerge={true} lazyUpdate={true} style={{ height: 500 }} />\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n","export const getOption = () => {\r\n  let option = {\r\n    title: {\r\n      text: '用户骑行订单'\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis'\r\n    },\r\n    xAxis: {\r\n      data: [\r\n        '周一',\r\n        '周二',\r\n        '周三',\r\n        '周四',\r\n        '周五',\r\n        '周六',\r\n        '周日'\r\n      ]\r\n    },\r\n    yAxis: {\r\n      type: 'value'\r\n    },\r\n    series: [\r\n      {\r\n        name: '订单量',\r\n        type: 'bar',\r\n        data: [\r\n          1000,\r\n          2000,\r\n          1500,\r\n          3000,\r\n          2000,\r\n          1200,\r\n          800\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n  return option;\r\n}\r\n\r\nexport const getOption2 = () => {\r\n  let option = {\r\n    title: {\r\n      text: '用户骑行订单'\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis'\r\n    },\r\n    legend: {\r\n      data: ['OFO', '摩拜', '小蓝']\r\n    },\r\n    xAxis: {\r\n      data: [\r\n        '周一',\r\n        '周二',\r\n        '周三',\r\n        '周四',\r\n        '周五',\r\n        '周六',\r\n        '周日'\r\n      ]\r\n    },\r\n    yAxis: {\r\n      type: 'value'\r\n    },\r\n    series: [\r\n      {\r\n        name: 'OFO',\r\n        type: 'bar',\r\n        data: [\r\n          2000,\r\n          3000,\r\n          5500,\r\n          7000,\r\n          8000,\r\n          12000,\r\n          20000\r\n        ]\r\n      },\r\n      {\r\n        name: '摩拜',\r\n        type: 'bar',\r\n        data: [\r\n          1500,\r\n          3000,\r\n          4500,\r\n          6000,\r\n          8000,\r\n          10000,\r\n          15000\r\n        ]\r\n      },\r\n      {\r\n        name: '小蓝',\r\n        type: 'bar',\r\n        data: [\r\n          1000,\r\n          2000,\r\n          2500,\r\n          4000,\r\n          6000,\r\n          7000,\r\n          8000\r\n        ]\r\n      },\r\n    ]\r\n  }\r\n  return option;\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Card } from 'antd'\r\nimport '../style.scss'\r\nimport { getOption, getOption2, getOption3 } from './fn'\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport echartTheme from '../echartTheme'\r\n// import themeLight from '../themeLight'\r\nimport echarts from 'echarts/lib/echarts'\r\n// 引入饼图和折线图\r\nimport 'echarts/lib/chart/line'\r\n// 引入提示框和标题组件\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/legend';\r\nimport 'echarts/lib/component/markPoint';\r\nexport default function Line () {\r\n  useEffect(() => {\r\n    echarts.registerTheme('mock', echartTheme);\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Card title=\"折线图表之一\" className=\"card-wrap\">\r\n        <ReactEcharts\r\n          option={getOption()}\r\n          theme=\"mock\"\r\n          notMerge={true}\r\n          lazyUpdate={true}\r\n          style={{\r\n            height: 500\r\n          }} />\r\n      </Card>\r\n      <Card title=\"折线图表之二\" className=\"card-wrap\" >\r\n        <ReactEcharts\r\n          option={getOption2()}\r\n          theme=\"mock\"\r\n          notMerge={true}\r\n          lazyUpdate={true}\r\n          style={{\r\n            height: 500\r\n          }} />\r\n      </Card>\r\n      <Card title=\"折线图表之三\" className=\"card-wrap\">\r\n        <ReactEcharts\r\n          option={getOption3()}\r\n          theme=\"mock\"\r\n          notMerge={true}\r\n          lazyUpdate={true}\r\n          style={{\r\n            height: 500\r\n          }} />\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n","export const getOption = () => {\r\n  let option = {\r\n    title: {\r\n      text: '用户骑行订单'\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis'\r\n    },\r\n    xAxis: {\r\n      data: [\r\n        '周一',\r\n        '周二',\r\n        '周三',\r\n        '周四',\r\n        '周五',\r\n        '周六',\r\n        '周日'\r\n      ]\r\n    },\r\n    yAxis: {\r\n      type: 'value'\r\n    },\r\n    series: [\r\n      {\r\n        name: '订单量',\r\n        type: 'line',\r\n        data: [\r\n          1000,\r\n          2000,\r\n          1500,\r\n          3000,\r\n          2000,\r\n          1200,\r\n          800\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n  return option;\r\n}\r\n\r\nexport const getOption2 = () => {\r\n  let option = {\r\n    title: {\r\n      text: '用户骑行订单'\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis'\r\n    },\r\n    legend: {\r\n      data: ['OFO订单量', '摩拜订单量']\r\n    },\r\n    xAxis: {\r\n      data: [\r\n        '周一',\r\n        '周二',\r\n        '周三',\r\n        '周四',\r\n        '周五',\r\n        '周六',\r\n        '周日'\r\n      ]\r\n    },\r\n    yAxis: {\r\n      type: 'value'\r\n    },\r\n    series: [\r\n      {\r\n        name: 'OFO订单量',\r\n        type: 'line',\r\n        stack: '总量',\r\n        data: [\r\n          1200,\r\n          3000,\r\n          4500,\r\n          6000,\r\n          8000,\r\n          12000,\r\n          20000\r\n        ]\r\n      },\r\n      {\r\n        name: '摩拜订单量',\r\n        type: 'line',\r\n        stack: '总量',\r\n        data: [\r\n          1000,\r\n          2000,\r\n          5500,\r\n          6000,\r\n          8000,\r\n          10000,\r\n          12000\r\n        ]\r\n      },\r\n    ]\r\n  }\r\n  return option;\r\n}\r\n\r\nexport const getOption3 = () => {\r\n  let option = {\r\n    title: {\r\n      text: '用户骑行订单'\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis'\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      boundaryGap: false,\r\n      data: [\r\n        '周一',\r\n        '周二',\r\n        '周三',\r\n        '周四',\r\n        '周五',\r\n        '周六',\r\n        '周日'\r\n      ]\r\n    },\r\n    yAxis: {\r\n      type: 'value'\r\n    },\r\n    series: [\r\n      {\r\n        name: '订单量',\r\n        type: 'line',\r\n        data: [\r\n          1000,\r\n          2000,\r\n          1500,\r\n          3000,\r\n          2000,\r\n          1200,\r\n          800\r\n        ],\r\n        areaStyle: {}\r\n      }\r\n    ]\r\n  }\r\n  return option;\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Card } from 'antd'\r\nimport '../style.scss'\r\nimport { getOption, getOption2, getOption3 } from './fn'\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport echartTheme from '../echartTheme'\r\n// import themeLight from '../themeLight'\r\nimport echarts from 'echarts/lib/echarts'\r\n// 引入饼图和折线图\r\nimport 'echarts/lib/chart/pie'\r\n// 引入提示框和标题组件\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\nimport 'echarts/lib/component/legend';\r\nimport 'echarts/lib/component/markPoint';\r\nexport default function Pie () {\r\n  useEffect(() => {\r\n    echarts.registerTheme('mock', echartTheme);\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Card title=\"饼形图表之一\" className=\"card-wrap\">\r\n        <ReactEcharts\r\n          option={getOption()}\r\n          theme=\"mock\"\r\n          notMerge={true}\r\n          lazyUpdate={true}\r\n          style={{ height: 500 }} />\r\n      </Card>\r\n      <Card title=\"饼形图之二\" className=\"card-wrap\">\r\n        <ReactEcharts\r\n          option={getOption2()}\r\n          theme=\"mock\"\r\n          notMerge={true}\r\n          lazyUpdate={true}\r\n          style={{ height: 500 }} />\r\n      </Card>\r\n      <Card title=\"饼形图之三\" className=\"card-wrap\">\r\n        <ReactEcharts\r\n          option={getOption3()}\r\n          theme=\"mock\"\r\n          notMerge={true}\r\n          lazyUpdate={true}\r\n          style={{ height: 500 }} />\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n","export const getOption = () => {\r\n  let option = {\r\n    title: {\r\n      text: '用户骑行订单',\r\n      x: 'center'\r\n    },\r\n    legend: {\r\n      orient: 'vertical',\r\n      right: 10,\r\n      top: 20,\r\n      bottom: 20,\r\n      data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n    },\r\n    tooltip: {\r\n      trigger: 'item',\r\n      formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n    },\r\n    series: [\r\n      {\r\n        name: '订单量',\r\n        type: 'pie',\r\n        radius: '55%',\r\n        center: [\r\n          '50%', '60%'\r\n        ],\r\n        data: [\r\n          {\r\n            value: 1000,\r\n            name: '周一'\r\n          },\r\n          {\r\n            value: 1000,\r\n            name: '周二'\r\n          },\r\n          {\r\n            value: 2000,\r\n            name: '周三'\r\n          },\r\n          {\r\n            value: 1500,\r\n            name: '周四'\r\n          },\r\n          {\r\n            value: 3000,\r\n            name: '周五'\r\n          },\r\n          {\r\n            value: 2000,\r\n            name: '周六'\r\n          },\r\n          {\r\n            value: 1200,\r\n            name: '周日'\r\n          },\r\n        ],\r\n        itemStyle: {\r\n          emphasis: {\r\n            shadowBlur: 10,\r\n            shadowOffsetX: 0,\r\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  return option;\r\n}\r\n\r\nexport const getOption2 = () => {\r\n  let option = {\r\n    title: {\r\n      text: '用户骑行订单',\r\n      x: 'center'\r\n    },\r\n    legend: {\r\n      orient: 'vertical',\r\n      right: 10,\r\n      top: 20,\r\n      bottom: 20,\r\n      data: [\r\n        '周一',\r\n        '周二',\r\n        '周三',\r\n        '周四',\r\n        '周五',\r\n        '周六',\r\n        '周日'\r\n      ]\r\n    },\r\n    tooltip: {\r\n      trigger: 'item',\r\n      formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n    },\r\n    series: [\r\n      {\r\n        name: '订单量',\r\n        type: 'pie',\r\n        radius: ['50%', '80%'],\r\n        center: [\r\n          '50%', '60%'\r\n        ],\r\n        data: [\r\n          {\r\n            value: 1000,\r\n            name: '周一'\r\n          }, {\r\n            value: 1000,\r\n            name: '周二'\r\n          }, {\r\n            value: 2000,\r\n            name: '周三'\r\n          }, {\r\n            value: 1500,\r\n            name: '周四'\r\n          }, {\r\n            value: 3000,\r\n            name: '周五'\r\n          }, {\r\n            value: 2000,\r\n            name: '周六'\r\n          }, {\r\n            value: 1200,\r\n            name: '周日'\r\n          }\r\n        ],\r\n        itemStyle: {\r\n          emphasis: {\r\n            shadowBlur: 10,\r\n            shadowOffsetX: 0,\r\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  return option;\r\n}\r\n\r\nexport const getOption3 = () => {\r\n  let option = {\r\n    title: {\r\n      text: '用户骑行订单',\r\n      x: 'center'\r\n    },\r\n    legend: {\r\n      orient: 'vertical',\r\n      right: 10,\r\n      top: 20,\r\n      bottom: 20,\r\n      data: [\r\n        '周一',\r\n        '周二',\r\n        '周三',\r\n        '周四',\r\n        '周五',\r\n        '周六',\r\n        '周日'\r\n      ]\r\n    },\r\n    tooltip: {\r\n      trigger: 'item',\r\n      formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n    },\r\n    series: [\r\n      {\r\n        name: '订单量',\r\n        type: 'pie',\r\n        radius: '55%',\r\n        center: [\r\n          '50%', '50%'\r\n        ],\r\n        data: [\r\n          {\r\n            value: 1000,\r\n            name: '周一'\r\n          }, {\r\n            value: 1000,\r\n            name: '周二'\r\n          }, {\r\n            value: 2000,\r\n            name: '周三'\r\n          }, {\r\n            value: 1500,\r\n            name: '周四'\r\n          }, {\r\n            value: 3000,\r\n            name: '周五'\r\n          }, {\r\n            value: 2000,\r\n            name: '周六'\r\n          }, {\r\n            value: 1200,\r\n            name: '周日'\r\n          }\r\n        ].sort(function (a, b) { return a.value - b.value; }),\r\n        roseType: 'radius',\r\n        animationType: 'scale',\r\n        animationEasing: 'elasticOut',\r\n        animationDelay: function (idx) {\r\n          return Math.random() * 200;\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  return option;\r\n}\r\n","import React from 'react'\r\nimport Utils from './../../utils/utils'\r\nimport { Badge } from 'antd'\r\nexport const columns = [\r\n  {\r\n    title: '角色ID',\r\n    dataIndex: 'id'\r\n  }, {\r\n    title: '角色名称',\r\n    dataIndex: 'role_name'\r\n  }, {\r\n    title: '创建时间',\r\n    dataIndex: 'create_time',\r\n    render: Utils.formatTime\r\n  }, {\r\n    title: '使用状态',\r\n    dataIndex: 'status',\r\n    render (status) {\r\n      if (status === 1) {\r\n        return <Badge status=\"success\" text=\"启用\" />\r\n      } else {\r\n        return <Badge status=\"error\" text=\"停用\" />\r\n      }\r\n    }\r\n  }, {\r\n    title: '授权时间',\r\n    dataIndex: 'authorize_time',\r\n    render: Utils.formatTime\r\n  }, {\r\n    title: '授权人',\r\n    dataIndex: 'authorize_user_name',\r\n  }\r\n];","import React, { Component } from 'react';\r\nimport { Form, Input, Select } from 'antd';\r\nconst Option = Select.Option;\r\nconst FormItem = Form.Item;\r\nexport default class RoleForm extends Component {\r\n  RoleformRef = React.createRef();\r\n  render () {\r\n    const formItemLayout = {\r\n      labelCol: { span: 5 },\r\n      wrapperCol: { span: 16 }\r\n    };\r\n    return (<>\r\n      <Form ref={this.RoleformRef} layout=\"horizontal\" initialValues={{ state: 1 }}>\r\n        <FormItem label=\"角色名称\" {...formItemLayout} name='role_name'>\r\n          <Input type=\"text\" placeholder=\"请输入角色名称\" />\r\n        </FormItem>\r\n        <FormItem label=\"状态\" {...formItemLayout} name=\"state\">\r\n          <Select>\r\n            <Option value={1}>开启</Option>\r\n            <Option value={0}>关闭</Option>\r\n          </Select>\r\n        </FormItem>\r\n      </Form>\r\n    </>)\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Form, Select, Input, Tree } from 'antd'\r\nimport menuList from './../../config/menuConfig';\r\n// import menuList2 from './../../config/menuConfig2';\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nexport default class PermEditForm extends Component {\r\n  state = {\r\n    treeData: [\r\n      {\r\n        title: '权限设置',\r\n        key: 'auth',\r\n        children: []\r\n      }\r\n    ]\r\n  }\r\n  componentDidMount () {\r\n    // treeData = menuList;\r\n    let treeDatas = this.state.treeData;\r\n    treeDatas[0].children = menuList;\r\n    console.log('treeDatas :', treeDatas);\r\n    this.setState({\r\n      treeData: treeDatas\r\n    }, () => {\r\n      console.log('this.state.treeData :', this.state.treeData);\r\n    })\r\n  }\r\n\r\n  PermformRef = React.createRef();\r\n  // 树结构的勾选和选中事件\r\n  onTreeCheck = checkedKeys => {\r\n    console.log('onCheck', checkedKeys);\r\n    // setCheckedKeys(checkedKeys);\r\n    // 调用父组件的方法,把改变后的值传递回去\r\n    // 父组件的方法\r\n    this.props.patchMenuInfo(checkedKeys)\r\n  };\r\n  onTreeSelect = (selectedKeys, info) => {\r\n    console.log('onSelect', info);\r\n    // setSelectedKeys(selectedKeys);\r\n  };\r\n  selectOnChange = (value) => {\r\n    console.log('value', value)\r\n  }\r\n  tree = () => {\r\n    let treeDatas = this.state.treeData;\r\n    treeDatas[0].children = menuList;\r\n    return treeDatas;\r\n  }\r\n  render () {\r\n    // 这里的Bug未修复\r\n    // const { treeData } = this.state;\r\n    // console.log('render-treeData:', treeData);\r\n    // 选中的单行数据\r\n    const { detailInfo } = this.props\r\n    // console.log('detailInfo :', detailInfo);\r\n    // console.table(detailInfo);\r\n    // console.log('detailInfo.status :', detailInfo.status);\r\n    // detailInfo.role_name/status/authorize_user_name/authorize_time/create_time/menus\r\n    const formItemLayout = {\r\n      labelCol: { span: 5 },\r\n      wrapperCol: { span: 18 }\r\n    };\r\n    return (<>\r\n      <Form ref={this.PermformRef} layout=\"horizontal\" initialValues={{\r\n        status: detailInfo.status\r\n      }}>\r\n        <FormItem label=\"角色名称：\" {...formItemLayout}>\r\n          {/* 详情里面的角色信息名称 */}\r\n          <Input disabled maxLength=\"8\" placeholder={detailInfo.role_name} />\r\n        </FormItem>\r\n        <FormItem label=\"状态\" {...formItemLayout} name='status'>\r\n          <Select onChange={this.selectOnChange}>\r\n            <Option value={1}>启用</Option>\r\n            <Option value={0}>停用</Option>\r\n          </Select>\r\n        </FormItem>\r\n      </Form>\r\n      <Tree\r\n        // treeData={treeData}\r\n        // 为什么这里拿不到数据???\r\n        // 试试调用一个方法？？？OK,解决，为什么通过didmount的方式就拿不到数据？？？\r\n        //视频里面也一样\r\n        treeData={this.tree()}\r\n        checkable\r\n        defaultExpandAll\r\n        onCheck={this.onTreeCheck}\r\n        // 当更改权限列表之后，需要再传递回去父组件，再又父组件传递回来\r\n        onSelect={this.onTreeSelect}\r\n        // 默认勾选中的权限列表，从权限接口当中读取\r\n        checkedKeys={this.props.menuInfo}\r\n      // selectedKeys={selectedKeys}\r\n      />\r\n    </>)\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Card, Col, Row, Transfer } from 'antd';\r\nexport default function RoleAuth (props) {\r\n\r\n  let handleChange = (nextTargetKeys, direction, moveKeys) => {\r\n    // this.setState({ targetKeys: nextTargetKeys });\r\n    // setTargetKeys(nextTargetKeys)\r\n    props.patchUserInfo(nextTargetKeys)\r\n    console.log('targetKeys: ', nextTargetKeys);\r\n    console.log('direction: ', direction);\r\n    console.log('moveKeys: ', moveKeys);\r\n  };\r\n\r\n\r\n  let filterOption = (inputValue, option) => option.description.indexOf(inputValue) > -1;\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card title={\"角色\"} style={{ width: '100%', textAlign: 'left', marginBottom: '20px' }}>\r\n        <Row>\r\n          <Col span={5}>角色名称：</Col>\r\n          <Col span={19}>{props.AuthName}</Col>\r\n        </Row>\r\n      </Card>\r\n      <Card title={\"选择用户：\"} style={{ width: '100%', textAlign: 'left' }}>\r\n        <Transfer\r\n          dataSource={props.mockData}\r\n          targetKeys={props.targetKeys}\r\n          titles={['Source', 'Target']}\r\n          // selectedKeys={selectedKeys}\r\n          onChange={handleChange}\r\n          render={item => item.title}\r\n          showSearch\r\n          filterOption={filterOption}\r\n        />\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, Row, Col, Modal, } from 'antd';\r\nimport './permission.scss'\r\nimport ETable from './../../components/ETable/EtableFun1'\r\nimport { columns } from './data'\r\nimport { Init, Create, editRole, accessUser, accessUserChange } from './req'\r\nimport RoleForm from './RoleForm'\r\nimport PermEditForm from './PermEditForm'\r\nimport RoleAuth from './RoleAuth'\r\n\r\nexport default class Permissions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.roleForm = React.createRef();\r\n    this.permEditForm = React.createRef();\r\n    this.state = {\r\n      // 创建角色\r\n      item_list: [],\r\n      roleItem: null,\r\n      menuInfo: [],\r\n      isRoleVisible: false,\r\n      // 权限设置\r\n      isPermissionVisible: false,\r\n      //用户授权\r\n      dataSource: [],\r\n      // target: [],\r\n      isUserVisible: false\r\n    }\r\n  }\r\n  //数据初始化\r\n  componentDidMount () {\r\n    Init().then((res) => {\r\n      let items = res.result.item_list;\r\n      items.map((item, index) => { item.key = index + 1; return item })\r\n      this.setState({ item_list: items })\r\n    })\r\n  }\r\n  /**\r\n   * 创建角色--Open\r\n   */\r\n  handleCreateOpen = () => {\r\n    this.setState({\r\n      isRoleVisible: true\r\n    })\r\n  }\r\n  /**\r\n   * 创建角色--OnOk\r\n   */\r\n  handleOKRoleSubmit = () => {\r\n    let role = this.roleForm.current.RoleformRef.current.getFieldsValue();\r\n    Create(role).then((res) => {\r\n      if (res.code === '0') {\r\n        Modal.info({\r\n          title: '创建用户',\r\n          content: '创建成功！'\r\n        })\r\n        // 然后刷新页面，然后重置表单，重新加载数据\r\n        this.roleForm.current.RoleformRef.current.resetFields()\r\n      }\r\n    })\r\n    this.setState({\r\n      isRoleVisible: false\r\n    })\r\n  }\r\n  /**\r\n   * 权限设置-Open\r\n   */\r\n  handlePermissionOpen = () => {\r\n    let item = this.state.roleItem;\r\n    if (!item) {\r\n      Modal.info({\r\n        title: '设置权限',\r\n        content: '请先选中一条角色'\r\n      })\r\n      return\r\n    }\r\n    // 可以使用这个的原因是加了forceRender\r\n    this.permEditForm.current.PermformRef.current.resetFields();\r\n    this.setState({\r\n      isPermissionVisible: true,\r\n      /* 17日,这里本来是直接调的真实的接口来进行权限的设置,可以进行一个小优化,每次都从本地副本当中拿到数据,这样就算离线也能显示出来正确数据 */\r\n      menuInfo: item.menus\r\n    })\r\n  }\r\n  /**\r\n   * 权限设置--OnOk\r\n   */\r\n  handleOKPerEditSubmit = () => {\r\n    // 修改状态\r\n    let formData = this.permEditForm.current.PermformRef.current.getFieldsValue();\r\n    let item = this.state.roleItem;\r\n    item.status = formData.status;\r\n    // 如果设置成停用,应该禁用整个树形框,或者整个数组清0\r\n    this.setState({\r\n      isPermissionVisible: false,\r\n      roleItem: item\r\n    })\r\n    let willSendRoleData = formData;\r\n    //获取当前角色id\r\n    willSendRoleData[\"Id\"] = item.id;\r\n    willSendRoleData[\"menus\"] = item.menus;\r\n    editRole(willSendRoleData).then((res) => {\r\n      if (res.code === '0') {\r\n        Modal.info({\r\n          'title': '设置权限',\r\n          'content': '设置成功!'\r\n        })\r\n      }\r\n      // axios.get(/role/list)刷新一下页面,未做\r\n    })\r\n  }\r\n  /**\r\n   * 用户授权--Open //每次打开用户授权,都会获取最新的target,这个当然没有问题\r\n   *                只是这样做,不调用真实的接口,本地的数据无法做到模拟真实的情况\r\n   *                优化的办法是当子组件调用父组件的方法后,直接利用返回的值,修改本身的数据\r\n   *                -->真实的接口少了这一步是没有问题的,这么做,当修改完之后,modal的ok事件再次调用接口可以直接修改\r\n   *    进行优化--->把每次打开获取角色权限这一步操作,放到初始化数据当中\r\n   * \r\n   *      getEtableItem()-->每次单击到用户的时候就获取-->这样其实不好,用户可能点击多次\r\n   *      或者conponentDidMount当中 -->放到一个数组当中,给每一个用户都有对应的信息,这个好一些\r\n   *      这样可以减少每次的请求次数-->这样可能也不好,因为如果不用到这个功能,那么可能给用户带来不必要的流量耗费\r\n   */\r\n  handleUserAuthOpen = () => {\r\n    let item = this.state.roleItem;\r\n    if (!item) {\r\n      Modal.info({\r\n        title: '设置权限',\r\n        content: '请先选中一条角色'\r\n      })\r\n      return\r\n    }\r\n    // 每次打开都获取当中的最新权限\r\n    // 每次打开都获取当中的最新权限\r\n    // 每次打开都获取当中的最新权限--这里居然是最佳位置\r\n    if (item) {\r\n      console.log('item.id :', item.id);\r\n      // 获取角色下面的用户列表,异步函数,在单击的时候触发一次,初始化触发一次\r\n      accessUser(item.id).then((res) => {\r\n        let List = res.result;\r\n        this.getAuthUserList(List);\r\n      })\r\n    }\r\n    // 打开弹框\r\n    this.setState({ isUserVisible: true })\r\n  }\r\n  /**\r\n  * 用户授权--OnOk\r\n  */\r\n  handleOKUserSubmit = () => {\r\n    let data = {\r\n      id: this.state.roleItem.id,\r\n      targetKeys: this.state.targetKeys || []\r\n    }\r\n    accessUserChange(data).then((res) => {\r\n      Modal.info({\r\n        title: '用户授权',\r\n        content: '授权成功'\r\n      })\r\n    })\r\n    this.setState({ isUserVisible: false })\r\n    //刷新页面接口,获取最新的数据 \r\n  }\r\n\r\n  /**\r\n   * 筛选目标用户\r\n   */\r\n  getAuthUserList = (data) => {\r\n    if (data && data.length > 0) {\r\n      // console.log('data :', data);\r\n      let MockData = [];\r\n      for (const iterator of data) {\r\n        MockData.push({\r\n          key: iterator.user_id,\r\n          title: iterator.user_name,\r\n          status: iterator.status\r\n        })\r\n      }\r\n      let target = [];\r\n      // concat的用法和filter的用法\r\n      // dataSource = dataSource.concat(MockData.filter((item) => item.status === 1))\r\n      target = target.concat(MockData.filter((item) => item.status === 1)).map(item => item.key)\r\n      // console.log('target :', target);\r\n      this.setState({ dataSource: MockData, target })\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   *  ETable返回来的数据\r\n   */\r\n  getEtableItem = (rec) => {\r\n    this.setState({\r\n      roleItem: rec,\r\n    })\r\n  }\r\n  componentWillUnmount () {\r\n    this.setState = (state, callback) => {\r\n      return;\r\n    };\r\n  }\r\n  render () {\r\n    const { item_list, roleItem, target, menuInfo, isUserVisible, isPermissionVisible, isRoleVisible } = this.state;\r\n    return (\r\n      <>\r\n        <Card className='card-wrap' >\r\n          <Row>\r\n            <Col span={3}><Button type='primary' onClick={this.handleCreateOpen}>创建角色</Button></Col>\r\n            <Col span={3}><Button type='primary' onClick={this.handlePermissionOpen}>设置权限</Button></Col>\r\n            <Col span={3}> <Button type='primary' onClick={this.handleUserAuthOpen}>用户授权</Button></Col>\r\n          </Row>\r\n        </Card>\r\n        <Card className='card-wrap'>\r\n          <ETable\r\n            // Bug,不可读取属性,返回来的rec是一个hook属性\r\n            getItem={rec => { this.getEtableItem(rec) }}\r\n            columns={columns}\r\n            dataSource={item_list}\r\n            pagination={false}\r\n          />\r\n        </Card>\r\n        {/* 创建角色弹框 */}\r\n        <Modal\r\n          title=\"创建角色\"\r\n          visible={isRoleVisible}\r\n          onOk={this.handleOKRoleSubmit}\r\n          onCancel={() => {\r\n            this.roleForm.current.RoleformRef.current.resetFields();//重置\r\n            this.setState({ isRoleVisible: false })\r\n          }}\r\n        >\r\n          <RoleForm ref={this.roleForm} />\r\n        </Modal>\r\n        {/* 设置角色的权限 */}\r\n        <Modal\r\n          forceRender\r\n          title='设置权限'\r\n          visible={isPermissionVisible}\r\n          onOk={this.handleOKPerEditSubmit}\r\n          onCancel={() => {\r\n            this.setState({ isPermissionVisible: false })\r\n          }}>\r\n          <PermEditForm\r\n            ref={this.permEditForm}\r\n            detailInfo={roleItem || {}}\r\n            menuInfo={menuInfo}\r\n            // 子组件调用父组件的方法,进行传值\r\n            patchMenuInfo={(checkedKeys) => {\r\n              // 优化点,先修改掉roleItem副本的数组内容,\r\n              // 因为此时还没有关闭掉页面,所以依然需要修改menuInfo\r\n              // -->然后render-->获得最新的menuInfo--->再次传递到子组件渲染页面\r\n              let roleItem = this.state.roleItem;\r\n              roleItem.menus = checkedKeys\r\n              this.setState({\r\n                menuInfo: checkedKeys,\r\n                roleItem\r\n              })\r\n            }}\r\n          ></PermEditForm>\r\n        </Modal>\r\n        {/* 用户授权 */}\r\n        <Modal\r\n          forceRender\r\n          title='设置权限'\r\n          visible={isUserVisible}\r\n          onOk={this.handleOKUserSubmit}\r\n          onCancel={() => { this.setState({ isUserVisible: false }) }}>\r\n          <RoleAuth\r\n            AuthName={roleItem && roleItem.role_name}\r\n            mockData={this.state.dataSource}\r\n            targetKeys={target ? target : []}\r\n            patchUserInfo={(res) => this.setState({ target: res })}\r\n          />\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}","import axios from './../../axios/axios'\r\n/**\r\n * 初始化\r\n */\r\nexport const Init = () => {\r\n  return axios.ajax({\r\n    url: 'http://www.qiuhang.club:7300/mock/5e8c119b00fbdf09dcf21f9f/bike/role/list',\r\n    data: {\r\n      params: {\r\n      }\r\n    }\r\n  }).then((res) => {\r\n    return res\r\n  })\r\n}\r\n/**\r\n * 创建角色\r\n */\r\nexport const Create = (roleData) => {\r\n  return axios.ajax({\r\n    url: 'http://www.qiuhang.club:7300/mock/5e8c119b00fbdf09dcf21f9f/bike/role/create',\r\n    data: {\r\n      params: {\r\n        roleData\r\n      }\r\n    }\r\n  }).then((res) => {\r\n    return res\r\n  })\r\n}\r\n/**\r\n * 修改权限\r\n */\r\nexport const editRole = (editData) => {\r\n  return axios.ajax({\r\n    url: 'http://www.qiuhang.club:7300/mock/5e8c119b00fbdf09dcf21f9f/bike/permission/edit',\r\n    data: {\r\n      params: {\r\n        editData\r\n      }\r\n    }\r\n  }).then((res) => {\r\n    return res\r\n  })\r\n}\r\n/**\r\n * 修改权限-获取权限\r\n */\r\nexport const accessUser = (id) => {\r\n  return axios.ajax({\r\n    url: 'http://www.qiuhang.club:7300/mock/5e8c119b00fbdf09dcf21f9f/bike/role/user_list',\r\n    data: {\r\n      params: {\r\n        id\r\n      }\r\n    }\r\n  }).then((res) => {\r\n    return res\r\n  })\r\n}\r\n/**\r\n * 修改权限-修改权限\r\n */\r\nexport const accessUserChange = (data) => {\r\n  return axios.ajax({\r\n    url: 'http://www.qiuhang.club:7300/mock/5e8c119b00fbdf09dcf21f9f/bike/role/user_role_edit',\r\n    data: {\r\n      params: {\r\n        ...data\r\n      }\r\n    }\r\n  }).then((res) => {\r\n    return res\r\n  })\r\n}","import React, { Component } from \"react\";\r\nimport Header from \"./components/Header/Header\";\r\nimport { Row, Col } from \"antd\";\r\nimport \"./style/common.scss\"\r\nexport default class Common extends Component {\r\n  render () {\r\n    // 通用界面,新增了Col\r\n    return (\r\n      <>\r\n        <Row className=\"simple-page\" >\r\n          <Col span={24}>\r\n            <Header menuType=\"second\" />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"content\">\r\n          <Col span={24}>\r\n            {this.props.children}\r\n            {/* longnocom */}\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Card, Descriptions, Badge, Button } from 'antd'\r\nimport './order.scss';\r\nimport axios from '../../axios/axios'\r\nimport moment from 'moment';\r\n// 现在的问题是,不是直接通过传递prop来传递那个id的吗???\r\n// 流程---->父--->传递给详情页面proper--->页面进入,根据proper拿到更加详细的数据\r\n// 那我直接从url当中拿到的??,不应该这么拿\r\n//应该是父组件传递过来子组件,不对\r\n//路由这里,是不存在父组件嵌套子组件的,\r\n//父组件是--->打开相应的id号的页面-->这样url里面就有响应数据了-->这样就拿到更详细的数据\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nconst Item = Descriptions.Item;\r\nfunction Detail (props) {\r\n  const [result, setResult] = useState([])\r\n  let { orderId } = useParams();\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    axios.axiosGet({\r\n      url: '/order/detail',\r\n      data: {\r\n        params: {\r\n          orderId: orderId\r\n        }\r\n      }\r\n    }).then((res) => {\r\n      console.log('res :', res);\r\n      if (res.code === '0') {\r\n        setResult(res.result)\r\n      }\r\n    })\r\n  }, [orderId])\r\n  let startTime = () => {\r\n    let a = new Date().setTime(result.start_time);\r\n    return <>{moment(a).format('YY年MM月DD日 /  HH点mm分ss')}</>\r\n  }\r\n  let endTime = () => {\r\n    let a = new Date().setTime(result.end_time);\r\n    return <>{moment(a).format('YY年MM月DD日 /  HH点mm分ss')}</>\r\n  }\r\n  return (\r\n    <div className=\"contentOrder\">\r\n      <Card title=\"\" className='card'>\r\n        <Button type=\"primary\" onClick={() => { history.goBack() }}>返回</Button>\r\n      </Card>\r\n      <Card title=\"订单详情\">\r\n        <Descriptions title='' bordered>\r\n          <Item label='订单编号' span={12}>\r\n            {result.order_sn}\r\n          </Item>\r\n          <Item label='用户名' span={12}>\r\n            {result.user_name}\r\n          </Item>\r\n          <Item label='手机号' span={2}>\r\n            {result.mobile}\r\n          </Item>\r\n          <Item label='里程' span={2}>\r\n            {result.distance}\r\n          </Item>\r\n          <Item label='行驶时长' span={2}>\r\n            {result.total_time}\r\n          </Item>\r\n          <Item label='状态' span={2}>\r\n            {result.status === 1 ? <Badge status=\"processing\" text=\"进行中\" /> : <Badge status=\"success\" text=\"完成\" />}\r\n          </Item>\r\n          <Item label='开始时间' span={2}>\r\n            {\r\n              result.start_time ? startTime() : ''\r\n            }\r\n          </Item>\r\n          <Item label='结束时间' span={2}>\r\n            {result.start_time ? endTime() : ''}\r\n          </Item>\r\n          <Item label='订单金额' span={2}>\r\n            {1000}\r\n          </Item>\r\n          <Item label='实付金额' span={2}>\r\n            {300}\r\n          </Item>\r\n        </Descriptions>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Detail\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Card, Descriptions, Badge, Button } from 'antd'\r\nimport './user.scss';\r\nimport axios from '../../axios/axios'\r\nimport moment from 'moment';\r\n// 现在的问题是,不是直接通过传递prop来传递那个id的吗???\r\n// 流程---->父--->传递给详情页面proper--->页面进入,根据proper拿到更加详细的数据\r\n// 那我直接从url当中拿到的??,不应该这么拿\r\n//应该是父组件传递过来子组件,不对\r\n//路由这里,是不存在父组件嵌套子组件的,\r\n//父组件是--->打开相应的id号的页面-->这样url里面就有响应数据了-->这样就拿到更详细的数据\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nconst Item = Descriptions.Item;\r\nfunction Detail (props) {\r\n  const [result, setResult] = useState()\r\n  let { userId } = useParams();\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    axios.axiosGet({\r\n      url: '/table/list',\r\n      data: {\r\n        params: {\r\n          userId: userId\r\n        }\r\n      }\r\n    }).then((res) => {\r\n      console.log('object :', res.result.list);\r\n      if (res.code === '0') {\r\n        // setResult(res.result)\r\n        // 是在模态框\r\n        // 获取了不能？？？\r\n        let obj = res.result.list.find(item => +item.id === +userId)\r\n        console.log('obj', obj)\r\n        setResult(obj)\r\n      }\r\n    })\r\n  }, [userId])\r\n  let startTime = () => {\r\n    let a = new Date().setTime(result.start_time);\r\n    return <>{moment(a).format('YY年MM月DD日 /  HH点mm分ss')}</>\r\n  }\r\n  let endTime = () => {\r\n    let a = new Date().setTime(result.end_time);\r\n    return <>{moment(a).format('YY年MM月DD日 /  HH点mm分ss')}</>\r\n  }\r\n  return (\r\n    <div className=\"contentOrder\">\r\n      {result ? <>\r\n        <Card title=\"\" className='card'>\r\n          <Button type=\"primary\" onClick={() => { history.goBack() }}>返回</Button>\r\n        </Card>\r\n        <Card title=\"用户详情\">\r\n          <Descriptions title='' bordered>\r\n            <Item label='用户名' span={12}>\r\n              {result.username}\r\n            </Item>\r\n            <Item label='性别' span={2}>\r\n              {result.sex === 1 ? <Badge status=\"processing\" text=\"男\" /> : <Badge status=\"success\" text=\"女\" />}\r\n            </Item>\r\n            <Item label='地址' span={2}>\r\n              {result.address}\r\n            </Item>\r\n            <Item label='生日' span={2}>\r\n              {result.total_time}\r\n            </Item>\r\n            <Item label='状态' span={2}>\r\n              {result.status === 1 ? <Badge status=\"processing\" text=\"男\" /> : <Badge status=\"success\" text=\"女\" />}\r\n            </Item>\r\n            <Item label='开始时间' span={2}>\r\n              {\r\n                result.start_time ? startTime() : ''\r\n              }\r\n            </Item>\r\n            <Item label='结束时间' span={2}>\r\n              {result.start_time ? endTime() : ''}\r\n            </Item>\r\n            <Item label='订单金额' span={2}>\r\n              {1000}\r\n            </Item>\r\n            <Item label='实付金额' span={2}>\r\n              {300}\r\n            </Item>\r\n          </Descriptions>\r\n        </Card></> : (<></>)}\r\n    </div>\r\n  )\r\n}\r\nexport default Detail\r\n// 这个详情页面其实应该是父组件传递过来的值，但是这个由于是路由组件的跳转，所以只能进入页面之后再调用一次API接口进行用户查询\r\n// 但是由于进入这个页面之后又调用了一次API接口，由于是mock的，所以每次进来之后都不一样\r\n","import React, { Component } from 'react'\r\n\r\nexport default class BankForm extends Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport App from './App';\r\nimport Home from './pages/home/Home'\r\nimport Admin from './Admin'\r\nimport Login from './pages/login/Login';\r\nimport Buttons from './pages/ui/buttons/Button';\r\nimport NoMatch from './pages/nomatch/Nomatch';\r\nimport Modals from './pages/ui/modals/Modals';\r\nimport Loadings from './pages/ui/loadings/Loadings';\r\nimport Notification from './pages/ui/notification/Notification';\r\nimport Messages from './pages/ui/message/Message';\r\nimport Tab from './pages/ui/tab/Tab';\r\nimport Gallery from './pages/ui/gallery/Gallery';\r\nimport Carousels from './pages/ui/carousel/Carousel';\r\nimport Checkboxs from './pages/ui/checkbox/checkbox';\r\nimport Pagination from './pages/ui/pagination/Pagination';\r\nimport Timepicker from './pages/ui/timepicker/timepicker';\r\nimport Descriptions from './pages/ui/description/descriptions';\r\nimport Transfers from './pages/ui/transfer/transfer';\r\nimport Trees from './pages/ui/tree/tree';\r\nimport LoginForm from './pages/form/login/Login';\r\nimport RegisterForm from './pages/form/register/Register';\r\nimport BasicTable from './pages/table/basicTable/BasicTable';\r\nimport HighTable from './pages/table/HighTable/HighTable';\r\nimport City from './pages/city/City';\r\nimport Order from './pages/order/Order'\r\nimport User from './pages/user/User'\r\nimport Bar from './pages/echarts/bar'\r\nimport Line from './pages/echarts/line'\r\nimport Pie from './pages/echarts/pie'\r\nimport Permissions from './pages/permission/permissions'\r\nimport Common from './Common.js'\r\nimport orderDeatil from './pages/order/detailInline'\r\nimport userDeatil from './pages/user/detail'\r\nimport BankForm from './pages/bankForm/BankForm';\r\nexport default function router () {\r\n  return (\r\n    <Router>\r\n      {/* 默认打开div,或者主页面 */}\r\n      <App>\r\n        <Switch>\r\n          <Route path='/login' component={Login} />\r\n          {/* 公共页面,第三方页面 */}\r\n          <Route path=\"/common\" render={() => {\r\n            return <Common>\r\n              <Route path=\"/common/order/detail/:orderId\" component={orderDeatil} />\r\n              <Route path=\"/common/user/detail/:userId\" component={userDeatil} />\r\n            </Common>\r\n          }} />\r\n          <Route path='/' render={() => {\r\n            return (\r\n              <Admin>\r\n                <Switch>\r\n                  <Route exact path=\"/\" component={Home}></Route>\r\n                  <Route exact path=\"/home\" component={Home}></Route>\r\n                  <Route path=\"/home\" component={Home}></Route>\r\n                  <Route path='/ui/buttons' component={Buttons} />\r\n                  <Route path='/ui/modals' component={Modals} />\r\n                  <Route path='/ui/loadings' component={Loadings} />\r\n                  <Route path='/ui/notification' component={Notification} />\r\n                  <Route path='/ui/messages' component={Messages} />\r\n                  <Route path='/ui/tabs' component={Tab} />\r\n                  <Route path='/ui/gallery' component={Gallery} />\r\n                  <Route path='/ui/carousel' component={Carousels} />\r\n                  <Route path='/ui/pagination' component={Pagination} />\r\n                  <Route path='/ui/checkboxs' component={Checkboxs} />\r\n                  <Route path='/ui/timepicker' component={Timepicker} />\r\n                  <Route path='/ui/transfer' component={Transfers} />\r\n                  <Route path='/ui/description' component={Descriptions} />\r\n                  <Route path='/ui/tree' component={Trees} />\r\n                  <Route path='/form/login' component={LoginForm} />\r\n                  <Route path='/form/reg' component={RegisterForm} />\r\n                  <Route path='/bankForm' component={BankForm} />\r\n                  <Route path='/table/basic' component={BasicTable} />\r\n                  <Route path='/table/high' component={HighTable} />\r\n                  <Route path=\"/city\" component={City} />\r\n                  <Route path=\"/permission\" component={Permissions} />\r\n                  <Route path=\"/charts/bar\" component={Bar} />\r\n                  <Route path=\"/charts/line\" component={Line} />\r\n                  <Route path=\"/charts/pie\" component={Pie} />\r\n                  <Route path=\"/order\" component={Order} />\r\n                  <Route path=\"/user\" component={User} />\r\n                  {/* <Redirect to='/home'></Redirect> */}\r\n                  <Route component={NoMatch} />\r\n                </Switch>\r\n              </Admin>\r\n            )\r\n          }} />\r\n          <Route path='/order/detail' component={Login} />\r\n        </Switch>\r\n      </App>\r\n    </Router>\r\n  )\r\n}\r\n","import { combineReducers } from 'redux';\r\nexport default combineReducers({\r\n\r\n});","import { all } from 'redux-saga/effects'\r\nfunction* rootSaga () {\r\n  yield all([])\r\n}\r\nexport default rootSaga","import rootReducer from './rootReducer'\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootSaga from '../saga/rootSagas'\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)))\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// import App from './App';\n// import Home from './pages/route-demo/route1/Home';\n// import Home from './pages/route-demo/route2/router';\n// import Home from './pages/route-demo/route3/router';\n// import Home from './pages/route-demo/vivo/router';\n// import Home from './pages/route-demo/vivo2/Router';\n\nimport Router from './router'\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  // <Home />\n  <Provider store={store}>\n    <Router />\n  </Provider>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}